
RFID.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008a  00800200  000020bc  00002150  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080028a  0080028a  000021da  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000021da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002238  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00002278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021fd  00000000  00000000  000023d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000123f  00000000  00000000  000045cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000feb  00000000  00000000  0000580c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000330  00000000  00000000  000067f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000854  00000000  00000000  00006b28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001005  00000000  00000000  0000737c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00008381  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c1       	rjmp	.+562    	; 0x234 <__ctors_end>
       2:	00 00       	nop
       4:	37 c1       	rjmp	.+622    	; 0x274 <__bad_interrupt>
       6:	00 00       	nop
       8:	35 c1       	rjmp	.+618    	; 0x274 <__bad_interrupt>
       a:	00 00       	nop
       c:	33 c1       	rjmp	.+614    	; 0x274 <__bad_interrupt>
       e:	00 00       	nop
      10:	31 c1       	rjmp	.+610    	; 0x274 <__bad_interrupt>
      12:	00 00       	nop
      14:	2f c1       	rjmp	.+606    	; 0x274 <__bad_interrupt>
      16:	00 00       	nop
      18:	2d c1       	rjmp	.+602    	; 0x274 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	2b c1       	rjmp	.+598    	; 0x274 <__bad_interrupt>
      1e:	00 00       	nop
      20:	29 c1       	rjmp	.+594    	; 0x274 <__bad_interrupt>
      22:	00 00       	nop
      24:	27 c1       	rjmp	.+590    	; 0x274 <__bad_interrupt>
      26:	00 00       	nop
      28:	25 c1       	rjmp	.+586    	; 0x274 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	23 c1       	rjmp	.+582    	; 0x274 <__bad_interrupt>
      2e:	00 00       	nop
      30:	21 c1       	rjmp	.+578    	; 0x274 <__bad_interrupt>
      32:	00 00       	nop
      34:	1f c1       	rjmp	.+574    	; 0x274 <__bad_interrupt>
      36:	00 00       	nop
      38:	1d c1       	rjmp	.+570    	; 0x274 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	1b c1       	rjmp	.+566    	; 0x274 <__bad_interrupt>
      3e:	00 00       	nop
      40:	19 c1       	rjmp	.+562    	; 0x274 <__bad_interrupt>
      42:	00 00       	nop
      44:	17 c1       	rjmp	.+558    	; 0x274 <__bad_interrupt>
      46:	00 00       	nop
      48:	15 c1       	rjmp	.+554    	; 0x274 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	13 c1       	rjmp	.+550    	; 0x274 <__bad_interrupt>
      4e:	00 00       	nop
      50:	11 c1       	rjmp	.+546    	; 0x274 <__bad_interrupt>
      52:	00 00       	nop
      54:	0f c1       	rjmp	.+542    	; 0x274 <__bad_interrupt>
      56:	00 00       	nop
      58:	0d c1       	rjmp	.+538    	; 0x274 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0b c1       	rjmp	.+534    	; 0x274 <__bad_interrupt>
      5e:	00 00       	nop
      60:	09 c1       	rjmp	.+530    	; 0x274 <__bad_interrupt>
      62:	00 00       	nop
      64:	07 c1       	rjmp	.+526    	; 0x274 <__bad_interrupt>
      66:	00 00       	nop
      68:	05 c1       	rjmp	.+522    	; 0x274 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	03 c1       	rjmp	.+518    	; 0x274 <__bad_interrupt>
      6e:	00 00       	nop
      70:	01 c1       	rjmp	.+514    	; 0x274 <__bad_interrupt>
      72:	00 00       	nop
      74:	ff c0       	rjmp	.+510    	; 0x274 <__bad_interrupt>
      76:	00 00       	nop
      78:	fd c0       	rjmp	.+506    	; 0x274 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	fb c0       	rjmp	.+502    	; 0x274 <__bad_interrupt>
      7e:	00 00       	nop
      80:	f9 c0       	rjmp	.+498    	; 0x274 <__bad_interrupt>
      82:	00 00       	nop
      84:	f7 c0       	rjmp	.+494    	; 0x274 <__bad_interrupt>
      86:	00 00       	nop
      88:	f5 c0       	rjmp	.+490    	; 0x274 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f3 c0       	rjmp	.+486    	; 0x274 <__bad_interrupt>
      8e:	00 00       	nop
      90:	f1 c0       	rjmp	.+482    	; 0x274 <__bad_interrupt>
      92:	00 00       	nop
      94:	ef c0       	rjmp	.+478    	; 0x274 <__bad_interrupt>
      96:	00 00       	nop
      98:	ed c0       	rjmp	.+474    	; 0x274 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	eb c0       	rjmp	.+470    	; 0x274 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	e9 c0       	rjmp	.+466    	; 0x274 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	e7 c0       	rjmp	.+462    	; 0x274 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	e5 c0       	rjmp	.+458    	; 0x274 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	e3 c0       	rjmp	.+454    	; 0x274 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	e1 c0       	rjmp	.+450    	; 0x274 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	df c0       	rjmp	.+446    	; 0x274 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	dd c0       	rjmp	.+442    	; 0x274 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	db c0       	rjmp	.+438    	; 0x274 <__bad_interrupt>
      be:	00 00       	nop
      c0:	d9 c0       	rjmp	.+434    	; 0x274 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	d7 c0       	rjmp	.+430    	; 0x274 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	d5 c0       	rjmp	.+426    	; 0x274 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	d3 c0       	rjmp	.+422    	; 0x274 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	d1 c0       	rjmp	.+418    	; 0x274 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	cf c0       	rjmp	.+414    	; 0x274 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	cd c0       	rjmp	.+410    	; 0x274 <__bad_interrupt>
      da:	00 00       	nop
      dc:	cb c0       	rjmp	.+406    	; 0x274 <__bad_interrupt>
      de:	00 00       	nop
      e0:	c9 c0       	rjmp	.+402    	; 0x274 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__c.2529>:
     1e6:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     1f6:	47 00                                               G.

000001f8 <pstr_an>:
     1f8:	61 6e 00                                            an.

000001fb <pstr_nfinity>:
     1fb:	6e 66 69 6e 69 74 79 00                             nfinity.

00000203 <pwr_m10>:
     203:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     213:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000021b <pwr_p10>:
     21b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     22b:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d1 e2       	ldi	r29, 0x21	; 33
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	00 e0       	ldi	r16, 0x00	; 0
     242:	0c bf       	out	0x3c, r16	; 60

00000244 <__do_copy_data>:
     244:	12 e0       	ldi	r17, 0x02	; 2
     246:	a0 e0       	ldi	r26, 0x00	; 0
     248:	b2 e0       	ldi	r27, 0x02	; 2
     24a:	ec eb       	ldi	r30, 0xBC	; 188
     24c:	f0 e2       	ldi	r31, 0x20	; 32
     24e:	00 e0       	ldi	r16, 0x00	; 0
     250:	0b bf       	out	0x3b, r16	; 59
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x14>
     254:	07 90       	elpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	aa 38       	cpi	r26, 0x8A	; 138
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0x10>

0000025e <__do_clear_bss>:
     25e:	22 e0       	ldi	r18, 0x02	; 2
     260:	aa e8       	ldi	r26, 0x8A	; 138
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	a0 39       	cpi	r26, 0x90	; 144
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	27 d1       	rcall	.+590    	; 0x4be <main>
     270:	0c 94 5c 10 	jmp	0x20b8	; 0x20b8 <_exit>

00000274 <__bad_interrupt>:
     274:	c5 ce       	rjmp	.-630    	; 0x0 <__vectors>

00000276 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     276:	e2 e0       	ldi	r30, 0x02	; 2
     278:	f1 e0       	ldi	r31, 0x01	; 1
     27a:	80 81       	ld	r24, Z
     27c:	80 62       	ori	r24, 0x20	; 32
     27e:	80 83       	st	Z, r24
     280:	00 00       	nop
     282:	80 81       	ld	r24, Z
     284:	8f 7d       	andi	r24, 0xDF	; 223
     286:	80 83       	st	Z, r24
     288:	08 95       	ret

0000028a <lcd_write>:
     28a:	cf 93       	push	r28
     28c:	c8 2f       	mov	r28, r24
     28e:	66 23       	and	r22, r22
     290:	31 f0       	breq	.+12     	; 0x29e <lcd_write+0x14>
     292:	e2 e0       	ldi	r30, 0x02	; 2
     294:	f1 e0       	ldi	r31, 0x01	; 1
     296:	80 81       	ld	r24, Z
     298:	80 61       	ori	r24, 0x10	; 16
     29a:	80 83       	st	Z, r24
     29c:	05 c0       	rjmp	.+10     	; 0x2a8 <lcd_write+0x1e>
     29e:	e2 e0       	ldi	r30, 0x02	; 2
     2a0:	f1 e0       	ldi	r31, 0x01	; 1
     2a2:	80 81       	ld	r24, Z
     2a4:	8f 7e       	andi	r24, 0xEF	; 239
     2a6:	80 83       	st	Z, r24
     2a8:	e2 e0       	ldi	r30, 0x02	; 2
     2aa:	f1 e0       	ldi	r31, 0x01	; 1
     2ac:	80 81       	ld	r24, Z
     2ae:	87 7f       	andi	r24, 0xF7	; 247
     2b0:	80 83       	st	Z, r24
     2b2:	a1 e0       	ldi	r26, 0x01	; 1
     2b4:	b1 e0       	ldi	r27, 0x01	; 1
     2b6:	8c 91       	ld	r24, X
     2b8:	80 64       	ori	r24, 0x40	; 64
     2ba:	8c 93       	st	X, r24
     2bc:	24 9a       	sbi	0x04, 4	; 4
     2be:	25 9a       	sbi	0x04, 5	; 4
     2c0:	26 9a       	sbi	0x04, 6	; 4
     2c2:	2e 98       	cbi	0x05, 6	; 5
     2c4:	2d 98       	cbi	0x05, 5	; 5
     2c6:	2c 98       	cbi	0x05, 4	; 5
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7b       	andi	r24, 0xBF	; 191
     2cc:	80 83       	st	Z, r24
     2ce:	cc 23       	and	r28, r28
     2d0:	0c f4       	brge	.+2      	; 0x2d4 <lcd_write+0x4a>
     2d2:	2e 9a       	sbi	0x05, 6	; 5
     2d4:	c6 fd       	sbrc	r28, 6
     2d6:	2d 9a       	sbi	0x05, 5	; 5
     2d8:	c5 fd       	sbrc	r28, 5
     2da:	2c 9a       	sbi	0x05, 4	; 5
     2dc:	c4 ff       	sbrs	r28, 4
     2de:	05 c0       	rjmp	.+10     	; 0x2ea <lcd_write+0x60>
     2e0:	e2 e0       	ldi	r30, 0x02	; 2
     2e2:	f1 e0       	ldi	r31, 0x01	; 1
     2e4:	80 81       	ld	r24, Z
     2e6:	80 64       	ori	r24, 0x40	; 64
     2e8:	80 83       	st	Z, r24
     2ea:	c5 df       	rcall	.-118    	; 0x276 <toggle_e>
     2ec:	2e 98       	cbi	0x05, 6	; 5
     2ee:	2d 98       	cbi	0x05, 5	; 5
     2f0:	2c 98       	cbi	0x05, 4	; 5
     2f2:	e2 e0       	ldi	r30, 0x02	; 2
     2f4:	f1 e0       	ldi	r31, 0x01	; 1
     2f6:	80 81       	ld	r24, Z
     2f8:	8f 7b       	andi	r24, 0xBF	; 191
     2fa:	80 83       	st	Z, r24
     2fc:	c3 fd       	sbrc	r28, 3
     2fe:	2e 9a       	sbi	0x05, 6	; 5
     300:	c2 fd       	sbrc	r28, 2
     302:	2d 9a       	sbi	0x05, 5	; 5
     304:	c1 fd       	sbrc	r28, 1
     306:	2c 9a       	sbi	0x05, 4	; 5
     308:	c0 ff       	sbrs	r28, 0
     30a:	05 c0       	rjmp	.+10     	; 0x316 <lcd_write+0x8c>
     30c:	e2 e0       	ldi	r30, 0x02	; 2
     30e:	f1 e0       	ldi	r31, 0x01	; 1
     310:	80 81       	ld	r24, Z
     312:	80 64       	ori	r24, 0x40	; 64
     314:	80 83       	st	Z, r24
     316:	af df       	rcall	.-162    	; 0x276 <toggle_e>
     318:	e2 e0       	ldi	r30, 0x02	; 2
     31a:	f1 e0       	ldi	r31, 0x01	; 1
     31c:	80 81       	ld	r24, Z
     31e:	80 64       	ori	r24, 0x40	; 64
     320:	80 83       	st	Z, r24
     322:	2c 9a       	sbi	0x05, 4	; 5
     324:	2d 9a       	sbi	0x05, 5	; 5
     326:	2e 9a       	sbi	0x05, 6	; 5
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <lcd_read>:
     32c:	88 23       	and	r24, r24
     32e:	31 f0       	breq	.+12     	; 0x33c <lcd_read+0x10>
     330:	e2 e0       	ldi	r30, 0x02	; 2
     332:	f1 e0       	ldi	r31, 0x01	; 1
     334:	80 81       	ld	r24, Z
     336:	80 61       	ori	r24, 0x10	; 16
     338:	80 83       	st	Z, r24
     33a:	05 c0       	rjmp	.+10     	; 0x346 <lcd_read+0x1a>
     33c:	e2 e0       	ldi	r30, 0x02	; 2
     33e:	f1 e0       	ldi	r31, 0x01	; 1
     340:	80 81       	ld	r24, Z
     342:	8f 7e       	andi	r24, 0xEF	; 239
     344:	80 83       	st	Z, r24
     346:	e2 e0       	ldi	r30, 0x02	; 2
     348:	f1 e0       	ldi	r31, 0x01	; 1
     34a:	80 81       	ld	r24, Z
     34c:	88 60       	ori	r24, 0x08	; 8
     34e:	80 83       	st	Z, r24
     350:	a1 e0       	ldi	r26, 0x01	; 1
     352:	b1 e0       	ldi	r27, 0x01	; 1
     354:	8c 91       	ld	r24, X
     356:	8f 7b       	andi	r24, 0xBF	; 191
     358:	8c 93       	st	X, r24
     35a:	24 98       	cbi	0x04, 4	; 4
     35c:	25 98       	cbi	0x04, 5	; 4
     35e:	26 98       	cbi	0x04, 6	; 4
     360:	80 81       	ld	r24, Z
     362:	80 62       	ori	r24, 0x20	; 32
     364:	80 83       	st	Z, r24
     366:	00 00       	nop
     368:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     36c:	86 ff       	sbrs	r24, 6
     36e:	02 c0       	rjmp	.+4      	; 0x374 <lcd_read+0x48>
     370:	80 e1       	ldi	r24, 0x10	; 16
     372:	01 c0       	rjmp	.+2      	; 0x376 <lcd_read+0x4a>
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	1c 99       	sbic	0x03, 4	; 3
     378:	80 62       	ori	r24, 0x20	; 32
     37a:	1d 99       	sbic	0x03, 5	; 3
     37c:	80 64       	ori	r24, 0x40	; 64
     37e:	1e 99       	sbic	0x03, 6	; 3
     380:	80 68       	ori	r24, 0x80	; 128
     382:	e2 e0       	ldi	r30, 0x02	; 2
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	90 81       	ld	r25, Z
     388:	9f 7d       	andi	r25, 0xDF	; 223
     38a:	90 83       	st	Z, r25
     38c:	00 00       	nop
     38e:	90 81       	ld	r25, Z
     390:	90 62       	ori	r25, 0x20	; 32
     392:	90 83       	st	Z, r25
     394:	00 00       	nop
     396:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     39a:	96 fd       	sbrc	r25, 6
     39c:	81 60       	ori	r24, 0x01	; 1
     39e:	1c 99       	sbic	0x03, 4	; 3
     3a0:	82 60       	ori	r24, 0x02	; 2
     3a2:	1d 99       	sbic	0x03, 5	; 3
     3a4:	84 60       	ori	r24, 0x04	; 4
     3a6:	1e 99       	sbic	0x03, 6	; 3
     3a8:	88 60       	ori	r24, 0x08	; 8
     3aa:	e2 e0       	ldi	r30, 0x02	; 2
     3ac:	f1 e0       	ldi	r31, 0x01	; 1
     3ae:	90 81       	ld	r25, Z
     3b0:	9f 7d       	andi	r25, 0xDF	; 223
     3b2:	90 83       	st	Z, r25
     3b4:	08 95       	ret

000003b6 <lcd_waitbusy>:
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	b9 df       	rcall	.-142    	; 0x32c <lcd_read>
     3ba:	88 23       	and	r24, r24
     3bc:	e4 f3       	brlt	.-8      	; 0x3b6 <lcd_waitbusy>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <lcd_waitbusy+0xa>
     3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <lcd_waitbusy+0xc>
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	b3 cf       	rjmp	.-154    	; 0x32c <lcd_read>
     3c6:	08 95       	ret

000003c8 <lcd_command>:
     3c8:	cf 93       	push	r28
     3ca:	c8 2f       	mov	r28, r24
     3cc:	f4 df       	rcall	.-24     	; 0x3b6 <lcd_waitbusy>
     3ce:	60 e0       	ldi	r22, 0x00	; 0
     3d0:	8c 2f       	mov	r24, r28
     3d2:	5b df       	rcall	.-330    	; 0x28a <lcd_write>
     3d4:	cf 91       	pop	r28
     3d6:	08 95       	ret

000003d8 <lcd_gotoxy>:
     3d8:	61 11       	cpse	r22, r1
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <lcd_gotoxy+0xa>
     3dc:	80 58       	subi	r24, 0x80	; 128
     3de:	f4 cf       	rjmp	.-24     	; 0x3c8 <lcd_command>
     3e0:	08 95       	ret
     3e2:	80 54       	subi	r24, 0x40	; 64
     3e4:	f1 cf       	rjmp	.-30     	; 0x3c8 <lcd_command>
     3e6:	08 95       	ret

000003e8 <lcd_clrscr>:
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	ee cf       	rjmp	.-36     	; 0x3c8 <lcd_command>
     3ec:	08 95       	ret

000003ee <lcd_putc>:
     3ee:	cf 93       	push	r28
     3f0:	c8 2f       	mov	r28, r24
     3f2:	e1 df       	rcall	.-62     	; 0x3b6 <lcd_waitbusy>
     3f4:	ca 30       	cpi	r28, 0x0A	; 10
     3f6:	41 f4       	brne	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3f8:	80 34       	cpi	r24, 0x40	; 64
     3fa:	10 f0       	brcs	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	01 c0       	rjmp	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     400:	80 e4       	ldi	r24, 0x40	; 64
     402:	80 58       	subi	r24, 0x80	; 128
     404:	e1 df       	rcall	.-62     	; 0x3c8 <lcd_command>
     406:	03 c0       	rjmp	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     408:	61 e0       	ldi	r22, 0x01	; 1
     40a:	8c 2f       	mov	r24, r28
     40c:	3e df       	rcall	.-388    	; 0x28a <lcd_write>
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <lcd_puts>:
     412:	cf 93       	push	r28
     414:	df 93       	push	r29
     416:	ec 01       	movw	r28, r24
     418:	21 96       	adiw	r28, 0x01	; 1
     41a:	fc 01       	movw	r30, r24
     41c:	80 81       	ld	r24, Z
     41e:	88 23       	and	r24, r24
     420:	21 f0       	breq	.+8      	; 0x42a <lcd_puts+0x18>
     422:	e5 df       	rcall	.-54     	; 0x3ee <lcd_putc>
     424:	89 91       	ld	r24, Y+
     426:	81 11       	cpse	r24, r1
     428:	fc cf       	rjmp	.-8      	; 0x422 <lcd_puts+0x10>
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     430:	1f 93       	push	r17
     432:	cf 93       	push	r28
     434:	df 93       	push	r29
     436:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     438:	e1 e0       	ldi	r30, 0x01	; 1
     43a:	f1 e0       	ldi	r31, 0x01	; 1
     43c:	80 81       	ld	r24, Z
     43e:	80 61       	ori	r24, 0x10	; 16
     440:	80 83       	st	Z, r24
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     442:	80 81       	ld	r24, Z
     444:	88 60       	ori	r24, 0x08	; 8
     446:	80 83       	st	Z, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     448:	80 81       	ld	r24, Z
     44a:	80 62       	ori	r24, 0x20	; 32
     44c:	80 83       	st	Z, r24
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     44e:	80 81       	ld	r24, Z
     450:	80 64       	ori	r24, 0x40	; 64
     452:	80 83       	st	Z, r24
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     454:	24 9a       	sbi	0x04, 4	; 4
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     456:	25 9a       	sbi	0x04, 5	; 4
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     458:	26 9a       	sbi	0x04, 6	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     45a:	8f e9       	ldi	r24, 0x9F	; 159
     45c:	9f e0       	ldi	r25, 0x0F	; 15
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <lcd_init+0x2e>
     462:	00 c0       	rjmp	.+0      	; 0x464 <lcd_init+0x34>
     464:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     466:	2c 9a       	sbi	0x05, 4	; 5
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     468:	c2 e0       	ldi	r28, 0x02	; 2
     46a:	d1 e0       	ldi	r29, 0x01	; 1
     46c:	88 81       	ld	r24, Y
     46e:	80 64       	ori	r24, 0x40	; 64
     470:	88 83       	st	Y, r24
    lcd_e_toggle();
     472:	01 df       	rcall	.-510    	; 0x276 <toggle_e>
     474:	81 ee       	ldi	r24, 0xE1	; 225
     476:	94 e0       	ldi	r25, 0x04	; 4
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <lcd_init+0x48>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <lcd_init+0x4e>
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     47e:	00 00       	nop
     480:	fa de       	rcall	.-524    	; 0x276 <toggle_e>
     482:	95 e1       	ldi	r25, 0x15	; 21
     484:	9a 95       	dec	r25
     486:	f1 f7       	brne	.-4      	; 0x484 <lcd_init+0x54>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     488:	00 00       	nop
     48a:	f5 de       	rcall	.-534    	; 0x276 <toggle_e>
     48c:	85 e1       	ldi	r24, 0x15	; 21
     48e:	8a 95       	dec	r24
     490:	f1 f7       	brne	.-4      	; 0x48e <lcd_init+0x5e>
     492:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     494:	88 81       	ld	r24, Y
     496:	8f 7b       	andi	r24, 0xBF	; 191
    lcd_e_toggle();
     498:	88 83       	st	Y, r24
     49a:	ed de       	rcall	.-550    	; 0x276 <toggle_e>
     49c:	95 e1       	ldi	r25, 0x15	; 21
     49e:	9a 95       	dec	r25
     4a0:	f1 f7       	brne	.-4      	; 0x49e <lcd_init+0x6e>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     4a2:	00 00       	nop
     4a4:	88 e2       	ldi	r24, 0x28	; 40
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     4a6:	90 df       	rcall	.-224    	; 0x3c8 <lcd_command>
     4a8:	88 e0       	ldi	r24, 0x08	; 8
    lcd_clrscr();                           /* display clear                */ 
     4aa:	8e df       	rcall	.-228    	; 0x3c8 <lcd_command>
     4ac:	9d df       	rcall	.-198    	; 0x3e8 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     4ae:	86 e0       	ldi	r24, 0x06	; 6
     4b0:	8b df       	rcall	.-234    	; 0x3c8 <lcd_command>
     4b2:	81 2f       	mov	r24, r17
    lcd_command(dispAttr);                  /* display/cursor control       */
     4b4:	89 df       	rcall	.-238    	; 0x3c8 <lcd_command>
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28

}/* lcd_init */
     4ba:	1f 91       	pop	r17
     4bc:	08 95       	ret

000004be <main>:
#include "mfrc522/mfrc522.h"
#include "lcd/lcd.h"


int main()
{
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	cd b7       	in	r28, 0x3d	; 61
     4c4:	de b7       	in	r29, 0x3e	; 62
     4c6:	ce 5a       	subi	r28, 0xAE	; 174
     4c8:	d1 09       	sbc	r29, r1
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de bf       	out	0x3e, r29	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd bf       	out	0x3d, r28	; 61
	uint8_t card[8] = {208, 166, 96, 37, 51, 0, 0, 0};
     4d4:	88 e0       	ldi	r24, 0x08	; 8
     4d6:	ee e0       	ldi	r30, 0x0E	; 14
     4d8:	f2 e0       	ldi	r31, 0x02	; 2
     4da:	de 01       	movw	r26, r28
     4dc:	11 96       	adiw	r26, 0x01	; 1
     4de:	01 90       	ld	r0, Z+
     4e0:	0d 92       	st	X+, r0
     4e2:	8a 95       	dec	r24
     4e4:	e1 f7       	brne	.-8      	; 0x4de <main+0x20>
	UartInit();
     4e6:	a9 d2       	rcall	.+1362   	; 0xa3a <UartInit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4e8:	2f ef       	ldi	r18, 0xFF	; 255
     4ea:	80 e7       	ldi	r24, 0x70	; 112
     4ec:	92 e0       	ldi	r25, 0x02	; 2
     4ee:	21 50       	subi	r18, 0x01	; 1
     4f0:	80 40       	sbci	r24, 0x00	; 0
     4f2:	90 40       	sbci	r25, 0x00	; 0
     4f4:	e1 f7       	brne	.-8      	; 0x4ee <main+0x30>
     4f6:	00 c0       	rjmp	.+0      	; 0x4f8 <main+0x3a>
	char buffer[150];
	uint8_t byte;
	uint8_t str[MAX_LEN];
	_delay_ms(50);
	
	spi_init();
     4f8:	00 00       	nop
	/* initialize display, cursor on */
	lcd_init(LCD_DISP_ON);
     4fa:	b3 d2       	rcall	.+1382   	; 0xa62 <spi_init>
     4fc:	8c e0       	ldi	r24, 0x0C	; 12

	/* clear display and home cursor */
	lcd_clrscr();
     4fe:	98 df       	rcall	.-208    	; 0x430 <lcd_init>
     500:	73 df       	rcall	.-282    	; 0x3e8 <lcd_clrscr>
     502:	ef ef       	ldi	r30, 0xFF	; 255
     504:	f3 ed       	ldi	r31, 0xD3	; 211
     506:	20 e3       	ldi	r18, 0x30	; 48
     508:	e1 50       	subi	r30, 0x01	; 1
     50a:	f0 40       	sbci	r31, 0x00	; 0
     50c:	20 40       	sbci	r18, 0x00	; 0
     50e:	e1 f7       	brne	.-8      	; 0x508 <main+0x4a>
	_delay_ms(1000);
	
	//init reader
	mfrc522_init();
     510:	00 c0       	rjmp	.+0      	; 0x512 <main+0x54>
     512:	00 00       	nop
	
	//check version of the reader
	byte = mfrc522_read(VersionReg);
     514:	bf d0       	rcall	.+382    	; 0x694 <mfrc522_init>
     516:	87 e3       	ldi	r24, 0x37	; 55
     518:	b0 d0       	rcall	.+352    	; 0x67a <mfrc522_read>
	
	//printf("%d", byte);
	
	//Version numbers can be found in the Readme
	if(byte == 0x92)
     51a:	82 39       	cpi	r24, 0x92	; 146
     51c:	49 f4       	brne	.+18     	; 0x530 <main+0x72>
	{
		printf("MIFARE RC522v2\r\n");
     51e:	86 e1       	ldi	r24, 0x16	; 22
     520:	92 e0       	ldi	r25, 0x02	; 2
     522:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
		printf("Detected\r\n");
     526:	86 e2       	ldi	r24, 0x26	; 38
     528:	92 e0       	ldi	r25, 0x02	; 2
     52a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
     52e:	1c c0       	rjmp	.+56     	; 0x568 <main+0xaa>
	}else if(byte == 0x91 || byte==0x90)
     530:	90 e7       	ldi	r25, 0x70	; 112
     532:	98 0f       	add	r25, r24
     534:	92 30       	cpi	r25, 0x02	; 2
     536:	48 f4       	brcc	.+18     	; 0x54a <main+0x8c>
	{
		printf("MIFARE RC522v1\r\n");
     538:	80 e3       	ldi	r24, 0x30	; 48
     53a:	92 e0       	ldi	r25, 0x02	; 2
     53c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
		printf("Detected\r\n");
     540:	86 e2       	ldi	r24, 0x26	; 38
     542:	92 e0       	ldi	r25, 0x02	; 2
     544:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
     548:	0f c0       	rjmp	.+30     	; 0x568 <main+0xaa>
	}else if(byte == 0x88)
     54a:	88 38       	cpi	r24, 0x88	; 136
     54c:	49 f4       	brne	.+18     	; 0x560 <main+0xa2>
	{
		printf("RFID-RD522\r\n");
     54e:	80 e4       	ldi	r24, 0x40	; 64
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
		printf("Detected\r\n");
     556:	86 e2       	ldi	r24, 0x26	; 38
     558:	92 e0       	ldi	r25, 0x02	; 2
     55a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
     55e:	04 c0       	rjmp	.+8      	; 0x568 <main+0xaa>
	}
	else
	{
		printf("No reader found\r\n");
     560:	8c e4       	ldi	r24, 0x4C	; 76
     562:	92 e0       	ldi	r25, 0x02	; 2
     564:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
     568:	8f ef       	ldi	r24, 0xFF	; 255
     56a:	9d e3       	ldi	r25, 0x3D	; 61
     56c:	e9 e4       	ldi	r30, 0x49	; 73
     56e:	81 50       	subi	r24, 0x01	; 1
     570:	90 40       	sbci	r25, 0x00	; 0
     572:	e0 40       	sbci	r30, 0x00	; 0
     574:	e1 f7       	brne	.-8      	; 0x56e <main+0xb0>
     576:	00 c0       	rjmp	.+0      	; 0x578 <main+0xba>
     578:	00 00       	nop
					lcd_puts("Unauthorized");
				}						
			}
			else
			{
				printf("Error");
     57a:	0f 2e       	mov	r0, r31
     57c:	f4 e8       	ldi	r31, 0x84	; 132
     57e:	6f 2e       	mov	r6, r31
     580:	f2 e0       	ldi	r31, 0x02	; 2
     582:	7f 2e       	mov	r7, r31
     584:	f0 2d       	mov	r31, r0
				if (Validate_Card(&card, &str))
				{					
					printf("Authorized\r\n");
					for(byte=0;byte<8;byte++)
					{
						position += sprintf(&buffer[position], "%i", str[byte]);
     586:	0f 2e       	mov	r0, r31
     588:	f9 e6       	ldi	r31, 0x69	; 105
     58a:	cf 2e       	mov	r12, r31
     58c:	f2 e0       	ldi	r31, 0x02	; 2
     58e:	df 2e       	mov	r13, r31
     590:	f0 2d       	mov	r31, r0
     592:	4e 01       	movw	r8, r28
     594:	f9 e0       	ldi	r31, 0x09	; 9
     596:	8f 0e       	add	r8, r31
     598:	91 1c       	adc	r9, r1
     59a:	48 2c       	mov	r4, r8
	}
	
	_delay_ms(1500);	
	
	while(1){
		byte = mfrc522_request(PICC_REQALL,str);
     59c:	59 2c       	mov	r5, r9
     59e:	be 01       	movw	r22, r28
     5a0:	61 56       	subi	r22, 0x61	; 97
     5a2:	7f 4f       	sbci	r23, 0xFF	; 255
     5a4:	82 e5       	ldi	r24, 0x52	; 82
		
		if(byte == CARD_FOUND)
     5a6:	a9 d1       	rcall	.+850    	; 0x8fa <mfrc522_request>
     5a8:	81 30       	cpi	r24, 0x01	; 1
     5aa:	09 f0       	breq	.+2      	; 0x5ae <main+0xf0>
		{
			int position = 0;
			byte = mfrc522_get_card_serial(str);
     5ac:	51 c0       	rjmp	.+162    	; 0x650 <main+0x192>
     5ae:	ce 01       	movw	r24, r28
     5b0:	81 56       	subi	r24, 0x61	; 97
     5b2:	9f 4f       	sbci	r25, 0xFF	; 255
     5b4:	d4 d1       	rcall	.+936    	; 0x95e <mfrc522_get_card_serial>
			if(byte == CARD_FOUND)
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	09 f0       	breq	.+2      	; 0x5bc <main+0xfe>
			{	
				if (Validate_Card(&card, &str))
     5ba:	44 c0       	rjmp	.+136    	; 0x644 <main+0x186>
     5bc:	be 01       	movw	r22, r28
     5be:	61 56       	subi	r22, 0x61	; 97
     5c0:	7f 4f       	sbci	r23, 0xFF	; 255
     5c2:	ce 01       	movw	r24, r28
     5c4:	01 96       	adiw	r24, 0x01	; 1
     5c6:	01 d2       	rcall	.+1026   	; 0x9ca <Validate_Card>
     5c8:	89 2b       	or	r24, r25
     5ca:	a1 f1       	breq	.+104    	; 0x634 <main+0x176>
				{					
					printf("Authorized\r\n");
     5cc:	8d e5       	ldi	r24, 0x5D	; 93
     5ce:	92 e0       	ldi	r25, 0x02	; 2
     5d0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <puts>
     5d4:	8e 01       	movw	r16, r28
     5d6:	01 56       	subi	r16, 0x61	; 97
     5d8:	1f 4f       	sbci	r17, 0xFF	; 255
     5da:	58 01       	movw	r10, r16
     5dc:	28 e0       	ldi	r18, 0x08	; 8
     5de:	a2 0e       	add	r10, r18
     5e0:	b1 1c       	adc	r11, r1
	while(1){
		byte = mfrc522_request(PICC_REQALL,str);
		
		if(byte == CARD_FOUND)
		{
			int position = 0;
     5e2:	e1 2c       	mov	r14, r1
     5e4:	f1 2c       	mov	r15, r1
				if (Validate_Card(&card, &str))
				{					
					printf("Authorized\r\n");
					for(byte=0;byte<8;byte++)
					{
						position += sprintf(&buffer[position], "%i", str[byte]);
     5e6:	f8 01       	movw	r30, r16
     5e8:	81 91       	ld	r24, Z+
     5ea:	8f 01       	movw	r16, r30
     5ec:	1f 92       	push	r1
     5ee:	8f 93       	push	r24
     5f0:	df 92       	push	r13
     5f2:	cf 92       	push	r12
     5f4:	c4 01       	movw	r24, r8
     5f6:	8e 0d       	add	r24, r14
     5f8:	9f 1d       	adc	r25, r15
     5fa:	9f 93       	push	r25
     5fc:	8f 93       	push	r24
     5fe:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <sprintf>
     602:	e8 0e       	add	r14, r24
     604:	f9 1e       	adc	r15, r25
			if(byte == CARD_FOUND)
			{	
				if (Validate_Card(&card, &str))
				{					
					printf("Authorized\r\n");
					for(byte=0;byte<8;byte++)
     606:	0f 90       	pop	r0
     608:	0f 90       	pop	r0
     60a:	0f 90       	pop	r0
     60c:	0f 90       	pop	r0
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
					{
						position += sprintf(&buffer[position], "%i", str[byte]);
					}
					lcd_clrscr();
     612:	0a 15       	cp	r16, r10
					lcd_gotoxy(0,0);
     614:	1b 05       	cpc	r17, r11
     616:	39 f7       	brne	.-50     	; 0x5e6 <main+0x128>
     618:	e7 de       	rcall	.-562    	; 0x3e8 <lcd_clrscr>
					lcd_puts("Authorized");
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	dc de       	rcall	.-584    	; 0x3d8 <lcd_gotoxy>
					lcd_gotoxy(0,1);
     620:	8c e6       	ldi	r24, 0x6C	; 108
     622:	92 e0       	ldi	r25, 0x02	; 2
     624:	f6 de       	rcall	.-532    	; 0x412 <lcd_puts>
					lcd_puts(buffer);
     626:	61 e0       	ldi	r22, 0x01	; 1
     628:	80 e0       	ldi	r24, 0x00	; 0
     62a:	d6 de       	rcall	.-596    	; 0x3d8 <lcd_gotoxy>
     62c:	84 2d       	mov	r24, r4
     62e:	95 2d       	mov	r25, r5
				}
				else
				{
					lcd_clrscr();
     630:	f0 de       	rcall	.-544    	; 0x412 <lcd_puts>
     632:	0e c0       	rjmp	.+28     	; 0x650 <main+0x192>
					lcd_gotoxy(0,0);
     634:	d9 de       	rcall	.-590    	; 0x3e8 <lcd_clrscr>
     636:	60 e0       	ldi	r22, 0x00	; 0
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	ce de       	rcall	.-612    	; 0x3d8 <lcd_gotoxy>
					lcd_puts("Unauthorized");
     63c:	87 e7       	ldi	r24, 0x77	; 119
     63e:	92 e0       	ldi	r25, 0x02	; 2
     640:	e8 de       	rcall	.-560    	; 0x412 <lcd_puts>
     642:	06 c0       	rjmp	.+12     	; 0x650 <main+0x192>
     644:	7f 92       	push	r7
				}						
			}
			else
			{
				printf("Error");
     646:	6f 92       	push	r6
     648:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <printf>
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	ff ef       	ldi	r31, 0xFF	; 255
     652:	29 e6       	ldi	r18, 0x69	; 105
     654:	88 e1       	ldi	r24, 0x18	; 24
     656:	f1 50       	subi	r31, 0x01	; 1
     658:	20 40       	sbci	r18, 0x00	; 0
     65a:	80 40       	sbci	r24, 0x00	; 0
     65c:	e1 f7       	brne	.-8      	; 0x656 <main+0x198>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <main+0x1a2>
     660:	00 00       	nop
     662:	9d cf       	rjmp	.-198    	; 0x59e <main+0xe0>

00000664 <mfrc522_write>:
		mfrc522_write(TxControlReg,byte|0x03);
	}
}

void mfrc522_write(uint8_t reg, uint8_t data)
{
     664:	cf 93       	push	r28
     666:	c6 2f       	mov	r28, r22
	ENABLE_CHIP();
     668:	28 98       	cbi	0x05, 0	; 5
	spi_transmit((reg<<1)&0x7E);
     66a:	88 0f       	add	r24, r24
     66c:	8e 77       	andi	r24, 0x7E	; 126
     66e:	00 d2       	rcall	.+1024   	; 0xa70 <spi_transmit>
	spi_transmit(data);
     670:	8c 2f       	mov	r24, r28
     672:	fe d1       	rcall	.+1020   	; 0xa70 <spi_transmit>
	DISABLE_CHIP();
     674:	28 9a       	sbi	0x05, 0	; 5
}
     676:	cf 91       	pop	r28
     678:	08 95       	ret

0000067a <mfrc522_read>:

uint8_t mfrc522_read(uint8_t reg)
{
	uint8_t data;	
	ENABLE_CHIP();
     67a:	28 98       	cbi	0x05, 0	; 5
	spi_transmit(((reg<<1)&0x7E)|0x80);
     67c:	88 0f       	add	r24, r24
     67e:	8e 77       	andi	r24, 0x7E	; 126
     680:	80 68       	ori	r24, 0x80	; 128
     682:	f6 d1       	rcall	.+1004   	; 0xa70 <spi_transmit>
	data = spi_transmit(0x00);
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	f4 d1       	rcall	.+1000   	; 0xa70 <spi_transmit>
	DISABLE_CHIP();
     688:	28 9a       	sbi	0x05, 0	; 5
	return data;
}
     68a:	08 95       	ret

0000068c <mfrc522_reset>:

void mfrc522_reset()
{
	mfrc522_write(CommandReg,SoftReset_CMD);
     68c:	6f e0       	ldi	r22, 0x0F	; 15
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	e9 cf       	rjmp	.-46     	; 0x664 <mfrc522_write>
     692:	08 95       	ret

00000694 <mfrc522_init>:
#define F_CPU 16000000ul

void mfrc522_init()
{
	uint8_t byte;
	mfrc522_reset();
     694:	fb df       	rcall	.-10     	; 0x68c <mfrc522_reset>
	
	mfrc522_write(TModeReg, 0x8D);
     696:	6d e8       	ldi	r22, 0x8D	; 141
     698:	8a e2       	ldi	r24, 0x2A	; 42
     69a:	e4 df       	rcall	.-56     	; 0x664 <mfrc522_write>
    mfrc522_write(TPrescalerReg, 0x3E);
     69c:	6e e3       	ldi	r22, 0x3E	; 62
     69e:	8b e2       	ldi	r24, 0x2B	; 43
     6a0:	e1 df       	rcall	.-62     	; 0x664 <mfrc522_write>
    mfrc522_write(TReloadReg_1, 30);   
     6a2:	6e e1       	ldi	r22, 0x1E	; 30
     6a4:	8c e2       	ldi	r24, 0x2C	; 44
     6a6:	de df       	rcall	.-68     	; 0x664 <mfrc522_write>
    mfrc522_write(TReloadReg_2, 0);	
     6a8:	60 e0       	ldi	r22, 0x00	; 0
     6aa:	8d e2       	ldi	r24, 0x2D	; 45
     6ac:	db df       	rcall	.-74     	; 0x664 <mfrc522_write>
	mfrc522_write(TxASKReg, 0x40);	
     6ae:	60 e4       	ldi	r22, 0x40	; 64
     6b0:	85 e1       	ldi	r24, 0x15	; 21
	mfrc522_write(ModeReg, 0x3D);
     6b2:	d8 df       	rcall	.-80     	; 0x664 <mfrc522_write>
     6b4:	6d e3       	ldi	r22, 0x3D	; 61
     6b6:	81 e1       	ldi	r24, 0x11	; 17
     6b8:	d5 df       	rcall	.-86     	; 0x664 <mfrc522_write>
	
	byte = mfrc522_read(TxControlReg);
     6ba:	84 e1       	ldi	r24, 0x14	; 20
     6bc:	de df       	rcall	.-68     	; 0x67a <mfrc522_read>
	if(!(byte&0x03))
     6be:	98 2f       	mov	r25, r24
     6c0:	93 70       	andi	r25, 0x03	; 3
     6c2:	21 f4       	brne	.+8      	; 0x6cc <mfrc522_init+0x38>
	{
		mfrc522_write(TxControlReg,byte|0x03);
     6c4:	68 2f       	mov	r22, r24
     6c6:	63 60       	ori	r22, 0x03	; 3
     6c8:	84 e1       	ldi	r24, 0x14	; 20
     6ca:	cc cf       	rjmp	.-104    	; 0x664 <mfrc522_write>
     6cc:	08 95       	ret

000006ce <mfrc522_to_card>:
     6ce:	3f 92       	push	r3
   
	return status;
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
     6d0:	4f 92       	push	r4
     6d2:	5f 92       	push	r5
     6d4:	6f 92       	push	r6
     6d6:	7f 92       	push	r7
     6d8:	8f 92       	push	r8
     6da:	9f 92       	push	r9
     6dc:	af 92       	push	r10
     6de:	bf 92       	push	r11
     6e0:	cf 92       	push	r12
     6e2:	df 92       	push	r13
     6e4:	ef 92       	push	r14
     6e6:	ff 92       	push	r15
     6e8:	0f 93       	push	r16
     6ea:	1f 93       	push	r17
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
     6f0:	98 2e       	mov	r9, r24
     6f2:	f6 2e       	mov	r15, r22
     6f4:	e7 2e       	mov	r14, r23
     6f6:	44 2e       	mov	r4, r20
     6f8:	82 2e       	mov	r8, r18
     6fa:	33 2e       	mov	r3, r19
     6fc:	58 01       	movw	r10, r16
    uint8_t lastBits;
    uint8_t n;
    uint8_t	tmp;
    uint32_t i;

    switch (cmd)
     6fe:	8c e0       	ldi	r24, 0x0C	; 12
     700:	98 16       	cp	r9, r24
     702:	09 f4       	brne	.+2      	; 0x706 <mfrc522_to_card+0x38>
     704:	ba c0       	rjmp	.+372    	; 0x87a <mfrc522_to_card+0x1ac>
     706:	ee e0       	ldi	r30, 0x0E	; 14
     708:	9e 12       	cpse	r9, r30
     70a:	03 c0       	rjmp	.+6      	; 0x712 <mfrc522_to_card+0x44>
    {
        case MFAuthent_CMD:		//Certification cards close
		{
			irqEn = 0x12;
			waitIRq = 0x10;
     70c:	10 e1       	ldi	r17, 0x10	; 16

    switch (cmd)
    {
        case MFAuthent_CMD:		//Certification cards close
		{
			irqEn = 0x12;
     70e:	02 e1       	ldi	r16, 0x12	; 18
     710:	02 c0       	rjmp	.+4      	; 0x716 <mfrc522_to_card+0x48>

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
    uint8_t irqEn = 0x00;
    uint8_t waitIRq = 0x00;
     712:	10 e0       	ldi	r17, 0x00	; 0
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
    uint8_t irqEn = 0x00;
     714:	00 e0       	ldi	r16, 0x00	; 0
		default:
			break;
    }
   
    //mfrc522_write(ComIEnReg, irqEn|0x80);	//Interrupt request
    n=mfrc522_read(ComIrqReg);
     716:	84 e0       	ldi	r24, 0x04	; 4
     718:	b0 df       	rcall	.-160    	; 0x67a <mfrc522_read>
    mfrc522_write(ComIrqReg,n&(~0x80));//clear all interrupt bits
     71a:	68 2f       	mov	r22, r24
     71c:	6f 77       	andi	r22, 0x7F	; 127
     71e:	84 e0       	ldi	r24, 0x04	; 4
     720:	a1 df       	rcall	.-190    	; 0x664 <mfrc522_write>
    n=mfrc522_read(FIFOLevelReg);
     722:	8a e0       	ldi	r24, 0x0A	; 10
     724:	aa df       	rcall	.-172    	; 0x67a <mfrc522_read>
     726:	68 2f       	mov	r22, r24
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
     728:	60 68       	ori	r22, 0x80	; 128
     72a:	8a e0       	ldi	r24, 0x0A	; 10
     72c:	9b df       	rcall	.-202    	; 0x664 <mfrc522_write>
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	81 e0       	ldi	r24, 0x01	; 1
     732:	98 df       	rcall	.-208    	; 0x664 <mfrc522_write>
     734:	51 2c       	mov	r5, r1

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     736:	61 2c       	mov	r6, r1
     738:	71 2c       	mov	r7, r1
     73a:	41 14       	cp	r4, r1
     73c:	51 04       	cpc	r5, r1
     73e:	61 04       	cpc	r6, r1
     740:	71 04       	cpc	r7, r1
     742:	19 f4       	brne	.+6      	; 0x74a <mfrc522_to_card+0x7c>
     744:	14 c0       	rjmp	.+40     	; 0x76e <mfrc522_to_card+0xa0>
     746:	10 e3       	ldi	r17, 0x30	; 48
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
			waitIRq = 0x30;
     748:	07 e7       	ldi	r16, 0x77	; 119
			waitIRq = 0x10;
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
     74a:	cf 2d       	mov	r28, r15
     74c:	de 2d       	mov	r29, r14
     74e:	c1 2c       	mov	r12, r1
     750:	d1 2c       	mov	r13, r1
     752:	76 01       	movw	r14, r12
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
     754:	69 91       	ld	r22, Y+
     756:	89 e0       	ldi	r24, 0x09	; 9
     758:	85 df       	rcall	.-246    	; 0x664 <mfrc522_write>
     75a:	ff ef       	ldi	r31, 0xFF	; 255
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     75c:	cf 1a       	sub	r12, r31
     75e:	df 0a       	sbc	r13, r31
     760:	ef 0a       	sbc	r14, r31
     762:	ff 0a       	sbc	r15, r31
     764:	c4 14       	cp	r12, r4
     766:	d5 04       	cpc	r13, r5
     768:	e6 04       	cpc	r14, r6
     76a:	f7 04       	cpc	r15, r7
     76c:	98 f3       	brcs	.-26     	; 0x754 <mfrc522_to_card+0x86>
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
	}

	//Execute the cmd
	mfrc522_write(CommandReg, cmd);
     76e:	69 2d       	mov	r22, r9
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	78 df       	rcall	.-272    	; 0x664 <mfrc522_write>
    if (cmd == Transceive_CMD)
     774:	8c e0       	ldi	r24, 0x0C	; 12
     776:	98 12       	cpse	r9, r24
    {    
		n=mfrc522_read(BitFramingReg);
     778:	06 c0       	rjmp	.+12     	; 0x786 <mfrc522_to_card+0xb8>
     77a:	8d e0       	ldi	r24, 0x0D	; 13
		mfrc522_write(BitFramingReg,n|0x80);  
     77c:	7e df       	rcall	.-260    	; 0x67a <mfrc522_read>
     77e:	68 2f       	mov	r22, r24
     780:	60 68       	ori	r22, 0x80	; 128
     782:	8d e0       	ldi	r24, 0x0D	; 13
	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
    do 
    {
		//CommIrqReg[7..0]
		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
        n = mfrc522_read(ComIrqReg);
     784:	6f df       	rcall	.-290    	; 0x664 <mfrc522_write>
     786:	84 e0       	ldi	r24, 0x04	; 4
     788:	78 df       	rcall	.-272    	; 0x67a <mfrc522_read>
     78a:	f8 2e       	mov	r15, r24
     78c:	c0 e0       	ldi	r28, 0x00	; 0
     78e:	d0 e0       	ldi	r29, 0x00	; 0
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));
     790:	11 60       	ori	r17, 0x01	; 1
     792:	09 c0       	rjmp	.+18     	; 0x7a6 <mfrc522_to_card+0xd8>
	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
    do 
    {
		//CommIrqReg[7..0]
		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
        n = mfrc522_read(ComIrqReg);
     794:	84 e0       	ldi	r24, 0x04	; 4
     796:	71 df       	rcall	.-286    	; 0x67a <mfrc522_read>
     798:	f8 2e       	mov	r15, r24
     79a:	21 96       	adiw	r28, 0x01	; 1
     79c:	cf 3c       	cpi	r28, 0xCF	; 207
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));
     79e:	e7 e0       	ldi	r30, 0x07	; 7
     7a0:	de 07       	cpc	r29, r30
     7a2:	09 f4       	brne	.+2      	; 0x7a6 <mfrc522_to_card+0xd8>
     7a4:	83 c0       	rjmp	.+262    	; 0x8ac <mfrc522_to_card+0x1de>
     7a6:	81 2f       	mov	r24, r17
     7a8:	8f 21       	and	r24, r15
     7aa:	a1 f3       	breq	.-24     	; 0x794 <mfrc522_to_card+0xc6>
     7ac:	87 c0       	rjmp	.+270    	; 0x8bc <mfrc522_to_card+0x1ee>
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
        {
            status = CARD_FOUND;
            if (n & irqEn & 0x01)
     7ae:	01 70       	andi	r16, 0x01	; 1
     7b0:	f0 22       	and	r15, r16
            {   
				status = CARD_NOT_FOUND;			//??   
     7b2:	11 f0       	breq	.+4      	; 0x7b8 <mfrc522_to_card+0xea>
     7b4:	c2 e0       	ldi	r28, 0x02	; 2
	
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
        {
            status = CARD_FOUND;
     7b6:	01 c0       	rjmp	.+2      	; 0x7ba <mfrc522_to_card+0xec>
            if (n & irqEn & 0x01)
            {   
				status = CARD_NOT_FOUND;			//??   
			}

            if (cmd == Transceive_CMD)
     7b8:	c1 e0       	ldi	r28, 0x01	; 1
     7ba:	fc e0       	ldi	r31, 0x0C	; 12
     7bc:	9f 12       	cpse	r9, r31
            {
               	n = mfrc522_read(FIFOLevelReg);
     7be:	8a c0       	rjmp	.+276    	; 0x8d4 <mfrc522_to_card+0x206>
     7c0:	8a e0       	ldi	r24, 0x0A	; 10
     7c2:	5b df       	rcall	.-330    	; 0x67a <mfrc522_read>
     7c4:	48 2e       	mov	r4, r24
              	lastBits = mfrc522_read(ControlReg) & 0x07;
     7c6:	8c e0       	ldi	r24, 0x0C	; 12
     7c8:	58 df       	rcall	.-336    	; 0x67a <mfrc522_read>
     7ca:	28 2f       	mov	r18, r24
     7cc:	27 70       	andi	r18, 0x07	; 7
     7ce:	a9 f0       	breq	.+42     	; 0x7fa <mfrc522_to_card+0x12c>
                if (lastBits)
     7d0:	84 2d       	mov	r24, r4
                {   
					*back_data_len = (n-1)*8 + lastBits;   
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	01 97       	sbiw	r24, 0x01	; 1
     7d6:	88 0f       	add	r24, r24
     7d8:	99 1f       	adc	r25, r25
     7da:	88 0f       	add	r24, r24
     7dc:	99 1f       	adc	r25, r25
     7de:	88 0f       	add	r24, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	82 0f       	add	r24, r18
     7e4:	91 1d       	adc	r25, r1
     7e6:	09 2e       	mov	r0, r25
     7e8:	00 0c       	add	r0, r0
     7ea:	aa 0b       	sbc	r26, r26
     7ec:	bb 0b       	sbc	r27, r27
     7ee:	f5 01       	movw	r30, r10
     7f0:	80 83       	st	Z, r24
     7f2:	91 83       	std	Z+1, r25	; 0x01
     7f4:	a2 83       	std	Z+2, r26	; 0x02
     7f6:	b3 83       	std	Z+3, r27	; 0x03
     7f8:	11 c0       	rjmp	.+34     	; 0x81c <mfrc522_to_card+0x14e>
     7fa:	84 2d       	mov	r24, r4
				}
                else
                {   
					*back_data_len = n*8;   
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	88 0f       	add	r24, r24
     800:	99 1f       	adc	r25, r25
     802:	88 0f       	add	r24, r24
     804:	99 1f       	adc	r25, r25
     806:	88 0f       	add	r24, r24
     808:	99 1f       	adc	r25, r25
     80a:	09 2e       	mov	r0, r25
     80c:	00 0c       	add	r0, r0
     80e:	aa 0b       	sbc	r26, r26
     810:	bb 0b       	sbc	r27, r27
     812:	f5 01       	movw	r30, r10
     814:	80 83       	st	Z, r24
     816:	91 83       	std	Z+1, r25	; 0x01
     818:	a2 83       	std	Z+2, r26	; 0x02
     81a:	b3 83       	std	Z+3, r27	; 0x03
     81c:	44 20       	and	r4, r4
				}

                if (n == 0)
     81e:	71 f0       	breq	.+28     	; 0x83c <mfrc522_to_card+0x16e>
     820:	84 2d       	mov	r24, r4
                {   
					n = MAX_LEN;   
				}
				
				//Reading the received data in FIFO
                for (i=0; i<n; i++)
     822:	81 31       	cpi	r24, 0x11	; 17
     824:	08 f0       	brcs	.+2      	; 0x828 <mfrc522_to_card+0x15a>
     826:	80 e1       	ldi	r24, 0x10	; 16
     828:	48 2e       	mov	r4, r24
     82a:	51 2c       	mov	r5, r1
     82c:	61 2c       	mov	r6, r1
     82e:	71 2c       	mov	r7, r1
     830:	41 14       	cp	r4, r1
     832:	51 04       	cpc	r5, r1
     834:	61 04       	cpc	r6, r1
     836:	71 04       	cpc	r7, r1
     838:	29 f4       	brne	.+10     	; 0x844 <mfrc522_to_card+0x176>
     83a:	4c c0       	rjmp	.+152    	; 0x8d4 <mfrc522_to_card+0x206>
     83c:	41 2c       	mov	r4, r1
     83e:	51 2c       	mov	r5, r1
     840:	32 01       	movw	r6, r4
     842:	43 94       	inc	r4
     844:	08 2d       	mov	r16, r8
     846:	13 2d       	mov	r17, r3
     848:	c1 2c       	mov	r12, r1
     84a:	d1 2c       	mov	r13, r1
     84c:	76 01       	movw	r14, r12
                {   
					back_data[i] = mfrc522_read(FIFODataReg);    
     84e:	89 e0       	ldi	r24, 0x09	; 9
     850:	14 df       	rcall	.-472    	; 0x67a <mfrc522_read>
     852:	f8 01       	movw	r30, r16
     854:	81 93       	st	Z+, r24
     856:	8f 01       	movw	r16, r30
                {   
					n = MAX_LEN;   
				}
				
				//Reading the received data in FIFO
                for (i=0; i<n; i++)
     858:	ff ef       	ldi	r31, 0xFF	; 255
     85a:	cf 1a       	sub	r12, r31
     85c:	df 0a       	sbc	r13, r31
     85e:	ef 0a       	sbc	r14, r31
     860:	ff 0a       	sbc	r15, r31
     862:	c4 14       	cp	r12, r4
     864:	d5 04       	cpc	r13, r5
     866:	e6 04       	cpc	r14, r6
     868:	f7 04       	cpc	r15, r7
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
	}

	//Execute the cmd
	mfrc522_write(CommandReg, cmd);
     86a:	88 f3       	brcs	.-30     	; 0x84e <mfrc522_to_card+0x180>
     86c:	33 c0       	rjmp	.+102    	; 0x8d4 <mfrc522_to_card+0x206>
     86e:	6c e0       	ldi	r22, 0x0C	; 12
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
			waitIRq = 0x30;
     870:	81 e0       	ldi	r24, 0x01	; 1
			waitIRq = 0x10;
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
     872:	f8 de       	rcall	.-528    	; 0x664 <mfrc522_write>
		default:
			break;
    }
   
    //mfrc522_write(ComIEnReg, irqEn|0x80);	//Interrupt request
    n=mfrc522_read(ComIrqReg);
     874:	10 e3       	ldi	r17, 0x30	; 48
     876:	07 e7       	ldi	r16, 0x77	; 119
     878:	80 cf       	rjmp	.-256    	; 0x77a <mfrc522_to_card+0xac>
    mfrc522_write(ComIrqReg,n&(~0x80));//clear all interrupt bits
     87a:	84 e0       	ldi	r24, 0x04	; 4
     87c:	fe de       	rcall	.-516    	; 0x67a <mfrc522_read>
     87e:	68 2f       	mov	r22, r24
     880:	6f 77       	andi	r22, 0x7F	; 127
     882:	84 e0       	ldi	r24, 0x04	; 4
    n=mfrc522_read(FIFOLevelReg);
     884:	ef de       	rcall	.-546    	; 0x664 <mfrc522_write>
     886:	8a e0       	ldi	r24, 0x0A	; 10
     888:	f8 de       	rcall	.-528    	; 0x67a <mfrc522_read>
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
     88a:	68 2f       	mov	r22, r24
     88c:	60 68       	ori	r22, 0x80	; 128
     88e:	8a e0       	ldi	r24, 0x0A	; 10
     890:	e9 de       	rcall	.-558    	; 0x664 <mfrc522_write>
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	81 e0       	ldi	r24, 0x01	; 1
     896:	e6 de       	rcall	.-564    	; 0x664 <mfrc522_write>

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     898:	51 2c       	mov	r5, r1
     89a:	61 2c       	mov	r6, r1
     89c:	71 2c       	mov	r7, r1
     89e:	41 14       	cp	r4, r1
     8a0:	51 04       	cpc	r5, r1
     8a2:	61 04       	cpc	r6, r1
     8a4:	71 04       	cpc	r7, r1
     8a6:	09 f0       	breq	.+2      	; 0x8aa <mfrc522_to_card+0x1dc>
        n = mfrc522_read(ComIrqReg);
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));

	tmp=mfrc522_read(BitFramingReg);
     8a8:	4e cf       	rjmp	.-356    	; 0x746 <mfrc522_to_card+0x78>
     8aa:	e1 cf       	rjmp	.-62     	; 0x86e <mfrc522_to_card+0x1a0>
     8ac:	8d e0       	ldi	r24, 0x0D	; 13
	mfrc522_write(BitFramingReg,tmp&(~0x80));
     8ae:	e5 de       	rcall	.-566    	; 0x67a <mfrc522_read>
     8b0:	68 2f       	mov	r22, r24
     8b2:	6f 77       	andi	r22, 0x7F	; 127
     8b4:	8d e0       	ldi	r24, 0x0D	; 13
     8b6:	d6 de       	rcall	.-596    	; 0x664 <mfrc522_write>
	return status;
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
     8b8:	c3 e0       	ldi	r28, 0x03	; 3
     8ba:	0c c0       	rjmp	.+24     	; 0x8d4 <mfrc522_to_card+0x206>
        n = mfrc522_read(ComIrqReg);
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));

	tmp=mfrc522_read(BitFramingReg);
     8bc:	8d e0       	ldi	r24, 0x0D	; 13
     8be:	dd de       	rcall	.-582    	; 0x67a <mfrc522_read>
     8c0:	68 2f       	mov	r22, r24
	mfrc522_write(BitFramingReg,tmp&(~0x80));
     8c2:	6f 77       	andi	r22, 0x7F	; 127
     8c4:	8d e0       	ldi	r24, 0x0D	; 13
     8c6:	ce de       	rcall	.-612    	; 0x664 <mfrc522_write>
     8c8:	86 e0       	ldi	r24, 0x06	; 6
     8ca:	d7 de       	rcall	.-594    	; 0x67a <mfrc522_read>
	
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
     8cc:	8b 71       	andi	r24, 0x1B	; 27
     8ce:	09 f4       	brne	.+2      	; 0x8d2 <mfrc522_to_card+0x204>
     8d0:	6e cf       	rjmp	.-292    	; 0x7ae <mfrc522_to_card+0xe0>
     8d2:	c3 e0       	ldi	r28, 0x03	; 3
     8d4:	8c 2f       	mov	r24, r28
     8d6:	df 91       	pop	r29
				}
            }
        }
        else
        {   
			status = ERROR;  
     8d8:	cf 91       	pop	r28
	
    //SetBitMask(ControlReg,0x80);           //timer stops
    //mfrc522_write(cmdReg, PCD_IDLE); 

    return status;
}
     8da:	1f 91       	pop	r17
     8dc:	0f 91       	pop	r16
     8de:	ff 90       	pop	r15
     8e0:	ef 90       	pop	r14
     8e2:	df 90       	pop	r13
     8e4:	cf 90       	pop	r12
     8e6:	bf 90       	pop	r11
     8e8:	af 90       	pop	r10
     8ea:	9f 90       	pop	r9
     8ec:	8f 90       	pop	r8
     8ee:	7f 90       	pop	r7
     8f0:	6f 90       	pop	r6
     8f2:	5f 90       	pop	r5
     8f4:	4f 90       	pop	r4
     8f6:	3f 90       	pop	r3
     8f8:	08 95       	ret

000008fa <mfrc522_request>:
     8fa:	ef 92       	push	r14
     8fc:	ff 92       	push	r15
     8fe:	0f 93       	push	r16
{
	mfrc522_write(CommandReg,SoftReset_CMD);
}

uint8_t	mfrc522_request(uint8_t req_mode, uint8_t * tag_type)
{
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	00 d0       	rcall	.+0      	; 0x908 <mfrc522_request+0xe>
     908:	1f 92       	push	r1
     90a:	cd b7       	in	r28, 0x3d	; 61
     90c:	de b7       	in	r29, 0x3e	; 62
     90e:	18 2f       	mov	r17, r24
     910:	7b 01       	movw	r14, r22
	uint8_t  status;  
	uint32_t backBits;//The received data bits

	mfrc522_write(BitFramingReg, 0x07);//TxLastBists = BitFramingReg[2..0]	???
     912:	67 e0       	ldi	r22, 0x07	; 7
     914:	8d e0       	ldi	r24, 0x0D	; 13
     916:	a6 de       	rcall	.-692    	; 0x664 <mfrc522_write>
	
	tag_type[0] = req_mode;
     918:	f7 01       	movw	r30, r14
     91a:	10 83       	st	Z, r17
	status = mfrc522_to_card(Transceive_CMD, tag_type, 1, tag_type, &backBits);
     91c:	8e 01       	movw	r16, r28
     91e:	0f 5f       	subi	r16, 0xFF	; 255
     920:	1f 4f       	sbci	r17, 0xFF	; 255
     922:	97 01       	movw	r18, r14
     924:	41 e0       	ldi	r20, 0x01	; 1
     926:	b7 01       	movw	r22, r14
     928:	8c e0       	ldi	r24, 0x0C	; 12
     92a:	d1 de       	rcall	.-606    	; 0x6ce <mfrc522_to_card>

	if ((status != CARD_FOUND) || (backBits != 0x10))
     92c:	81 30       	cpi	r24, 0x01	; 1
     92e:	59 f4       	brne	.+22     	; 0x946 <mfrc522_request+0x4c>
     930:	49 81       	ldd	r20, Y+1	; 0x01
     932:	5a 81       	ldd	r21, Y+2	; 0x02
     934:	6b 81       	ldd	r22, Y+3	; 0x03
     936:	7c 81       	ldd	r23, Y+4	; 0x04
     938:	40 31       	cpi	r20, 0x10	; 16
     93a:	51 05       	cpc	r21, r1
     93c:	61 05       	cpc	r22, r1
     93e:	71 05       	cpc	r23, r1
     940:	19 f0       	breq	.+6      	; 0x948 <mfrc522_request+0x4e>
	{    
		status = ERROR;
     942:	83 e0       	ldi	r24, 0x03	; 3
     944:	01 c0       	rjmp	.+2      	; 0x948 <mfrc522_request+0x4e>
     946:	83 e0       	ldi	r24, 0x03	; 3
	}
   
	return status;
}
     948:	0f 90       	pop	r0
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	df 91       	pop	r29
     952:	cf 91       	pop	r28
     954:	1f 91       	pop	r17
     956:	0f 91       	pop	r16
     958:	ff 90       	pop	r15
     95a:	ef 90       	pop	r14
     95c:	08 95       	ret

0000095e <mfrc522_get_card_serial>:
    return status;
}


uint8_t mfrc522_get_card_serial(uint8_t * serial_out)
{
     95e:	ef 92       	push	r14
     960:	ff 92       	push	r15
     962:	0f 93       	push	r16
     964:	1f 93       	push	r17
     966:	cf 93       	push	r28
     968:	df 93       	push	r29
     96a:	00 d0       	rcall	.+0      	; 0x96c <mfrc522_get_card_serial+0xe>
     96c:	1f 92       	push	r1
     96e:	cd b7       	in	r28, 0x3d	; 61
     970:	de b7       	in	r29, 0x3e	; 62
     972:	7c 01       	movw	r14, r24
	uint8_t status;
    uint8_t i;
	uint8_t serNumCheck=0;
    uint32_t unLen;
    
	mfrc522_write(BitFramingReg, 0x00);		//TxLastBists = BitFramingReg[2..0]
     974:	60 e0       	ldi	r22, 0x00	; 0
     976:	8d e0       	ldi	r24, 0x0D	; 13
     978:	75 de       	rcall	.-790    	; 0x664 <mfrc522_write>
 
    serial_out[0] = PICC_ANTICOLL;
     97a:	83 e9       	ldi	r24, 0x93	; 147
     97c:	f7 01       	movw	r30, r14
     97e:	80 83       	st	Z, r24
    serial_out[1] = 0x20;
     980:	80 e2       	ldi	r24, 0x20	; 32
     982:	81 83       	std	Z+1, r24	; 0x01
    status = mfrc522_to_card(Transceive_CMD, serial_out, 2, serial_out, &unLen);
     984:	8e 01       	movw	r16, r28
     986:	0f 5f       	subi	r16, 0xFF	; 255
     988:	1f 4f       	sbci	r17, 0xFF	; 255
     98a:	97 01       	movw	r18, r14
     98c:	42 e0       	ldi	r20, 0x02	; 2
     98e:	b7 01       	movw	r22, r14
     990:	8c e0       	ldi	r24, 0x0C	; 12
     992:	9d de       	rcall	.-710    	; 0x6ce <mfrc522_to_card>

    if (status == CARD_FOUND)
     994:	81 30       	cpi	r24, 0x01	; 1
     996:	71 f4       	brne	.+28     	; 0x9b4 <mfrc522_get_card_serial+0x56>
     998:	f7 01       	movw	r30, r14
     99a:	a7 01       	movw	r20, r14
     99c:	4c 5f       	subi	r20, 0xFC	; 252
     99e:	5f 4f       	sbci	r21, 0xFF	; 255
     9a0:	90 e0       	ldi	r25, 0x00	; 0
	{
		//Check card serial number
		for (i=0; i<4; i++)
		{   
		 	serNumCheck ^= serial_out[i];
     9a2:	21 91       	ld	r18, Z+
     9a4:	92 27       	eor	r25, r18
    status = mfrc522_to_card(Transceive_CMD, serial_out, 2, serial_out, &unLen);

    if (status == CARD_FOUND)
	{
		//Check card serial number
		for (i=0; i<4; i++)
     9a6:	4e 17       	cp	r20, r30
     9a8:	5f 07       	cpc	r21, r31
     9aa:	d9 f7       	brne	.-10     	; 0x9a2 <mfrc522_get_card_serial+0x44>
		{   
		 	serNumCheck ^= serial_out[i];
		}
		if (serNumCheck != serial_out[i])
     9ac:	f7 01       	movw	r30, r14
     9ae:	24 81       	ldd	r18, Z+4	; 0x04
     9b0:	92 13       	cpse	r25, r18
		{   
			status = ERROR;    
     9b2:	83 e0       	ldi	r24, 0x03	; 3
		}
    }
    return status;
}
     9b4:	0f 90       	pop	r0
     9b6:	0f 90       	pop	r0
     9b8:	0f 90       	pop	r0
     9ba:	0f 90       	pop	r0
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	1f 91       	pop	r17
     9c2:	0f 91       	pop	r16
     9c4:	ff 90       	pop	r15
     9c6:	ef 90       	pop	r14
     9c8:	08 95       	ret

000009ca <Validate_Card>:

int Validate_Card (uint8_t *arr1, uint8_t *arr2)
{		
	for (int i = 0; i < 8; i++)	
		if (arr1[i] != arr2[i])
     9ca:	fc 01       	movw	r30, r24
     9cc:	30 81       	ld	r19, Z
     9ce:	fb 01       	movw	r30, r22
     9d0:	20 81       	ld	r18, Z
     9d2:	32 13       	cpse	r19, r18
     9d4:	11 c0       	rjmp	.+34     	; 0x9f8 <Validate_Card+0x2e>
     9d6:	fc 01       	movw	r30, r24
     9d8:	31 96       	adiw	r30, 0x01	; 1
     9da:	db 01       	movw	r26, r22
     9dc:	11 96       	adiw	r26, 0x01	; 1
     9de:	ac 01       	movw	r20, r24
     9e0:	48 5f       	subi	r20, 0xF8	; 248
     9e2:	5f 4f       	sbci	r21, 0xFF	; 255
     9e4:	21 91       	ld	r18, Z+
     9e6:	9d 91       	ld	r25, X+
     9e8:	29 13       	cpse	r18, r25
     9ea:	09 c0       	rjmp	.+18     	; 0x9fe <Validate_Card+0x34>
    return status;
}

int Validate_Card (uint8_t *arr1, uint8_t *arr2)
{		
	for (int i = 0; i < 8; i++)	
     9ec:	e4 17       	cp	r30, r20
     9ee:	f5 07       	cpc	r31, r21
     9f0:	c9 f7       	brne	.-14     	; 0x9e4 <Validate_Card+0x1a>
		if (arr1[i] != arr2[i])
		{
			return 0;
		}		
	return 1;
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	08 95       	ret
int Validate_Card (uint8_t *arr1, uint8_t *arr2)
{		
	for (int i = 0; i < 8; i++)	
		if (arr1[i] != arr2[i])
		{
			return 0;
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	08 95       	ret
     9fe:	80 e0       	ldi	r24, 0x00	; 0
     a00:	90 e0       	ldi	r25, 0x00	; 0
		}		
	return 1;
     a02:	08 95       	ret

00000a04 <UartPutchar>:
	(0 << UMSEL00);
}

void UartPutchar(char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
     a04:	e0 ec       	ldi	r30, 0xC0	; 192
     a06:	f0 e0       	ldi	r31, 0x00	; 0
     a08:	90 81       	ld	r25, Z
     a0a:	95 ff       	sbrs	r25, 5
     a0c:	fd cf       	rjmp	.-6      	; 0xa08 <UartPutchar+0x4>
	UDR0 = data;
     a0e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     a12:	08 95       	ret

00000a14 <UartGetchar>:
}

int UartGetchar(void)
{
     a14:	cf 93       	push	r28
	char data;
	
	while (!(UCSR0A & (1 << RXC0)));
     a16:	e0 ec       	ldi	r30, 0xC0	; 192
     a18:	f0 e0       	ldi	r31, 0x00	; 0
     a1a:	80 81       	ld	r24, Z
     a1c:	88 23       	and	r24, r24
     a1e:	ec f7       	brge	.-6      	; 0xa1a <UartGetchar+0x6>
	
	data = UDR0;
     a20:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	if (data == '\n') {
     a24:	ca 30       	cpi	r28, 0x0A	; 10
     a26:	29 f0       	breq	.+10     	; 0xa32 <UartGetchar+0x1e>
		return -1;
	}
	UartPutchar(data);
     a28:	8c 2f       	mov	r24, r28
     a2a:	ec df       	rcall	.-40     	; 0xa04 <UartPutchar>

	return data;
     a2c:	8c 2f       	mov	r24, r28
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	02 c0       	rjmp	.+4      	; 0xa36 <UartGetchar+0x22>
	while (!(UCSR0A & (1 << RXC0)));
	
	data = UDR0;
	
	if (data == '\n') {
		return -1;
     a32:	8f ef       	ldi	r24, 0xFF	; 255
     a34:	9f ef       	ldi	r25, 0xFF	; 255
	}
	UartPutchar(data);

	return data;
     a36:	cf 91       	pop	r28
     a38:	08 95       	ret

00000a3a <UartInit>:

static FILE the_stdio = FDEV_SETUP_STREAM(UartPutchar, UartGetchar, _FDEV_SETUP_RW);

void UartInit(void)
{
	stdout = &the_stdio;
     a3a:	ea e8       	ldi	r30, 0x8A	; 138
     a3c:	f2 e0       	ldi	r31, 0x02	; 2
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	92 e0       	ldi	r25, 0x02	; 2
     a42:	93 83       	std	Z+3, r25	; 0x03
     a44:	82 83       	std	Z+2, r24	; 0x02
	stdin = &the_stdio;
     a46:	91 83       	std	Z+1, r25	; 0x01
     a48:	80 83       	st	Z, r24
	
	UBRR0H = UBRRH_VALUE;
     a4a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = UBRRL_VALUE;
     a4e:	87 e6       	ldi	r24, 0x67	; 103
     a50:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>

	#if USE_2X
	UCSR0A |= (1 << U2X0);
	#endif

	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     a54:	88 e1       	ldi	r24, 0x18	; 24
     a56:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>

	// 8-bit, 1 stop bit, no parity, asynchronous UART
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00) | (0 << USBS0) |
     a5a:	86 e0       	ldi	r24, 0x06	; 6
     a5c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     a60:	08 95       	ret

00000a62 <spi_init>:
#include "spi.h"

#if SPI_CONFIG_AS_MASTER
void spi_init()
{
	SPI_DDR |= (1<<SPI_MOSI)|(1<<SPI_SCK)|(1<<SPI_SS);
     a62:	84 b1       	in	r24, 0x04	; 4
     a64:	87 60       	ori	r24, 0x07	; 7
     a66:	84 b9       	out	0x04, r24	; 4
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);//prescaler 16
     a68:	8c b5       	in	r24, 0x2c	; 44
     a6a:	81 65       	ori	r24, 0x51	; 81
     a6c:	8c bd       	out	0x2c, r24	; 44
     a6e:	08 95       	ret

00000a70 <spi_transmit>:
}


uint8_t spi_transmit(uint8_t data)
{
	SPDR = data;
     a70:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     a72:	0d b4       	in	r0, 0x2d	; 45
     a74:	07 fe       	sbrs	r0, 7
     a76:	fd cf       	rjmp	.-6      	; 0xa72 <spi_transmit+0x2>
	
	return SPDR;
     a78:	8e b5       	in	r24, 0x2e	; 46
}
     a7a:	08 95       	ret

00000a7c <vfprintf>:
     a7c:	2f 92       	push	r2
     a7e:	3f 92       	push	r3
     a80:	4f 92       	push	r4
     a82:	5f 92       	push	r5
     a84:	6f 92       	push	r6
     a86:	7f 92       	push	r7
     a88:	8f 92       	push	r8
     a8a:	9f 92       	push	r9
     a8c:	af 92       	push	r10
     a8e:	bf 92       	push	r11
     a90:	cf 92       	push	r12
     a92:	df 92       	push	r13
     a94:	ef 92       	push	r14
     a96:	ff 92       	push	r15
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	cd b7       	in	r28, 0x3d	; 61
     aa2:	de b7       	in	r29, 0x3e	; 62
     aa4:	60 97       	sbiw	r28, 0x10	; 16
     aa6:	0f b6       	in	r0, 0x3f	; 63
     aa8:	f8 94       	cli
     aaa:	de bf       	out	0x3e, r29	; 62
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	cd bf       	out	0x3d, r28	; 61
     ab0:	7c 01       	movw	r14, r24
     ab2:	1b 01       	movw	r2, r22
     ab4:	6a 01       	movw	r12, r20
     ab6:	fc 01       	movw	r30, r24
     ab8:	17 82       	std	Z+7, r1	; 0x07
     aba:	16 82       	std	Z+6, r1	; 0x06
     abc:	83 81       	ldd	r24, Z+3	; 0x03
     abe:	81 ff       	sbrs	r24, 1
     ac0:	36 c3       	rjmp	.+1644   	; 0x112e <vfprintf+0x6b2>
     ac2:	9e 01       	movw	r18, r28
     ac4:	2f 5f       	subi	r18, 0xFF	; 255
     ac6:	3f 4f       	sbci	r19, 0xFF	; 255
     ac8:	39 01       	movw	r6, r18
     aca:	f7 01       	movw	r30, r14
     acc:	93 81       	ldd	r25, Z+3	; 0x03
     ace:	f1 01       	movw	r30, r2
     ad0:	93 fd       	sbrc	r25, 3
     ad2:	85 91       	lpm	r24, Z+
     ad4:	93 ff       	sbrs	r25, 3
     ad6:	81 91       	ld	r24, Z+
     ad8:	1f 01       	movw	r2, r30
     ada:	88 23       	and	r24, r24
     adc:	09 f4       	brne	.+2      	; 0xae0 <vfprintf+0x64>
     ade:	23 c3       	rjmp	.+1606   	; 0x1126 <vfprintf+0x6aa>
     ae0:	85 32       	cpi	r24, 0x25	; 37
     ae2:	39 f4       	brne	.+14     	; 0xaf2 <vfprintf+0x76>
     ae4:	93 fd       	sbrc	r25, 3
     ae6:	85 91       	lpm	r24, Z+
     ae8:	93 ff       	sbrs	r25, 3
     aea:	81 91       	ld	r24, Z+
     aec:	1f 01       	movw	r2, r30
     aee:	85 32       	cpi	r24, 0x25	; 37
     af0:	39 f4       	brne	.+14     	; 0xb00 <vfprintf+0x84>
     af2:	b7 01       	movw	r22, r14
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     afa:	56 01       	movw	r10, r12
     afc:	65 01       	movw	r12, r10
     afe:	e5 cf       	rjmp	.-54     	; 0xaca <vfprintf+0x4e>
     b00:	10 e0       	ldi	r17, 0x00	; 0
     b02:	51 2c       	mov	r5, r1
     b04:	91 2c       	mov	r9, r1
     b06:	ff e1       	ldi	r31, 0x1F	; 31
     b08:	f9 15       	cp	r31, r9
     b0a:	d8 f0       	brcs	.+54     	; 0xb42 <vfprintf+0xc6>
     b0c:	8b 32       	cpi	r24, 0x2B	; 43
     b0e:	79 f0       	breq	.+30     	; 0xb2e <vfprintf+0xb2>
     b10:	38 f4       	brcc	.+14     	; 0xb20 <vfprintf+0xa4>
     b12:	80 32       	cpi	r24, 0x20	; 32
     b14:	79 f0       	breq	.+30     	; 0xb34 <vfprintf+0xb8>
     b16:	83 32       	cpi	r24, 0x23	; 35
     b18:	a1 f4       	brne	.+40     	; 0xb42 <vfprintf+0xc6>
     b1a:	f9 2d       	mov	r31, r9
     b1c:	f0 61       	ori	r31, 0x10	; 16
     b1e:	2e c0       	rjmp	.+92     	; 0xb7c <vfprintf+0x100>
     b20:	8d 32       	cpi	r24, 0x2D	; 45
     b22:	61 f0       	breq	.+24     	; 0xb3c <vfprintf+0xc0>
     b24:	80 33       	cpi	r24, 0x30	; 48
     b26:	69 f4       	brne	.+26     	; 0xb42 <vfprintf+0xc6>
     b28:	29 2d       	mov	r18, r9
     b2a:	21 60       	ori	r18, 0x01	; 1
     b2c:	2d c0       	rjmp	.+90     	; 0xb88 <vfprintf+0x10c>
     b2e:	39 2d       	mov	r19, r9
     b30:	32 60       	ori	r19, 0x02	; 2
     b32:	93 2e       	mov	r9, r19
     b34:	89 2d       	mov	r24, r9
     b36:	84 60       	ori	r24, 0x04	; 4
     b38:	98 2e       	mov	r9, r24
     b3a:	2a c0       	rjmp	.+84     	; 0xb90 <vfprintf+0x114>
     b3c:	e9 2d       	mov	r30, r9
     b3e:	e8 60       	ori	r30, 0x08	; 8
     b40:	15 c0       	rjmp	.+42     	; 0xb6c <vfprintf+0xf0>
     b42:	97 fc       	sbrc	r9, 7
     b44:	2d c0       	rjmp	.+90     	; 0xba0 <vfprintf+0x124>
     b46:	20 ed       	ldi	r18, 0xD0	; 208
     b48:	28 0f       	add	r18, r24
     b4a:	2a 30       	cpi	r18, 0x0A	; 10
     b4c:	88 f4       	brcc	.+34     	; 0xb70 <vfprintf+0xf4>
     b4e:	96 fe       	sbrs	r9, 6
     b50:	06 c0       	rjmp	.+12     	; 0xb5e <vfprintf+0xe2>
     b52:	3a e0       	ldi	r19, 0x0A	; 10
     b54:	13 9f       	mul	r17, r19
     b56:	20 0d       	add	r18, r0
     b58:	11 24       	eor	r1, r1
     b5a:	12 2f       	mov	r17, r18
     b5c:	19 c0       	rjmp	.+50     	; 0xb90 <vfprintf+0x114>
     b5e:	8a e0       	ldi	r24, 0x0A	; 10
     b60:	58 9e       	mul	r5, r24
     b62:	20 0d       	add	r18, r0
     b64:	11 24       	eor	r1, r1
     b66:	52 2e       	mov	r5, r18
     b68:	e9 2d       	mov	r30, r9
     b6a:	e0 62       	ori	r30, 0x20	; 32
     b6c:	9e 2e       	mov	r9, r30
     b6e:	10 c0       	rjmp	.+32     	; 0xb90 <vfprintf+0x114>
     b70:	8e 32       	cpi	r24, 0x2E	; 46
     b72:	31 f4       	brne	.+12     	; 0xb80 <vfprintf+0x104>
     b74:	96 fc       	sbrc	r9, 6
     b76:	d7 c2       	rjmp	.+1454   	; 0x1126 <vfprintf+0x6aa>
     b78:	f9 2d       	mov	r31, r9
     b7a:	f0 64       	ori	r31, 0x40	; 64
     b7c:	9f 2e       	mov	r9, r31
     b7e:	08 c0       	rjmp	.+16     	; 0xb90 <vfprintf+0x114>
     b80:	8c 36       	cpi	r24, 0x6C	; 108
     b82:	21 f4       	brne	.+8      	; 0xb8c <vfprintf+0x110>
     b84:	29 2d       	mov	r18, r9
     b86:	20 68       	ori	r18, 0x80	; 128
     b88:	92 2e       	mov	r9, r18
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <vfprintf+0x114>
     b8c:	88 36       	cpi	r24, 0x68	; 104
     b8e:	41 f4       	brne	.+16     	; 0xba0 <vfprintf+0x124>
     b90:	f1 01       	movw	r30, r2
     b92:	93 fd       	sbrc	r25, 3
     b94:	85 91       	lpm	r24, Z+
     b96:	93 ff       	sbrs	r25, 3
     b98:	81 91       	ld	r24, Z+
     b9a:	1f 01       	movw	r2, r30
     b9c:	81 11       	cpse	r24, r1
     b9e:	b3 cf       	rjmp	.-154    	; 0xb06 <vfprintf+0x8a>
     ba0:	9b eb       	ldi	r25, 0xBB	; 187
     ba2:	98 0f       	add	r25, r24
     ba4:	93 30       	cpi	r25, 0x03	; 3
     ba6:	20 f4       	brcc	.+8      	; 0xbb0 <vfprintf+0x134>
     ba8:	99 2d       	mov	r25, r9
     baa:	90 61       	ori	r25, 0x10	; 16
     bac:	80 5e       	subi	r24, 0xE0	; 224
     bae:	07 c0       	rjmp	.+14     	; 0xbbe <vfprintf+0x142>
     bb0:	9b e9       	ldi	r25, 0x9B	; 155
     bb2:	98 0f       	add	r25, r24
     bb4:	93 30       	cpi	r25, 0x03	; 3
     bb6:	08 f0       	brcs	.+2      	; 0xbba <vfprintf+0x13e>
     bb8:	63 c1       	rjmp	.+710    	; 0xe80 <vfprintf+0x404>
     bba:	99 2d       	mov	r25, r9
     bbc:	9f 7e       	andi	r25, 0xEF	; 239
     bbe:	96 ff       	sbrs	r25, 6
     bc0:	16 e0       	ldi	r17, 0x06	; 6
     bc2:	9f 73       	andi	r25, 0x3F	; 63
     bc4:	99 2e       	mov	r9, r25
     bc6:	85 36       	cpi	r24, 0x65	; 101
     bc8:	19 f4       	brne	.+6      	; 0xbd0 <vfprintf+0x154>
     bca:	90 64       	ori	r25, 0x40	; 64
     bcc:	99 2e       	mov	r9, r25
     bce:	08 c0       	rjmp	.+16     	; 0xbe0 <vfprintf+0x164>
     bd0:	86 36       	cpi	r24, 0x66	; 102
     bd2:	21 f4       	brne	.+8      	; 0xbdc <vfprintf+0x160>
     bd4:	39 2f       	mov	r19, r25
     bd6:	30 68       	ori	r19, 0x80	; 128
     bd8:	93 2e       	mov	r9, r19
     bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x164>
     bdc:	11 11       	cpse	r17, r1
     bde:	11 50       	subi	r17, 0x01	; 1
     be0:	97 fe       	sbrs	r9, 7
     be2:	07 c0       	rjmp	.+14     	; 0xbf2 <vfprintf+0x176>
     be4:	1c 33       	cpi	r17, 0x3C	; 60
     be6:	50 f4       	brcc	.+20     	; 0xbfc <vfprintf+0x180>
     be8:	44 24       	eor	r4, r4
     bea:	43 94       	inc	r4
     bec:	41 0e       	add	r4, r17
     bee:	27 e0       	ldi	r18, 0x07	; 7
     bf0:	0b c0       	rjmp	.+22     	; 0xc08 <vfprintf+0x18c>
     bf2:	18 30       	cpi	r17, 0x08	; 8
     bf4:	38 f0       	brcs	.+14     	; 0xc04 <vfprintf+0x188>
     bf6:	27 e0       	ldi	r18, 0x07	; 7
     bf8:	17 e0       	ldi	r17, 0x07	; 7
     bfa:	05 c0       	rjmp	.+10     	; 0xc06 <vfprintf+0x18a>
     bfc:	27 e0       	ldi	r18, 0x07	; 7
     bfe:	9c e3       	ldi	r25, 0x3C	; 60
     c00:	49 2e       	mov	r4, r25
     c02:	02 c0       	rjmp	.+4      	; 0xc08 <vfprintf+0x18c>
     c04:	21 2f       	mov	r18, r17
     c06:	41 2c       	mov	r4, r1
     c08:	56 01       	movw	r10, r12
     c0a:	84 e0       	ldi	r24, 0x04	; 4
     c0c:	a8 0e       	add	r10, r24
     c0e:	b1 1c       	adc	r11, r1
     c10:	f6 01       	movw	r30, r12
     c12:	60 81       	ld	r22, Z
     c14:	71 81       	ldd	r23, Z+1	; 0x01
     c16:	82 81       	ldd	r24, Z+2	; 0x02
     c18:	93 81       	ldd	r25, Z+3	; 0x03
     c1a:	04 2d       	mov	r16, r4
     c1c:	a3 01       	movw	r20, r6
     c1e:	dc d7       	rcall	.+4024   	; 0x1bd8 <__ftoa_engine>
     c20:	6c 01       	movw	r12, r24
     c22:	f9 81       	ldd	r31, Y+1	; 0x01
     c24:	fc 87       	std	Y+12, r31	; 0x0c
     c26:	f0 ff       	sbrs	r31, 0
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <vfprintf+0x1b2>
     c2a:	f3 ff       	sbrs	r31, 3
     c2c:	06 c0       	rjmp	.+12     	; 0xc3a <vfprintf+0x1be>
     c2e:	91 fc       	sbrc	r9, 1
     c30:	06 c0       	rjmp	.+12     	; 0xc3e <vfprintf+0x1c2>
     c32:	92 fe       	sbrs	r9, 2
     c34:	06 c0       	rjmp	.+12     	; 0xc42 <vfprintf+0x1c6>
     c36:	00 e2       	ldi	r16, 0x20	; 32
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <vfprintf+0x1c8>
     c3a:	0d e2       	ldi	r16, 0x2D	; 45
     c3c:	03 c0       	rjmp	.+6      	; 0xc44 <vfprintf+0x1c8>
     c3e:	0b e2       	ldi	r16, 0x2B	; 43
     c40:	01 c0       	rjmp	.+2      	; 0xc44 <vfprintf+0x1c8>
     c42:	00 e0       	ldi	r16, 0x00	; 0
     c44:	8c 85       	ldd	r24, Y+12	; 0x0c
     c46:	8c 70       	andi	r24, 0x0C	; 12
     c48:	19 f0       	breq	.+6      	; 0xc50 <vfprintf+0x1d4>
     c4a:	01 11       	cpse	r16, r1
     c4c:	4e c2       	rjmp	.+1180   	; 0x10ea <vfprintf+0x66e>
     c4e:	8b c2       	rjmp	.+1302   	; 0x1166 <vfprintf+0x6ea>
     c50:	97 fe       	sbrs	r9, 7
     c52:	10 c0       	rjmp	.+32     	; 0xc74 <vfprintf+0x1f8>
     c54:	4c 0c       	add	r4, r12
     c56:	fc 85       	ldd	r31, Y+12	; 0x0c
     c58:	f4 ff       	sbrs	r31, 4
     c5a:	04 c0       	rjmp	.+8      	; 0xc64 <vfprintf+0x1e8>
     c5c:	8a 81       	ldd	r24, Y+2	; 0x02
     c5e:	81 33       	cpi	r24, 0x31	; 49
     c60:	09 f4       	brne	.+2      	; 0xc64 <vfprintf+0x1e8>
     c62:	4a 94       	dec	r4
     c64:	14 14       	cp	r1, r4
     c66:	74 f5       	brge	.+92     	; 0xcc4 <vfprintf+0x248>
     c68:	28 e0       	ldi	r18, 0x08	; 8
     c6a:	24 15       	cp	r18, r4
     c6c:	78 f5       	brcc	.+94     	; 0xccc <vfprintf+0x250>
     c6e:	88 e0       	ldi	r24, 0x08	; 8
     c70:	48 2e       	mov	r4, r24
     c72:	2c c0       	rjmp	.+88     	; 0xccc <vfprintf+0x250>
     c74:	96 fc       	sbrc	r9, 6
     c76:	2a c0       	rjmp	.+84     	; 0xccc <vfprintf+0x250>
     c78:	81 2f       	mov	r24, r17
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	8c 15       	cp	r24, r12
     c7e:	9d 05       	cpc	r25, r13
     c80:	9c f0       	brlt	.+38     	; 0xca8 <vfprintf+0x22c>
     c82:	3c ef       	ldi	r19, 0xFC	; 252
     c84:	c3 16       	cp	r12, r19
     c86:	3f ef       	ldi	r19, 0xFF	; 255
     c88:	d3 06       	cpc	r13, r19
     c8a:	74 f0       	brlt	.+28     	; 0xca8 <vfprintf+0x22c>
     c8c:	89 2d       	mov	r24, r9
     c8e:	80 68       	ori	r24, 0x80	; 128
     c90:	98 2e       	mov	r9, r24
     c92:	0a c0       	rjmp	.+20     	; 0xca8 <vfprintf+0x22c>
     c94:	e2 e0       	ldi	r30, 0x02	; 2
     c96:	f0 e0       	ldi	r31, 0x00	; 0
     c98:	ec 0f       	add	r30, r28
     c9a:	fd 1f       	adc	r31, r29
     c9c:	e1 0f       	add	r30, r17
     c9e:	f1 1d       	adc	r31, r1
     ca0:	80 81       	ld	r24, Z
     ca2:	80 33       	cpi	r24, 0x30	; 48
     ca4:	19 f4       	brne	.+6      	; 0xcac <vfprintf+0x230>
     ca6:	11 50       	subi	r17, 0x01	; 1
     ca8:	11 11       	cpse	r17, r1
     caa:	f4 cf       	rjmp	.-24     	; 0xc94 <vfprintf+0x218>
     cac:	97 fe       	sbrs	r9, 7
     cae:	0e c0       	rjmp	.+28     	; 0xccc <vfprintf+0x250>
     cb0:	44 24       	eor	r4, r4
     cb2:	43 94       	inc	r4
     cb4:	41 0e       	add	r4, r17
     cb6:	81 2f       	mov	r24, r17
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	c8 16       	cp	r12, r24
     cbc:	d9 06       	cpc	r13, r25
     cbe:	2c f4       	brge	.+10     	; 0xcca <vfprintf+0x24e>
     cc0:	1c 19       	sub	r17, r12
     cc2:	04 c0       	rjmp	.+8      	; 0xccc <vfprintf+0x250>
     cc4:	44 24       	eor	r4, r4
     cc6:	43 94       	inc	r4
     cc8:	01 c0       	rjmp	.+2      	; 0xccc <vfprintf+0x250>
     cca:	10 e0       	ldi	r17, 0x00	; 0
     ccc:	97 fe       	sbrs	r9, 7
     cce:	06 c0       	rjmp	.+12     	; 0xcdc <vfprintf+0x260>
     cd0:	1c 14       	cp	r1, r12
     cd2:	1d 04       	cpc	r1, r13
     cd4:	34 f4       	brge	.+12     	; 0xce2 <vfprintf+0x266>
     cd6:	c6 01       	movw	r24, r12
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	05 c0       	rjmp	.+10     	; 0xce6 <vfprintf+0x26a>
     cdc:	85 e0       	ldi	r24, 0x05	; 5
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	02 c0       	rjmp	.+4      	; 0xce6 <vfprintf+0x26a>
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	01 11       	cpse	r16, r1
     ce8:	01 96       	adiw	r24, 0x01	; 1
     cea:	11 23       	and	r17, r17
     cec:	31 f0       	breq	.+12     	; 0xcfa <vfprintf+0x27e>
     cee:	21 2f       	mov	r18, r17
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	2f 5f       	subi	r18, 0xFF	; 255
     cf4:	3f 4f       	sbci	r19, 0xFF	; 255
     cf6:	82 0f       	add	r24, r18
     cf8:	93 1f       	adc	r25, r19
     cfa:	25 2d       	mov	r18, r5
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	82 17       	cp	r24, r18
     d00:	93 07       	cpc	r25, r19
     d02:	14 f4       	brge	.+4      	; 0xd08 <vfprintf+0x28c>
     d04:	58 1a       	sub	r5, r24
     d06:	01 c0       	rjmp	.+2      	; 0xd0a <vfprintf+0x28e>
     d08:	51 2c       	mov	r5, r1
     d0a:	89 2d       	mov	r24, r9
     d0c:	89 70       	andi	r24, 0x09	; 9
     d0e:	49 f4       	brne	.+18     	; 0xd22 <vfprintf+0x2a6>
     d10:	55 20       	and	r5, r5
     d12:	39 f0       	breq	.+14     	; 0xd22 <vfprintf+0x2a6>
     d14:	b7 01       	movw	r22, r14
     d16:	80 e2       	ldi	r24, 0x20	; 32
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     d1e:	5a 94       	dec	r5
     d20:	f7 cf       	rjmp	.-18     	; 0xd10 <vfprintf+0x294>
     d22:	00 23       	and	r16, r16
     d24:	29 f0       	breq	.+10     	; 0xd30 <vfprintf+0x2b4>
     d26:	b7 01       	movw	r22, r14
     d28:	80 2f       	mov	r24, r16
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     d30:	93 fc       	sbrc	r9, 3
     d32:	09 c0       	rjmp	.+18     	; 0xd46 <vfprintf+0x2ca>
     d34:	55 20       	and	r5, r5
     d36:	39 f0       	breq	.+14     	; 0xd46 <vfprintf+0x2ca>
     d38:	b7 01       	movw	r22, r14
     d3a:	80 e3       	ldi	r24, 0x30	; 48
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     d42:	5a 94       	dec	r5
     d44:	f7 cf       	rjmp	.-18     	; 0xd34 <vfprintf+0x2b8>
     d46:	97 fe       	sbrs	r9, 7
     d48:	4c c0       	rjmp	.+152    	; 0xde2 <vfprintf+0x366>
     d4a:	46 01       	movw	r8, r12
     d4c:	d7 fe       	sbrs	r13, 7
     d4e:	02 c0       	rjmp	.+4      	; 0xd54 <vfprintf+0x2d8>
     d50:	81 2c       	mov	r8, r1
     d52:	91 2c       	mov	r9, r1
     d54:	c6 01       	movw	r24, r12
     d56:	88 19       	sub	r24, r8
     d58:	99 09       	sbc	r25, r9
     d5a:	f3 01       	movw	r30, r6
     d5c:	e8 0f       	add	r30, r24
     d5e:	f9 1f       	adc	r31, r25
     d60:	fe 87       	std	Y+14, r31	; 0x0e
     d62:	ed 87       	std	Y+13, r30	; 0x0d
     d64:	96 01       	movw	r18, r12
     d66:	24 19       	sub	r18, r4
     d68:	31 09       	sbc	r19, r1
     d6a:	38 8b       	std	Y+16, r19	; 0x10
     d6c:	2f 87       	std	Y+15, r18	; 0x0f
     d6e:	01 2f       	mov	r16, r17
     d70:	10 e0       	ldi	r17, 0x00	; 0
     d72:	11 95       	neg	r17
     d74:	01 95       	neg	r16
     d76:	11 09       	sbc	r17, r1
     d78:	3f ef       	ldi	r19, 0xFF	; 255
     d7a:	83 16       	cp	r8, r19
     d7c:	93 06       	cpc	r9, r19
     d7e:	29 f4       	brne	.+10     	; 0xd8a <vfprintf+0x30e>
     d80:	b7 01       	movw	r22, r14
     d82:	8e e2       	ldi	r24, 0x2E	; 46
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     d8a:	c8 14       	cp	r12, r8
     d8c:	d9 04       	cpc	r13, r9
     d8e:	4c f0       	brlt	.+18     	; 0xda2 <vfprintf+0x326>
     d90:	8f 85       	ldd	r24, Y+15	; 0x0f
     d92:	98 89       	ldd	r25, Y+16	; 0x10
     d94:	88 15       	cp	r24, r8
     d96:	99 05       	cpc	r25, r9
     d98:	24 f4       	brge	.+8      	; 0xda2 <vfprintf+0x326>
     d9a:	ed 85       	ldd	r30, Y+13	; 0x0d
     d9c:	fe 85       	ldd	r31, Y+14	; 0x0e
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <vfprintf+0x328>
     da2:	80 e3       	ldi	r24, 0x30	; 48
     da4:	f1 e0       	ldi	r31, 0x01	; 1
     da6:	8f 1a       	sub	r8, r31
     da8:	91 08       	sbc	r9, r1
     daa:	2d 85       	ldd	r18, Y+13	; 0x0d
     dac:	3e 85       	ldd	r19, Y+14	; 0x0e
     dae:	2f 5f       	subi	r18, 0xFF	; 255
     db0:	3f 4f       	sbci	r19, 0xFF	; 255
     db2:	3e 87       	std	Y+14, r19	; 0x0e
     db4:	2d 87       	std	Y+13, r18	; 0x0d
     db6:	80 16       	cp	r8, r16
     db8:	91 06       	cpc	r9, r17
     dba:	2c f0       	brlt	.+10     	; 0xdc6 <vfprintf+0x34a>
     dbc:	b7 01       	movw	r22, r14
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     dc4:	d9 cf       	rjmp	.-78     	; 0xd78 <vfprintf+0x2fc>
     dc6:	c8 14       	cp	r12, r8
     dc8:	d9 04       	cpc	r13, r9
     dca:	41 f4       	brne	.+16     	; 0xddc <vfprintf+0x360>
     dcc:	9a 81       	ldd	r25, Y+2	; 0x02
     dce:	96 33       	cpi	r25, 0x36	; 54
     dd0:	20 f4       	brcc	.+8      	; 0xdda <vfprintf+0x35e>
     dd2:	95 33       	cpi	r25, 0x35	; 53
     dd4:	19 f4       	brne	.+6      	; 0xddc <vfprintf+0x360>
     dd6:	3c 85       	ldd	r19, Y+12	; 0x0c
     dd8:	34 ff       	sbrs	r19, 4
     dda:	81 e3       	ldi	r24, 0x31	; 49
     ddc:	b7 01       	movw	r22, r14
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	4d c0       	rjmp	.+154    	; 0xe7c <vfprintf+0x400>
     de2:	8a 81       	ldd	r24, Y+2	; 0x02
     de4:	81 33       	cpi	r24, 0x31	; 49
     de6:	19 f0       	breq	.+6      	; 0xdee <vfprintf+0x372>
     de8:	9c 85       	ldd	r25, Y+12	; 0x0c
     dea:	9f 7e       	andi	r25, 0xEF	; 239
     dec:	9c 87       	std	Y+12, r25	; 0x0c
     dee:	b7 01       	movw	r22, r14
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     df6:	11 11       	cpse	r17, r1
     df8:	05 c0       	rjmp	.+10     	; 0xe04 <vfprintf+0x388>
     dfa:	94 fc       	sbrc	r9, 4
     dfc:	18 c0       	rjmp	.+48     	; 0xe2e <vfprintf+0x3b2>
     dfe:	85 e6       	ldi	r24, 0x65	; 101
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	17 c0       	rjmp	.+46     	; 0xe32 <vfprintf+0x3b6>
     e04:	b7 01       	movw	r22, r14
     e06:	8e e2       	ldi	r24, 0x2E	; 46
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     e0e:	1e 5f       	subi	r17, 0xFE	; 254
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	01 e0       	ldi	r16, 0x01	; 1
     e14:	08 0f       	add	r16, r24
     e16:	f3 01       	movw	r30, r6
     e18:	e8 0f       	add	r30, r24
     e1a:	f1 1d       	adc	r31, r1
     e1c:	80 81       	ld	r24, Z
     e1e:	b7 01       	movw	r22, r14
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     e26:	80 2f       	mov	r24, r16
     e28:	01 13       	cpse	r16, r17
     e2a:	f3 cf       	rjmp	.-26     	; 0xe12 <vfprintf+0x396>
     e2c:	e6 cf       	rjmp	.-52     	; 0xdfa <vfprintf+0x37e>
     e2e:	85 e4       	ldi	r24, 0x45	; 69
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	b7 01       	movw	r22, r14
     e34:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     e38:	d7 fc       	sbrc	r13, 7
     e3a:	06 c0       	rjmp	.+12     	; 0xe48 <vfprintf+0x3cc>
     e3c:	c1 14       	cp	r12, r1
     e3e:	d1 04       	cpc	r13, r1
     e40:	41 f4       	brne	.+16     	; 0xe52 <vfprintf+0x3d6>
     e42:	ec 85       	ldd	r30, Y+12	; 0x0c
     e44:	e4 ff       	sbrs	r30, 4
     e46:	05 c0       	rjmp	.+10     	; 0xe52 <vfprintf+0x3d6>
     e48:	d1 94       	neg	r13
     e4a:	c1 94       	neg	r12
     e4c:	d1 08       	sbc	r13, r1
     e4e:	8d e2       	ldi	r24, 0x2D	; 45
     e50:	01 c0       	rjmp	.+2      	; 0xe54 <vfprintf+0x3d8>
     e52:	8b e2       	ldi	r24, 0x2B	; 43
     e54:	b7 01       	movw	r22, r14
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <fputc>
     e5c:	80 e3       	ldi	r24, 0x30	; 48
     e5e:	2a e0       	ldi	r18, 0x0A	; 10
     e60:	c2 16       	cp	r12, r18
     e62:	d1 04       	cpc	r13, r1
     e64:	2c f0       	brlt	.+10     	; 0xe70 <vfprintf+0x3f4>
     e66:	8f 5f       	subi	r24, 0xFF	; 255
     e68:	fa e0       	ldi	r31, 0x0A	; 10
     e6a:	cf 1a       	sub	r12, r31
     e6c:	d1 08       	sbc	r13, r1
     e6e:	f7 cf       	rjmp	.-18     	; 0xe5e <vfprintf+0x3e2>
     e70:	b7 01       	movw	r22, r14
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	f8 d7       	rcall	.+4080   	; 0x1e66 <fputc>
     e76:	b7 01       	movw	r22, r14
     e78:	c6 01       	movw	r24, r12
     e7a:	c0 96       	adiw	r24, 0x30	; 48
     e7c:	f4 d7       	rcall	.+4072   	; 0x1e66 <fputc>
     e7e:	4a c1       	rjmp	.+660    	; 0x1114 <vfprintf+0x698>
     e80:	83 36       	cpi	r24, 0x63	; 99
     e82:	31 f0       	breq	.+12     	; 0xe90 <vfprintf+0x414>
     e84:	83 37       	cpi	r24, 0x73	; 115
     e86:	79 f0       	breq	.+30     	; 0xea6 <vfprintf+0x42a>
     e88:	83 35       	cpi	r24, 0x53	; 83
     e8a:	09 f0       	breq	.+2      	; 0xe8e <vfprintf+0x412>
     e8c:	52 c0       	rjmp	.+164    	; 0xf32 <vfprintf+0x4b6>
     e8e:	1f c0       	rjmp	.+62     	; 0xece <vfprintf+0x452>
     e90:	56 01       	movw	r10, r12
     e92:	32 e0       	ldi	r19, 0x02	; 2
     e94:	a3 0e       	add	r10, r19
     e96:	b1 1c       	adc	r11, r1
     e98:	f6 01       	movw	r30, r12
     e9a:	80 81       	ld	r24, Z
     e9c:	89 83       	std	Y+1, r24	; 0x01
     e9e:	01 e0       	ldi	r16, 0x01	; 1
     ea0:	10 e0       	ldi	r17, 0x00	; 0
     ea2:	63 01       	movw	r12, r6
     ea4:	11 c0       	rjmp	.+34     	; 0xec8 <vfprintf+0x44c>
     ea6:	56 01       	movw	r10, r12
     ea8:	f2 e0       	ldi	r31, 0x02	; 2
     eaa:	af 0e       	add	r10, r31
     eac:	b1 1c       	adc	r11, r1
     eae:	f6 01       	movw	r30, r12
     eb0:	c0 80       	ld	r12, Z
     eb2:	d1 80       	ldd	r13, Z+1	; 0x01
     eb4:	96 fe       	sbrs	r9, 6
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <vfprintf+0x442>
     eb8:	61 2f       	mov	r22, r17
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0x446>
     ebe:	6f ef       	ldi	r22, 0xFF	; 255
     ec0:	7f ef       	ldi	r23, 0xFF	; 255
     ec2:	c6 01       	movw	r24, r12
     ec4:	87 d7       	rcall	.+3854   	; 0x1dd4 <strnlen>
     ec6:	8c 01       	movw	r16, r24
     ec8:	f9 2d       	mov	r31, r9
     eca:	ff 77       	andi	r31, 0x7F	; 127
     ecc:	13 c0       	rjmp	.+38     	; 0xef4 <vfprintf+0x478>
     ece:	56 01       	movw	r10, r12
     ed0:	22 e0       	ldi	r18, 0x02	; 2
     ed2:	a2 0e       	add	r10, r18
     ed4:	b1 1c       	adc	r11, r1
     ed6:	f6 01       	movw	r30, r12
     ed8:	c0 80       	ld	r12, Z
     eda:	d1 80       	ldd	r13, Z+1	; 0x01
     edc:	96 fe       	sbrs	r9, 6
     ede:	03 c0       	rjmp	.+6      	; 0xee6 <vfprintf+0x46a>
     ee0:	61 2f       	mov	r22, r17
     ee2:	70 e0       	ldi	r23, 0x00	; 0
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x46e>
     ee6:	6f ef       	ldi	r22, 0xFF	; 255
     ee8:	7f ef       	ldi	r23, 0xFF	; 255
     eea:	c6 01       	movw	r24, r12
     eec:	68 d7       	rcall	.+3792   	; 0x1dbe <strnlen_P>
     eee:	8c 01       	movw	r16, r24
     ef0:	f9 2d       	mov	r31, r9
     ef2:	f0 68       	ori	r31, 0x80	; 128
     ef4:	9f 2e       	mov	r9, r31
     ef6:	f3 fd       	sbrc	r31, 3
     ef8:	18 c0       	rjmp	.+48     	; 0xf2a <vfprintf+0x4ae>
     efa:	85 2d       	mov	r24, r5
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	08 17       	cp	r16, r24
     f00:	19 07       	cpc	r17, r25
     f02:	98 f4       	brcc	.+38     	; 0xf2a <vfprintf+0x4ae>
     f04:	b7 01       	movw	r22, r14
     f06:	80 e2       	ldi	r24, 0x20	; 32
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	ad d7       	rcall	.+3930   	; 0x1e66 <fputc>
     f0c:	5a 94       	dec	r5
     f0e:	f5 cf       	rjmp	.-22     	; 0xefa <vfprintf+0x47e>
     f10:	f6 01       	movw	r30, r12
     f12:	97 fc       	sbrc	r9, 7
     f14:	85 91       	lpm	r24, Z+
     f16:	97 fe       	sbrs	r9, 7
     f18:	81 91       	ld	r24, Z+
     f1a:	6f 01       	movw	r12, r30
     f1c:	b7 01       	movw	r22, r14
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	a2 d7       	rcall	.+3908   	; 0x1e66 <fputc>
     f22:	51 10       	cpse	r5, r1
     f24:	5a 94       	dec	r5
     f26:	01 50       	subi	r16, 0x01	; 1
     f28:	11 09       	sbc	r17, r1
     f2a:	01 15       	cp	r16, r1
     f2c:	11 05       	cpc	r17, r1
     f2e:	81 f7       	brne	.-32     	; 0xf10 <vfprintf+0x494>
     f30:	f1 c0       	rjmp	.+482    	; 0x1114 <vfprintf+0x698>
     f32:	84 36       	cpi	r24, 0x64	; 100
     f34:	11 f0       	breq	.+4      	; 0xf3a <vfprintf+0x4be>
     f36:	89 36       	cpi	r24, 0x69	; 105
     f38:	61 f5       	brne	.+88     	; 0xf92 <vfprintf+0x516>
     f3a:	56 01       	movw	r10, r12
     f3c:	97 fe       	sbrs	r9, 7
     f3e:	09 c0       	rjmp	.+18     	; 0xf52 <vfprintf+0x4d6>
     f40:	24 e0       	ldi	r18, 0x04	; 4
     f42:	a2 0e       	add	r10, r18
     f44:	b1 1c       	adc	r11, r1
     f46:	f6 01       	movw	r30, r12
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	82 81       	ldd	r24, Z+2	; 0x02
     f4e:	93 81       	ldd	r25, Z+3	; 0x03
     f50:	0a c0       	rjmp	.+20     	; 0xf66 <vfprintf+0x4ea>
     f52:	f2 e0       	ldi	r31, 0x02	; 2
     f54:	af 0e       	add	r10, r31
     f56:	b1 1c       	adc	r11, r1
     f58:	f6 01       	movw	r30, r12
     f5a:	60 81       	ld	r22, Z
     f5c:	71 81       	ldd	r23, Z+1	; 0x01
     f5e:	07 2e       	mov	r0, r23
     f60:	00 0c       	add	r0, r0
     f62:	88 0b       	sbc	r24, r24
     f64:	99 0b       	sbc	r25, r25
     f66:	f9 2d       	mov	r31, r9
     f68:	ff 76       	andi	r31, 0x6F	; 111
     f6a:	9f 2e       	mov	r9, r31
     f6c:	97 ff       	sbrs	r25, 7
     f6e:	09 c0       	rjmp	.+18     	; 0xf82 <vfprintf+0x506>
     f70:	90 95       	com	r25
     f72:	80 95       	com	r24
     f74:	70 95       	com	r23
     f76:	61 95       	neg	r22
     f78:	7f 4f       	sbci	r23, 0xFF	; 255
     f7a:	8f 4f       	sbci	r24, 0xFF	; 255
     f7c:	9f 4f       	sbci	r25, 0xFF	; 255
     f7e:	f0 68       	ori	r31, 0x80	; 128
     f80:	9f 2e       	mov	r9, r31
     f82:	2a e0       	ldi	r18, 0x0A	; 10
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	a3 01       	movw	r20, r6
     f88:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__ultoa_invert>
     f8c:	c8 2e       	mov	r12, r24
     f8e:	c6 18       	sub	r12, r6
     f90:	3e c0       	rjmp	.+124    	; 0x100e <vfprintf+0x592>
     f92:	09 2d       	mov	r16, r9
     f94:	85 37       	cpi	r24, 0x75	; 117
     f96:	21 f4       	brne	.+8      	; 0xfa0 <vfprintf+0x524>
     f98:	0f 7e       	andi	r16, 0xEF	; 239
     f9a:	2a e0       	ldi	r18, 0x0A	; 10
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	1d c0       	rjmp	.+58     	; 0xfda <vfprintf+0x55e>
     fa0:	09 7f       	andi	r16, 0xF9	; 249
     fa2:	8f 36       	cpi	r24, 0x6F	; 111
     fa4:	91 f0       	breq	.+36     	; 0xfca <vfprintf+0x54e>
     fa6:	18 f4       	brcc	.+6      	; 0xfae <vfprintf+0x532>
     fa8:	88 35       	cpi	r24, 0x58	; 88
     faa:	59 f0       	breq	.+22     	; 0xfc2 <vfprintf+0x546>
     fac:	bc c0       	rjmp	.+376    	; 0x1126 <vfprintf+0x6aa>
     fae:	80 37       	cpi	r24, 0x70	; 112
     fb0:	19 f0       	breq	.+6      	; 0xfb8 <vfprintf+0x53c>
     fb2:	88 37       	cpi	r24, 0x78	; 120
     fb4:	11 f0       	breq	.+4      	; 0xfba <vfprintf+0x53e>
     fb6:	b7 c0       	rjmp	.+366    	; 0x1126 <vfprintf+0x6aa>
     fb8:	00 61       	ori	r16, 0x10	; 16
     fba:	04 ff       	sbrs	r16, 4
     fbc:	09 c0       	rjmp	.+18     	; 0xfd0 <vfprintf+0x554>
     fbe:	04 60       	ori	r16, 0x04	; 4
     fc0:	07 c0       	rjmp	.+14     	; 0xfd0 <vfprintf+0x554>
     fc2:	94 fe       	sbrs	r9, 4
     fc4:	08 c0       	rjmp	.+16     	; 0xfd6 <vfprintf+0x55a>
     fc6:	06 60       	ori	r16, 0x06	; 6
     fc8:	06 c0       	rjmp	.+12     	; 0xfd6 <vfprintf+0x55a>
     fca:	28 e0       	ldi	r18, 0x08	; 8
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	05 c0       	rjmp	.+10     	; 0xfda <vfprintf+0x55e>
     fd0:	20 e1       	ldi	r18, 0x10	; 16
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <vfprintf+0x55e>
     fd6:	20 e1       	ldi	r18, 0x10	; 16
     fd8:	32 e0       	ldi	r19, 0x02	; 2
     fda:	56 01       	movw	r10, r12
     fdc:	07 ff       	sbrs	r16, 7
     fde:	09 c0       	rjmp	.+18     	; 0xff2 <vfprintf+0x576>
     fe0:	84 e0       	ldi	r24, 0x04	; 4
     fe2:	a8 0e       	add	r10, r24
     fe4:	b1 1c       	adc	r11, r1
     fe6:	f6 01       	movw	r30, r12
     fe8:	60 81       	ld	r22, Z
     fea:	71 81       	ldd	r23, Z+1	; 0x01
     fec:	82 81       	ldd	r24, Z+2	; 0x02
     fee:	93 81       	ldd	r25, Z+3	; 0x03
     ff0:	08 c0       	rjmp	.+16     	; 0x1002 <vfprintf+0x586>
     ff2:	f2 e0       	ldi	r31, 0x02	; 2
     ff4:	af 0e       	add	r10, r31
     ff6:	b1 1c       	adc	r11, r1
     ff8:	f6 01       	movw	r30, r12
     ffa:	60 81       	ld	r22, Z
     ffc:	71 81       	ldd	r23, Z+1	; 0x01
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	a3 01       	movw	r20, r6
    1004:	f8 d7       	rcall	.+4080   	; 0x1ff6 <__ultoa_invert>
    1006:	c8 2e       	mov	r12, r24
    1008:	c6 18       	sub	r12, r6
    100a:	0f 77       	andi	r16, 0x7F	; 127
    100c:	90 2e       	mov	r9, r16
    100e:	96 fe       	sbrs	r9, 6
    1010:	0b c0       	rjmp	.+22     	; 0x1028 <vfprintf+0x5ac>
    1012:	09 2d       	mov	r16, r9
    1014:	0e 7f       	andi	r16, 0xFE	; 254
    1016:	c1 16       	cp	r12, r17
    1018:	50 f4       	brcc	.+20     	; 0x102e <vfprintf+0x5b2>
    101a:	94 fe       	sbrs	r9, 4
    101c:	0a c0       	rjmp	.+20     	; 0x1032 <vfprintf+0x5b6>
    101e:	92 fc       	sbrc	r9, 2
    1020:	08 c0       	rjmp	.+16     	; 0x1032 <vfprintf+0x5b6>
    1022:	09 2d       	mov	r16, r9
    1024:	0e 7e       	andi	r16, 0xEE	; 238
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <vfprintf+0x5b6>
    1028:	dc 2c       	mov	r13, r12
    102a:	09 2d       	mov	r16, r9
    102c:	03 c0       	rjmp	.+6      	; 0x1034 <vfprintf+0x5b8>
    102e:	dc 2c       	mov	r13, r12
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <vfprintf+0x5b8>
    1032:	d1 2e       	mov	r13, r17
    1034:	04 ff       	sbrs	r16, 4
    1036:	0d c0       	rjmp	.+26     	; 0x1052 <vfprintf+0x5d6>
    1038:	fe 01       	movw	r30, r28
    103a:	ec 0d       	add	r30, r12
    103c:	f1 1d       	adc	r31, r1
    103e:	80 81       	ld	r24, Z
    1040:	80 33       	cpi	r24, 0x30	; 48
    1042:	11 f4       	brne	.+4      	; 0x1048 <vfprintf+0x5cc>
    1044:	09 7e       	andi	r16, 0xE9	; 233
    1046:	09 c0       	rjmp	.+18     	; 0x105a <vfprintf+0x5de>
    1048:	02 ff       	sbrs	r16, 2
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <vfprintf+0x5dc>
    104c:	d3 94       	inc	r13
    104e:	d3 94       	inc	r13
    1050:	04 c0       	rjmp	.+8      	; 0x105a <vfprintf+0x5de>
    1052:	80 2f       	mov	r24, r16
    1054:	86 78       	andi	r24, 0x86	; 134
    1056:	09 f0       	breq	.+2      	; 0x105a <vfprintf+0x5de>
    1058:	d3 94       	inc	r13
    105a:	03 fd       	sbrc	r16, 3
    105c:	10 c0       	rjmp	.+32     	; 0x107e <vfprintf+0x602>
    105e:	00 ff       	sbrs	r16, 0
    1060:	06 c0       	rjmp	.+12     	; 0x106e <vfprintf+0x5f2>
    1062:	1c 2d       	mov	r17, r12
    1064:	d5 14       	cp	r13, r5
    1066:	78 f4       	brcc	.+30     	; 0x1086 <vfprintf+0x60a>
    1068:	15 0d       	add	r17, r5
    106a:	1d 19       	sub	r17, r13
    106c:	0c c0       	rjmp	.+24     	; 0x1086 <vfprintf+0x60a>
    106e:	d5 14       	cp	r13, r5
    1070:	50 f4       	brcc	.+20     	; 0x1086 <vfprintf+0x60a>
    1072:	b7 01       	movw	r22, r14
    1074:	80 e2       	ldi	r24, 0x20	; 32
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	f6 d6       	rcall	.+3564   	; 0x1e66 <fputc>
    107a:	d3 94       	inc	r13
    107c:	f8 cf       	rjmp	.-16     	; 0x106e <vfprintf+0x5f2>
    107e:	d5 14       	cp	r13, r5
    1080:	10 f4       	brcc	.+4      	; 0x1086 <vfprintf+0x60a>
    1082:	5d 18       	sub	r5, r13
    1084:	01 c0       	rjmp	.+2      	; 0x1088 <vfprintf+0x60c>
    1086:	51 2c       	mov	r5, r1
    1088:	04 ff       	sbrs	r16, 4
    108a:	0f c0       	rjmp	.+30     	; 0x10aa <vfprintf+0x62e>
    108c:	b7 01       	movw	r22, r14
    108e:	80 e3       	ldi	r24, 0x30	; 48
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	e9 d6       	rcall	.+3538   	; 0x1e66 <fputc>
    1094:	02 ff       	sbrs	r16, 2
    1096:	16 c0       	rjmp	.+44     	; 0x10c4 <vfprintf+0x648>
    1098:	01 fd       	sbrc	r16, 1
    109a:	03 c0       	rjmp	.+6      	; 0x10a2 <vfprintf+0x626>
    109c:	88 e7       	ldi	r24, 0x78	; 120
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <vfprintf+0x62a>
    10a2:	88 e5       	ldi	r24, 0x58	; 88
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	b7 01       	movw	r22, r14
    10a8:	0c c0       	rjmp	.+24     	; 0x10c2 <vfprintf+0x646>
    10aa:	80 2f       	mov	r24, r16
    10ac:	86 78       	andi	r24, 0x86	; 134
    10ae:	51 f0       	breq	.+20     	; 0x10c4 <vfprintf+0x648>
    10b0:	01 ff       	sbrs	r16, 1
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <vfprintf+0x63c>
    10b4:	8b e2       	ldi	r24, 0x2B	; 43
    10b6:	01 c0       	rjmp	.+2      	; 0x10ba <vfprintf+0x63e>
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	07 fd       	sbrc	r16, 7
    10bc:	8d e2       	ldi	r24, 0x2D	; 45
    10be:	b7 01       	movw	r22, r14
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	d1 d6       	rcall	.+3490   	; 0x1e66 <fputc>
    10c4:	c1 16       	cp	r12, r17
    10c6:	30 f4       	brcc	.+12     	; 0x10d4 <vfprintf+0x658>
    10c8:	b7 01       	movw	r22, r14
    10ca:	80 e3       	ldi	r24, 0x30	; 48
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	cb d6       	rcall	.+3478   	; 0x1e66 <fputc>
    10d0:	11 50       	subi	r17, 0x01	; 1
    10d2:	f8 cf       	rjmp	.-16     	; 0x10c4 <vfprintf+0x648>
    10d4:	ca 94       	dec	r12
    10d6:	f3 01       	movw	r30, r6
    10d8:	ec 0d       	add	r30, r12
    10da:	f1 1d       	adc	r31, r1
    10dc:	80 81       	ld	r24, Z
    10de:	b7 01       	movw	r22, r14
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	c1 d6       	rcall	.+3458   	; 0x1e66 <fputc>
    10e4:	c1 10       	cpse	r12, r1
    10e6:	f6 cf       	rjmp	.-20     	; 0x10d4 <vfprintf+0x658>
    10e8:	15 c0       	rjmp	.+42     	; 0x1114 <vfprintf+0x698>
    10ea:	f4 e0       	ldi	r31, 0x04	; 4
    10ec:	f5 15       	cp	r31, r5
    10ee:	50 f5       	brcc	.+84     	; 0x1144 <vfprintf+0x6c8>
    10f0:	84 e0       	ldi	r24, 0x04	; 4
    10f2:	58 1a       	sub	r5, r24
    10f4:	93 fe       	sbrs	r9, 3
    10f6:	1e c0       	rjmp	.+60     	; 0x1134 <vfprintf+0x6b8>
    10f8:	01 11       	cpse	r16, r1
    10fa:	25 c0       	rjmp	.+74     	; 0x1146 <vfprintf+0x6ca>
    10fc:	2c 85       	ldd	r18, Y+12	; 0x0c
    10fe:	23 ff       	sbrs	r18, 3
    1100:	27 c0       	rjmp	.+78     	; 0x1150 <vfprintf+0x6d4>
    1102:	04 ee       	ldi	r16, 0xE4	; 228
    1104:	10 e0       	ldi	r17, 0x00	; 0
    1106:	39 2d       	mov	r19, r9
    1108:	30 71       	andi	r19, 0x10	; 16
    110a:	93 2e       	mov	r9, r19
    110c:	f8 01       	movw	r30, r16
    110e:	84 91       	lpm	r24, Z
    1110:	81 11       	cpse	r24, r1
    1112:	21 c0       	rjmp	.+66     	; 0x1156 <vfprintf+0x6da>
    1114:	55 20       	and	r5, r5
    1116:	09 f4       	brne	.+2      	; 0x111a <vfprintf+0x69e>
    1118:	f1 cc       	rjmp	.-1566   	; 0xafc <vfprintf+0x80>
    111a:	b7 01       	movw	r22, r14
    111c:	80 e2       	ldi	r24, 0x20	; 32
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	a2 d6       	rcall	.+3396   	; 0x1e66 <fputc>
    1122:	5a 94       	dec	r5
    1124:	f7 cf       	rjmp	.-18     	; 0x1114 <vfprintf+0x698>
    1126:	f7 01       	movw	r30, r14
    1128:	86 81       	ldd	r24, Z+6	; 0x06
    112a:	97 81       	ldd	r25, Z+7	; 0x07
    112c:	23 c0       	rjmp	.+70     	; 0x1174 <vfprintf+0x6f8>
    112e:	8f ef       	ldi	r24, 0xFF	; 255
    1130:	9f ef       	ldi	r25, 0xFF	; 255
    1132:	20 c0       	rjmp	.+64     	; 0x1174 <vfprintf+0x6f8>
    1134:	b7 01       	movw	r22, r14
    1136:	80 e2       	ldi	r24, 0x20	; 32
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	95 d6       	rcall	.+3370   	; 0x1e66 <fputc>
    113c:	5a 94       	dec	r5
    113e:	51 10       	cpse	r5, r1
    1140:	f9 cf       	rjmp	.-14     	; 0x1134 <vfprintf+0x6b8>
    1142:	da cf       	rjmp	.-76     	; 0x10f8 <vfprintf+0x67c>
    1144:	51 2c       	mov	r5, r1
    1146:	b7 01       	movw	r22, r14
    1148:	80 2f       	mov	r24, r16
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	8c d6       	rcall	.+3352   	; 0x1e66 <fputc>
    114e:	d6 cf       	rjmp	.-84     	; 0x10fc <vfprintf+0x680>
    1150:	08 ee       	ldi	r16, 0xE8	; 232
    1152:	10 e0       	ldi	r17, 0x00	; 0
    1154:	d8 cf       	rjmp	.-80     	; 0x1106 <vfprintf+0x68a>
    1156:	91 10       	cpse	r9, r1
    1158:	80 52       	subi	r24, 0x20	; 32
    115a:	b7 01       	movw	r22, r14
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	83 d6       	rcall	.+3334   	; 0x1e66 <fputc>
    1160:	0f 5f       	subi	r16, 0xFF	; 255
    1162:	1f 4f       	sbci	r17, 0xFF	; 255
    1164:	d3 cf       	rjmp	.-90     	; 0x110c <vfprintf+0x690>
    1166:	23 e0       	ldi	r18, 0x03	; 3
    1168:	25 15       	cp	r18, r5
    116a:	10 f4       	brcc	.+4      	; 0x1170 <vfprintf+0x6f4>
    116c:	83 e0       	ldi	r24, 0x03	; 3
    116e:	c1 cf       	rjmp	.-126    	; 0x10f2 <vfprintf+0x676>
    1170:	51 2c       	mov	r5, r1
    1172:	c4 cf       	rjmp	.-120    	; 0x10fc <vfprintf+0x680>
    1174:	60 96       	adiw	r28, 0x10	; 16
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	ff 90       	pop	r15
    118a:	ef 90       	pop	r14
    118c:	df 90       	pop	r13
    118e:	cf 90       	pop	r12
    1190:	bf 90       	pop	r11
    1192:	af 90       	pop	r10
    1194:	9f 90       	pop	r9
    1196:	8f 90       	pop	r8
    1198:	7f 90       	pop	r7
    119a:	6f 90       	pop	r6
    119c:	5f 90       	pop	r5
    119e:	4f 90       	pop	r4
    11a0:	3f 90       	pop	r3
    11a2:	2f 90       	pop	r2
    11a4:	08 95       	ret

000011a6 <putval>:
    11a6:	20 fd       	sbrc	r18, 0
    11a8:	09 c0       	rjmp	.+18     	; 0x11bc <putval+0x16>
    11aa:	fc 01       	movw	r30, r24
    11ac:	23 fd       	sbrc	r18, 3
    11ae:	05 c0       	rjmp	.+10     	; 0x11ba <putval+0x14>
    11b0:	22 ff       	sbrs	r18, 2
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <putval+0x12>
    11b4:	73 83       	std	Z+3, r23	; 0x03
    11b6:	62 83       	std	Z+2, r22	; 0x02
    11b8:	51 83       	std	Z+1, r21	; 0x01
    11ba:	40 83       	st	Z, r20
    11bc:	08 95       	ret

000011be <mulacc>:
    11be:	44 fd       	sbrc	r20, 4
    11c0:	17 c0       	rjmp	.+46     	; 0x11f0 <mulacc+0x32>
    11c2:	46 fd       	sbrc	r20, 6
    11c4:	17 c0       	rjmp	.+46     	; 0x11f4 <mulacc+0x36>
    11c6:	ab 01       	movw	r20, r22
    11c8:	bc 01       	movw	r22, r24
    11ca:	da 01       	movw	r26, r20
    11cc:	fb 01       	movw	r30, r22
    11ce:	aa 0f       	add	r26, r26
    11d0:	bb 1f       	adc	r27, r27
    11d2:	ee 1f       	adc	r30, r30
    11d4:	ff 1f       	adc	r31, r31
    11d6:	10 94       	com	r1
    11d8:	d1 f7       	brne	.-12     	; 0x11ce <mulacc+0x10>
    11da:	4a 0f       	add	r20, r26
    11dc:	5b 1f       	adc	r21, r27
    11de:	6e 1f       	adc	r22, r30
    11e0:	7f 1f       	adc	r23, r31
    11e2:	cb 01       	movw	r24, r22
    11e4:	ba 01       	movw	r22, r20
    11e6:	66 0f       	add	r22, r22
    11e8:	77 1f       	adc	r23, r23
    11ea:	88 1f       	adc	r24, r24
    11ec:	99 1f       	adc	r25, r25
    11ee:	09 c0       	rjmp	.+18     	; 0x1202 <mulacc+0x44>
    11f0:	33 e0       	ldi	r19, 0x03	; 3
    11f2:	01 c0       	rjmp	.+2      	; 0x11f6 <mulacc+0x38>
    11f4:	34 e0       	ldi	r19, 0x04	; 4
    11f6:	66 0f       	add	r22, r22
    11f8:	77 1f       	adc	r23, r23
    11fa:	88 1f       	adc	r24, r24
    11fc:	99 1f       	adc	r25, r25
    11fe:	31 50       	subi	r19, 0x01	; 1
    1200:	d1 f7       	brne	.-12     	; 0x11f6 <mulacc+0x38>
    1202:	62 0f       	add	r22, r18
    1204:	71 1d       	adc	r23, r1
    1206:	81 1d       	adc	r24, r1
    1208:	91 1d       	adc	r25, r1
    120a:	08 95       	ret

0000120c <skip_spaces>:
    120c:	0f 93       	push	r16
    120e:	1f 93       	push	r17
    1210:	cf 93       	push	r28
    1212:	df 93       	push	r29
    1214:	8c 01       	movw	r16, r24
    1216:	c8 01       	movw	r24, r16
    1218:	e8 d5       	rcall	.+3024   	; 0x1dea <fgetc>
    121a:	ec 01       	movw	r28, r24
    121c:	97 fd       	sbrc	r25, 7
    121e:	06 c0       	rjmp	.+12     	; 0x122c <skip_spaces+0x20>
    1220:	b3 d5       	rcall	.+2918   	; 0x1d88 <isspace>
    1222:	89 2b       	or	r24, r25
    1224:	c1 f7       	brne	.-16     	; 0x1216 <skip_spaces+0xa>
    1226:	b8 01       	movw	r22, r16
    1228:	ce 01       	movw	r24, r28
    122a:	cc d6       	rcall	.+3480   	; 0x1fc4 <ungetc>
    122c:	ce 01       	movw	r24, r28
    122e:	df 91       	pop	r29
    1230:	cf 91       	pop	r28
    1232:	1f 91       	pop	r17
    1234:	0f 91       	pop	r16
    1236:	08 95       	ret

00001238 <conv_int>:
    1238:	8f 92       	push	r8
    123a:	9f 92       	push	r9
    123c:	af 92       	push	r10
    123e:	bf 92       	push	r11
    1240:	cf 92       	push	r12
    1242:	df 92       	push	r13
    1244:	ef 92       	push	r14
    1246:	ff 92       	push	r15
    1248:	0f 93       	push	r16
    124a:	1f 93       	push	r17
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	7c 01       	movw	r14, r24
    1252:	8b 01       	movw	r16, r22
    1254:	6a 01       	movw	r12, r20
    1256:	d2 2f       	mov	r29, r18
    1258:	c8 d5       	rcall	.+2960   	; 0x1dea <fgetc>
    125a:	9c 01       	movw	r18, r24
    125c:	33 27       	eor	r19, r19
    125e:	2b 32       	cpi	r18, 0x2B	; 43
    1260:	31 05       	cpc	r19, r1
    1262:	21 f0       	breq	.+8      	; 0x126c <conv_int+0x34>
    1264:	2d 32       	cpi	r18, 0x2D	; 45
    1266:	31 05       	cpc	r19, r1
    1268:	51 f4       	brne	.+20     	; 0x127e <conv_int+0x46>
    126a:	d0 68       	ori	r29, 0x80	; 128
    126c:	01 50       	subi	r16, 0x01	; 1
    126e:	11 09       	sbc	r17, r1
    1270:	11 f4       	brne	.+4      	; 0x1276 <conv_int+0x3e>
    1272:	80 e0       	ldi	r24, 0x00	; 0
    1274:	64 c0       	rjmp	.+200    	; 0x133e <conv_int+0x106>
    1276:	c7 01       	movw	r24, r14
    1278:	b8 d5       	rcall	.+2928   	; 0x1dea <fgetc>
    127a:	97 fd       	sbrc	r25, 7
    127c:	fa cf       	rjmp	.-12     	; 0x1272 <conv_int+0x3a>
    127e:	cd 2f       	mov	r28, r29
    1280:	cd 7f       	andi	r28, 0xFD	; 253
    1282:	2d 2f       	mov	r18, r29
    1284:	20 73       	andi	r18, 0x30	; 48
    1286:	09 f5       	brne	.+66     	; 0x12ca <conv_int+0x92>
    1288:	80 33       	cpi	r24, 0x30	; 48
    128a:	f9 f4       	brne	.+62     	; 0x12ca <conv_int+0x92>
    128c:	58 01       	movw	r10, r16
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	a8 1a       	sub	r10, r24
    1292:	b1 08       	sbc	r11, r1
    1294:	09 f4       	brne	.+2      	; 0x1298 <conv_int+0x60>
    1296:	40 c0       	rjmp	.+128    	; 0x1318 <conv_int+0xe0>
    1298:	c7 01       	movw	r24, r14
    129a:	a7 d5       	rcall	.+2894   	; 0x1dea <fgetc>
    129c:	97 fd       	sbrc	r25, 7
    129e:	3c c0       	rjmp	.+120    	; 0x1318 <conv_int+0xe0>
    12a0:	9c 01       	movw	r18, r24
    12a2:	2f 7d       	andi	r18, 0xDF	; 223
    12a4:	33 27       	eor	r19, r19
    12a6:	28 35       	cpi	r18, 0x58	; 88
    12a8:	31 05       	cpc	r19, r1
    12aa:	49 f4       	brne	.+18     	; 0x12be <conv_int+0x86>
    12ac:	c2 64       	ori	r28, 0x42	; 66
    12ae:	02 50       	subi	r16, 0x02	; 2
    12b0:	11 09       	sbc	r17, r1
    12b2:	91 f1       	breq	.+100    	; 0x1318 <conv_int+0xe0>
    12b4:	c7 01       	movw	r24, r14
    12b6:	99 d5       	rcall	.+2866   	; 0x1dea <fgetc>
    12b8:	97 ff       	sbrs	r25, 7
    12ba:	07 c0       	rjmp	.+14     	; 0x12ca <conv_int+0x92>
    12bc:	2d c0       	rjmp	.+90     	; 0x1318 <conv_int+0xe0>
    12be:	d6 ff       	sbrs	r29, 6
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <conv_int+0x8e>
    12c2:	c2 60       	ori	r28, 0x02	; 2
    12c4:	01 c0       	rjmp	.+2      	; 0x12c8 <conv_int+0x90>
    12c6:	c2 61       	ori	r28, 0x12	; 18
    12c8:	85 01       	movw	r16, r10
    12ca:	81 2c       	mov	r8, r1
    12cc:	91 2c       	mov	r9, r1
    12ce:	54 01       	movw	r10, r8
    12d0:	20 ed       	ldi	r18, 0xD0	; 208
    12d2:	28 0f       	add	r18, r24
    12d4:	28 30       	cpi	r18, 0x08	; 8
    12d6:	78 f0       	brcs	.+30     	; 0x12f6 <conv_int+0xbe>
    12d8:	c4 ff       	sbrs	r28, 4
    12da:	03 c0       	rjmp	.+6      	; 0x12e2 <conv_int+0xaa>
    12dc:	b7 01       	movw	r22, r14
    12de:	72 d6       	rcall	.+3300   	; 0x1fc4 <ungetc>
    12e0:	18 c0       	rjmp	.+48     	; 0x1312 <conv_int+0xda>
    12e2:	2a 30       	cpi	r18, 0x0A	; 10
    12e4:	40 f0       	brcs	.+16     	; 0x12f6 <conv_int+0xbe>
    12e6:	c6 ff       	sbrs	r28, 6
    12e8:	f9 cf       	rjmp	.-14     	; 0x12dc <conv_int+0xa4>
    12ea:	2f 7d       	andi	r18, 0xDF	; 223
    12ec:	3f ee       	ldi	r19, 0xEF	; 239
    12ee:	32 0f       	add	r19, r18
    12f0:	36 30       	cpi	r19, 0x06	; 6
    12f2:	a0 f7       	brcc	.-24     	; 0x12dc <conv_int+0xa4>
    12f4:	27 50       	subi	r18, 0x07	; 7
    12f6:	4c 2f       	mov	r20, r28
    12f8:	c5 01       	movw	r24, r10
    12fa:	b4 01       	movw	r22, r8
    12fc:	60 df       	rcall	.-320    	; 0x11be <mulacc>
    12fe:	4b 01       	movw	r8, r22
    1300:	5c 01       	movw	r10, r24
    1302:	c2 60       	ori	r28, 0x02	; 2
    1304:	01 50       	subi	r16, 0x01	; 1
    1306:	11 09       	sbc	r17, r1
    1308:	51 f0       	breq	.+20     	; 0x131e <conv_int+0xe6>
    130a:	c7 01       	movw	r24, r14
    130c:	6e d5       	rcall	.+2780   	; 0x1dea <fgetc>
    130e:	97 ff       	sbrs	r25, 7
    1310:	df cf       	rjmp	.-66     	; 0x12d0 <conv_int+0x98>
    1312:	c1 fd       	sbrc	r28, 1
    1314:	04 c0       	rjmp	.+8      	; 0x131e <conv_int+0xe6>
    1316:	ad cf       	rjmp	.-166    	; 0x1272 <conv_int+0x3a>
    1318:	81 2c       	mov	r8, r1
    131a:	91 2c       	mov	r9, r1
    131c:	54 01       	movw	r10, r8
    131e:	c7 ff       	sbrs	r28, 7
    1320:	08 c0       	rjmp	.+16     	; 0x1332 <conv_int+0xfa>
    1322:	b0 94       	com	r11
    1324:	a0 94       	com	r10
    1326:	90 94       	com	r9
    1328:	80 94       	com	r8
    132a:	81 1c       	adc	r8, r1
    132c:	91 1c       	adc	r9, r1
    132e:	a1 1c       	adc	r10, r1
    1330:	b1 1c       	adc	r11, r1
    1332:	2c 2f       	mov	r18, r28
    1334:	b5 01       	movw	r22, r10
    1336:	a4 01       	movw	r20, r8
    1338:	c6 01       	movw	r24, r12
    133a:	35 df       	rcall	.-406    	; 0x11a6 <putval>
    133c:	81 e0       	ldi	r24, 0x01	; 1
    133e:	df 91       	pop	r29
    1340:	cf 91       	pop	r28
    1342:	1f 91       	pop	r17
    1344:	0f 91       	pop	r16
    1346:	ff 90       	pop	r15
    1348:	ef 90       	pop	r14
    134a:	df 90       	pop	r13
    134c:	cf 90       	pop	r12
    134e:	bf 90       	pop	r11
    1350:	af 90       	pop	r10
    1352:	9f 90       	pop	r9
    1354:	8f 90       	pop	r8
    1356:	08 95       	ret

00001358 <conv_brk>:
    1358:	4f 92       	push	r4
    135a:	5f 92       	push	r5
    135c:	6f 92       	push	r6
    135e:	7f 92       	push	r7
    1360:	8f 92       	push	r8
    1362:	9f 92       	push	r9
    1364:	af 92       	push	r10
    1366:	bf 92       	push	r11
    1368:	cf 92       	push	r12
    136a:	df 92       	push	r13
    136c:	ef 92       	push	r14
    136e:	ff 92       	push	r15
    1370:	0f 93       	push	r16
    1372:	1f 93       	push	r17
    1374:	cf 93       	push	r28
    1376:	df 93       	push	r29
    1378:	cd b7       	in	r28, 0x3d	; 61
    137a:	de b7       	in	r29, 0x3e	; 62
    137c:	a0 97       	sbiw	r28, 0x20	; 32
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	f8 94       	cli
    1382:	de bf       	out	0x3e, r29	; 62
    1384:	0f be       	out	0x3f, r0	; 63
    1386:	cd bf       	out	0x3d, r28	; 61
    1388:	5c 01       	movw	r10, r24
    138a:	4b 01       	movw	r8, r22
    138c:	7a 01       	movw	r14, r20
    138e:	8e 01       	movw	r16, r28
    1390:	0f 5f       	subi	r16, 0xFF	; 255
    1392:	1f 4f       	sbci	r17, 0xFF	; 255
    1394:	68 01       	movw	r12, r16
    1396:	80 e2       	ldi	r24, 0x20	; 32
    1398:	f8 01       	movw	r30, r16
    139a:	11 92       	st	Z+, r1
    139c:	8a 95       	dec	r24
    139e:	e9 f7       	brne	.-6      	; 0x139a <conv_brk+0x42>
    13a0:	f5 01       	movw	r30, r10
    13a2:	53 80       	ldd	r5, Z+3	; 0x03
    13a4:	40 e0       	ldi	r20, 0x00	; 0
    13a6:	50 e0       	ldi	r21, 0x00	; 0
    13a8:	61 2c       	mov	r6, r1
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	71 2c       	mov	r7, r1
    13ae:	a1 e0       	ldi	r26, 0x01	; 1
    13b0:	b0 e0       	ldi	r27, 0x00	; 0
    13b2:	f9 01       	movw	r30, r18
    13b4:	53 fc       	sbrc	r5, 3
    13b6:	85 91       	lpm	r24, Z+
    13b8:	53 fe       	sbrs	r5, 3
    13ba:	81 91       	ld	r24, Z+
    13bc:	8f 01       	movw	r16, r30
    13be:	48 2e       	mov	r4, r24
    13c0:	9f 01       	movw	r18, r30
    13c2:	81 11       	cpse	r24, r1
    13c4:	03 c0       	rjmp	.+6      	; 0x13cc <conv_brk+0x74>
    13c6:	80 e0       	ldi	r24, 0x00	; 0
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	94 c0       	rjmp	.+296    	; 0x14f4 <conv_brk+0x19c>
    13cc:	8e 35       	cpi	r24, 0x5E	; 94
    13ce:	19 f4       	brne	.+6      	; 0x13d6 <conv_brk+0x7e>
    13d0:	41 15       	cp	r20, r1
    13d2:	51 05       	cpc	r21, r1
    13d4:	51 f1       	breq	.+84     	; 0x142a <conv_brk+0xd2>
    13d6:	67 2d       	mov	r22, r7
    13d8:	70 e0       	ldi	r23, 0x00	; 0
    13da:	64 17       	cp	r22, r20
    13dc:	75 07       	cpc	r23, r21
    13de:	3c f4       	brge	.+14     	; 0x13ee <conv_brk+0x96>
    13e0:	8d 35       	cpi	r24, 0x5D	; 93
    13e2:	61 f1       	breq	.+88     	; 0x143c <conv_brk+0xe4>
    13e4:	8d 32       	cpi	r24, 0x2D	; 45
    13e6:	19 f4       	brne	.+6      	; 0x13ee <conv_brk+0x96>
    13e8:	99 23       	and	r25, r25
    13ea:	11 f1       	breq	.+68     	; 0x1430 <conv_brk+0xd8>
    13ec:	03 c0       	rjmp	.+6      	; 0x13f4 <conv_brk+0x9c>
    13ee:	99 23       	and	r25, r25
    13f0:	09 f4       	brne	.+2      	; 0x13f4 <conv_brk+0x9c>
    13f2:	6b c0       	rjmp	.+214    	; 0x14ca <conv_brk+0x172>
    13f4:	84 2d       	mov	r24, r4
    13f6:	86 95       	lsr	r24
    13f8:	86 95       	lsr	r24
    13fa:	86 95       	lsr	r24
    13fc:	f6 01       	movw	r30, r12
    13fe:	e8 0f       	add	r30, r24
    1400:	f1 1d       	adc	r31, r1
    1402:	84 2d       	mov	r24, r4
    1404:	87 70       	andi	r24, 0x07	; 7
    1406:	8d 01       	movw	r16, r26
    1408:	02 c0       	rjmp	.+4      	; 0x140e <conv_brk+0xb6>
    140a:	00 0f       	add	r16, r16
    140c:	11 1f       	adc	r17, r17
    140e:	8a 95       	dec	r24
    1410:	e2 f7       	brpl	.-8      	; 0x140a <conv_brk+0xb2>
    1412:	c8 01       	movw	r24, r16
    1414:	90 81       	ld	r25, Z
    1416:	89 2b       	or	r24, r25
    1418:	80 83       	st	Z, r24
    141a:	64 14       	cp	r6, r4
    141c:	59 f0       	breq	.+22     	; 0x1434 <conv_brk+0xdc>
    141e:	46 14       	cp	r4, r6
    1420:	10 f4       	brcc	.+4      	; 0x1426 <conv_brk+0xce>
    1422:	43 94       	inc	r4
    1424:	e7 cf       	rjmp	.-50     	; 0x13f4 <conv_brk+0x9c>
    1426:	4a 94       	dec	r4
    1428:	e5 cf       	rjmp	.-54     	; 0x13f4 <conv_brk+0x9c>
    142a:	77 24       	eor	r7, r7
    142c:	73 94       	inc	r7
    142e:	03 c0       	rjmp	.+6      	; 0x1436 <conv_brk+0xde>
    1430:	91 e0       	ldi	r25, 0x01	; 1
    1432:	01 c0       	rjmp	.+2      	; 0x1436 <conv_brk+0xde>
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	4f 5f       	subi	r20, 0xFF	; 255
    1438:	5f 4f       	sbci	r21, 0xFF	; 255
    143a:	bb cf       	rjmp	.-138    	; 0x13b2 <conv_brk+0x5a>
    143c:	99 23       	and	r25, r25
    143e:	19 f0       	breq	.+6      	; 0x1446 <conv_brk+0xee>
    1440:	8e 81       	ldd	r24, Y+6	; 0x06
    1442:	80 62       	ori	r24, 0x20	; 32
    1444:	8e 83       	std	Y+6, r24	; 0x06
    1446:	71 10       	cpse	r7, r1
    1448:	03 c0       	rjmp	.+6      	; 0x1450 <conv_brk+0xf8>
    144a:	77 24       	eor	r7, r7
    144c:	73 94       	inc	r7
    144e:	19 c0       	rjmp	.+50     	; 0x1482 <conv_brk+0x12a>
    1450:	f6 01       	movw	r30, r12
    1452:	9e 01       	movw	r18, r28
    1454:	2f 5d       	subi	r18, 0xDF	; 223
    1456:	3f 4f       	sbci	r19, 0xFF	; 255
    1458:	80 81       	ld	r24, Z
    145a:	80 95       	com	r24
    145c:	81 93       	st	Z+, r24
    145e:	2e 17       	cp	r18, r30
    1460:	3f 07       	cpc	r19, r31
    1462:	d1 f7       	brne	.-12     	; 0x1458 <conv_brk+0x100>
    1464:	f2 cf       	rjmp	.-28     	; 0x144a <conv_brk+0xf2>
    1466:	e1 14       	cp	r14, r1
    1468:	f1 04       	cpc	r15, r1
    146a:	31 f0       	breq	.+12     	; 0x1478 <conv_brk+0x120>
    146c:	f7 01       	movw	r30, r14
    146e:	80 83       	st	Z, r24
    1470:	b7 01       	movw	r22, r14
    1472:	6f 5f       	subi	r22, 0xFF	; 255
    1474:	7f 4f       	sbci	r23, 0xFF	; 255
    1476:	7b 01       	movw	r14, r22
    1478:	71 e0       	ldi	r23, 0x01	; 1
    147a:	87 1a       	sub	r8, r23
    147c:	91 08       	sbc	r9, r1
    147e:	71 2c       	mov	r7, r1
    1480:	e9 f0       	breq	.+58     	; 0x14bc <conv_brk+0x164>
    1482:	c5 01       	movw	r24, r10
    1484:	b2 d4       	rcall	.+2404   	; 0x1dea <fgetc>
    1486:	97 fd       	sbrc	r25, 7
    1488:	17 c0       	rjmp	.+46     	; 0x14b8 <conv_brk+0x160>
    148a:	fc 01       	movw	r30, r24
    148c:	ff 27       	eor	r31, r31
    148e:	23 e0       	ldi	r18, 0x03	; 3
    1490:	f5 95       	asr	r31
    1492:	e7 95       	ror	r30
    1494:	2a 95       	dec	r18
    1496:	e1 f7       	brne	.-8      	; 0x1490 <conv_brk+0x138>
    1498:	ec 0d       	add	r30, r12
    149a:	fd 1d       	adc	r31, r13
    149c:	20 81       	ld	r18, Z
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	ac 01       	movw	r20, r24
    14a2:	47 70       	andi	r20, 0x07	; 7
    14a4:	55 27       	eor	r21, r21
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <conv_brk+0x154>
    14a8:	35 95       	asr	r19
    14aa:	27 95       	ror	r18
    14ac:	4a 95       	dec	r20
    14ae:	e2 f7       	brpl	.-8      	; 0x14a8 <conv_brk+0x150>
    14b0:	20 fd       	sbrc	r18, 0
    14b2:	d9 cf       	rjmp	.-78     	; 0x1466 <conv_brk+0x10e>
    14b4:	b5 01       	movw	r22, r10
    14b6:	86 d5       	rcall	.+2828   	; 0x1fc4 <ungetc>
    14b8:	71 10       	cpse	r7, r1
    14ba:	85 cf       	rjmp	.-246    	; 0x13c6 <conv_brk+0x6e>
    14bc:	e1 14       	cp	r14, r1
    14be:	f1 04       	cpc	r15, r1
    14c0:	11 f0       	breq	.+4      	; 0x14c6 <conv_brk+0x16e>
    14c2:	f7 01       	movw	r30, r14
    14c4:	10 82       	st	Z, r1
    14c6:	c8 01       	movw	r24, r16
    14c8:	15 c0       	rjmp	.+42     	; 0x14f4 <conv_brk+0x19c>
    14ca:	68 2f       	mov	r22, r24
    14cc:	66 95       	lsr	r22
    14ce:	66 95       	lsr	r22
    14d0:	66 95       	lsr	r22
    14d2:	f6 01       	movw	r30, r12
    14d4:	e6 0f       	add	r30, r22
    14d6:	f1 1d       	adc	r31, r1
    14d8:	68 2f       	mov	r22, r24
    14da:	67 70       	andi	r22, 0x07	; 7
    14dc:	8d 01       	movw	r16, r26
    14de:	02 c0       	rjmp	.+4      	; 0x14e4 <conv_brk+0x18c>
    14e0:	00 0f       	add	r16, r16
    14e2:	11 1f       	adc	r17, r17
    14e4:	6a 95       	dec	r22
    14e6:	e2 f7       	brpl	.-8      	; 0x14e0 <conv_brk+0x188>
    14e8:	b8 01       	movw	r22, r16
    14ea:	70 81       	ld	r23, Z
    14ec:	67 2b       	or	r22, r23
    14ee:	60 83       	st	Z, r22
    14f0:	68 2e       	mov	r6, r24
    14f2:	a1 cf       	rjmp	.-190    	; 0x1436 <conv_brk+0xde>
    14f4:	a0 96       	adiw	r28, 0x20	; 32
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	cd bf       	out	0x3d, r28	; 61
    1500:	df 91       	pop	r29
    1502:	cf 91       	pop	r28
    1504:	1f 91       	pop	r17
    1506:	0f 91       	pop	r16
    1508:	ff 90       	pop	r15
    150a:	ef 90       	pop	r14
    150c:	df 90       	pop	r13
    150e:	cf 90       	pop	r12
    1510:	bf 90       	pop	r11
    1512:	af 90       	pop	r10
    1514:	9f 90       	pop	r9
    1516:	8f 90       	pop	r8
    1518:	7f 90       	pop	r7
    151a:	6f 90       	pop	r6
    151c:	5f 90       	pop	r5
    151e:	4f 90       	pop	r4
    1520:	08 95       	ret

00001522 <conv_flt>:
    1522:	2f 92       	push	r2
    1524:	3f 92       	push	r3
    1526:	4f 92       	push	r4
    1528:	5f 92       	push	r5
    152a:	6f 92       	push	r6
    152c:	7f 92       	push	r7
    152e:	9f 92       	push	r9
    1530:	af 92       	push	r10
    1532:	bf 92       	push	r11
    1534:	cf 92       	push	r12
    1536:	df 92       	push	r13
    1538:	ef 92       	push	r14
    153a:	ff 92       	push	r15
    153c:	0f 93       	push	r16
    153e:	1f 93       	push	r17
    1540:	cf 93       	push	r28
    1542:	df 93       	push	r29
    1544:	6c 01       	movw	r12, r24
    1546:	8b 01       	movw	r16, r22
    1548:	1a 01       	movw	r2, r20
    154a:	4f d4       	rcall	.+2206   	; 0x1dea <fgetc>
    154c:	ec 01       	movw	r28, r24
    154e:	99 27       	eor	r25, r25
    1550:	8b 32       	cpi	r24, 0x2B	; 43
    1552:	91 05       	cpc	r25, r1
    1554:	29 f0       	breq	.+10     	; 0x1560 <conv_flt+0x3e>
    1556:	8d 97       	sbiw	r24, 0x2d	; 45
    1558:	79 f4       	brne	.+30     	; 0x1578 <conv_flt+0x56>
    155a:	30 e8       	ldi	r19, 0x80	; 128
    155c:	93 2e       	mov	r9, r19
    155e:	01 c0       	rjmp	.+2      	; 0x1562 <conv_flt+0x40>
    1560:	91 2c       	mov	r9, r1
    1562:	01 50       	subi	r16, 0x01	; 1
    1564:	11 09       	sbc	r17, r1
    1566:	11 f4       	brne	.+4      	; 0x156c <conv_flt+0x4a>
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	fe c0       	rjmp	.+508    	; 0x1768 <conv_flt+0x246>
    156c:	c6 01       	movw	r24, r12
    156e:	3d d4       	rcall	.+2170   	; 0x1dea <fgetc>
    1570:	ec 01       	movw	r28, r24
    1572:	97 ff       	sbrs	r25, 7
    1574:	02 c0       	rjmp	.+4      	; 0x157a <conv_flt+0x58>
    1576:	f8 cf       	rjmp	.-16     	; 0x1568 <conv_flt+0x46>
    1578:	91 2c       	mov	r9, r1
    157a:	ce 01       	movw	r24, r28
    157c:	0d d4       	rcall	.+2074   	; 0x1d98 <tolower>
    157e:	89 36       	cpi	r24, 0x69	; 105
    1580:	91 05       	cpc	r25, r1
    1582:	31 f0       	breq	.+12     	; 0x1590 <conv_flt+0x6e>
    1584:	8e 36       	cpi	r24, 0x6E	; 110
    1586:	91 05       	cpc	r25, r1
    1588:	81 f5       	brne	.+96     	; 0x15ea <conv_flt+0xc8>
    158a:	c8 ef       	ldi	r28, 0xF8	; 248
    158c:	d1 e0       	ldi	r29, 0x01	; 1
    158e:	02 c0       	rjmp	.+4      	; 0x1594 <conv_flt+0x72>
    1590:	cb ef       	ldi	r28, 0xFB	; 251
    1592:	d1 e0       	ldi	r29, 0x01	; 1
    1594:	21 96       	adiw	r28, 0x01	; 1
    1596:	fe 01       	movw	r30, r28
    1598:	31 97       	sbiw	r30, 0x01	; 1
    159a:	b4 90       	lpm	r11, Z
    159c:	bb 20       	and	r11, r11
    159e:	b1 f0       	breq	.+44     	; 0x15cc <conv_flt+0xaa>
    15a0:	01 50       	subi	r16, 0x01	; 1
    15a2:	11 09       	sbc	r17, r1
    15a4:	79 f0       	breq	.+30     	; 0x15c4 <conv_flt+0xa2>
    15a6:	c6 01       	movw	r24, r12
    15a8:	20 d4       	rcall	.+2112   	; 0x1dea <fgetc>
    15aa:	7c 01       	movw	r14, r24
    15ac:	97 fd       	sbrc	r25, 7
    15ae:	0a c0       	rjmp	.+20     	; 0x15c4 <conv_flt+0xa2>
    15b0:	f3 d3       	rcall	.+2022   	; 0x1d98 <tolower>
    15b2:	99 27       	eor	r25, r25
    15b4:	eb 2d       	mov	r30, r11
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	8e 17       	cp	r24, r30
    15ba:	9f 07       	cpc	r25, r31
    15bc:	59 f3       	breq	.-42     	; 0x1594 <conv_flt+0x72>
    15be:	b6 01       	movw	r22, r12
    15c0:	c7 01       	movw	r24, r14
    15c2:	00 d5       	rcall	.+2560   	; 0x1fc4 <ungetc>
    15c4:	ce 5f       	subi	r28, 0xFE	; 254
    15c6:	d1 40       	sbci	r29, 0x01	; 1
    15c8:	79 f6       	brne	.-98     	; 0x1568 <conv_flt+0x46>
    15ca:	03 c0       	rjmp	.+6      	; 0x15d2 <conv_flt+0xb0>
    15cc:	cb 5f       	subi	r28, 0xFB	; 251
    15ce:	d1 40       	sbci	r29, 0x01	; 1
    15d0:	29 f0       	breq	.+10     	; 0x15dc <conv_flt+0xba>
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	a0 e8       	ldi	r26, 0x80	; 128
    15d8:	bf e7       	ldi	r27, 0x7F	; 127
    15da:	04 c0       	rjmp	.+8      	; 0x15e4 <conv_flt+0xc2>
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	a0 ec       	ldi	r26, 0xC0	; 192
    15e2:	bf e7       	ldi	r27, 0x7F	; 127
    15e4:	bc 01       	movw	r22, r24
    15e6:	cd 01       	movw	r24, r26
    15e8:	af c0       	rjmp	.+350    	; 0x1748 <conv_flt+0x226>
    15ea:	41 2c       	mov	r4, r1
    15ec:	51 2c       	mov	r5, r1
    15ee:	32 01       	movw	r6, r4
    15f0:	e1 2c       	mov	r14, r1
    15f2:	f1 2c       	mov	r15, r1
    15f4:	2c 2f       	mov	r18, r28
    15f6:	20 53       	subi	r18, 0x30	; 48
    15f8:	2a 30       	cpi	r18, 0x0A	; 10
    15fa:	08 f5       	brcc	.+66     	; 0x163e <conv_flt+0x11c>
    15fc:	e9 2d       	mov	r30, r9
    15fe:	e2 60       	ori	r30, 0x02	; 2
    1600:	be 2e       	mov	r11, r30
    1602:	89 2d       	mov	r24, r9
    1604:	88 70       	andi	r24, 0x08	; 8
    1606:	92 fe       	sbrs	r9, 2
    1608:	06 c0       	rjmp	.+12     	; 0x1616 <conv_flt+0xf4>
    160a:	81 11       	cpse	r24, r1
    160c:	1f c0       	rjmp	.+62     	; 0x164c <conv_flt+0x12a>
    160e:	ff ef       	ldi	r31, 0xFF	; 255
    1610:	ef 1a       	sub	r14, r31
    1612:	ff 0a       	sbc	r15, r31
    1614:	1b c0       	rjmp	.+54     	; 0x164c <conv_flt+0x12a>
    1616:	88 23       	and	r24, r24
    1618:	19 f0       	breq	.+6      	; 0x1620 <conv_flt+0xfe>
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	e8 1a       	sub	r14, r24
    161e:	f1 08       	sbc	r15, r1
    1620:	40 e2       	ldi	r20, 0x20	; 32
    1622:	c3 01       	movw	r24, r6
    1624:	b2 01       	movw	r22, r4
    1626:	cb dd       	rcall	.-1130   	; 0x11be <mulacc>
    1628:	2b 01       	movw	r4, r22
    162a:	3c 01       	movw	r6, r24
    162c:	68 39       	cpi	r22, 0x98	; 152
    162e:	79 49       	sbci	r23, 0x99	; 153
    1630:	89 49       	sbci	r24, 0x99	; 153
    1632:	99 41       	sbci	r25, 0x19	; 25
    1634:	58 f0       	brcs	.+22     	; 0x164c <conv_flt+0x12a>
    1636:	f9 2d       	mov	r31, r9
    1638:	f6 60       	ori	r31, 0x06	; 6
    163a:	bf 2e       	mov	r11, r31
    163c:	07 c0       	rjmp	.+14     	; 0x164c <conv_flt+0x12a>
    163e:	2e 3f       	cpi	r18, 0xFE	; 254
    1640:	81 f4       	brne	.+32     	; 0x1662 <conv_flt+0x140>
    1642:	93 fc       	sbrc	r9, 3
    1644:	0e c0       	rjmp	.+28     	; 0x1662 <conv_flt+0x140>
    1646:	29 2d       	mov	r18, r9
    1648:	28 60       	ori	r18, 0x08	; 8
    164a:	b2 2e       	mov	r11, r18
    164c:	01 50       	subi	r16, 0x01	; 1
    164e:	11 09       	sbc	r17, r1
    1650:	39 f0       	breq	.+14     	; 0x1660 <conv_flt+0x13e>
    1652:	c6 01       	movw	r24, r12
    1654:	ca d3       	rcall	.+1940   	; 0x1dea <fgetc>
    1656:	ec 01       	movw	r28, r24
    1658:	9b 2c       	mov	r9, r11
    165a:	97 ff       	sbrs	r25, 7
    165c:	cb cf       	rjmp	.-106    	; 0x15f4 <conv_flt+0xd2>
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <conv_flt+0x140>
    1660:	9b 2c       	mov	r9, r11
    1662:	91 fe       	sbrs	r9, 1
    1664:	81 cf       	rjmp	.-254    	; 0x1568 <conv_flt+0x46>
    1666:	ce 01       	movw	r24, r28
    1668:	8f 7d       	andi	r24, 0xDF	; 223
    166a:	99 27       	eor	r25, r25
    166c:	85 34       	cpi	r24, 0x45	; 69
    166e:	91 05       	cpc	r25, r1
    1670:	09 f0       	breq	.+2      	; 0x1674 <conv_flt+0x152>
    1672:	3e c0       	rjmp	.+124    	; 0x16f0 <conv_flt+0x1ce>
    1674:	58 01       	movw	r10, r16
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	a8 1a       	sub	r10, r24
    167a:	b1 08       	sbc	r11, r1
    167c:	09 f4       	brne	.+2      	; 0x1680 <conv_flt+0x15e>
    167e:	74 cf       	rjmp	.-280    	; 0x1568 <conv_flt+0x46>
    1680:	c6 01       	movw	r24, r12
    1682:	b3 d3       	rcall	.+1894   	; 0x1dea <fgetc>
    1684:	ec 01       	movw	r28, r24
    1686:	97 fd       	sbrc	r25, 7
    1688:	6f cf       	rjmp	.-290    	; 0x1568 <conv_flt+0x46>
    168a:	99 27       	eor	r25, r25
    168c:	8b 32       	cpi	r24, 0x2B	; 43
    168e:	91 05       	cpc	r25, r1
    1690:	29 f0       	breq	.+10     	; 0x169c <conv_flt+0x17a>
    1692:	8d 97       	sbiw	r24, 0x2d	; 45
    1694:	61 f4       	brne	.+24     	; 0x16ae <conv_flt+0x18c>
    1696:	e9 2d       	mov	r30, r9
    1698:	e0 61       	ori	r30, 0x10	; 16
    169a:	9e 2e       	mov	r9, r30
    169c:	58 01       	movw	r10, r16
    169e:	f2 e0       	ldi	r31, 0x02	; 2
    16a0:	af 1a       	sub	r10, r31
    16a2:	b1 08       	sbc	r11, r1
    16a4:	09 f4       	brne	.+2      	; 0x16a8 <conv_flt+0x186>
    16a6:	60 cf       	rjmp	.-320    	; 0x1568 <conv_flt+0x46>
    16a8:	c6 01       	movw	r24, r12
    16aa:	9f d3       	rcall	.+1854   	; 0x1dea <fgetc>
    16ac:	ec 01       	movw	r28, r24
    16ae:	ce 01       	movw	r24, r28
    16b0:	c0 97       	sbiw	r24, 0x30	; 48
    16b2:	0a 97       	sbiw	r24, 0x0a	; 10
    16b4:	08 f0       	brcs	.+2      	; 0x16b8 <conv_flt+0x196>
    16b6:	58 cf       	rjmp	.-336    	; 0x1568 <conv_flt+0x46>
    16b8:	85 01       	movw	r16, r10
    16ba:	a1 2c       	mov	r10, r1
    16bc:	b1 2c       	mov	r11, r1
    16be:	b5 01       	movw	r22, r10
    16c0:	bb 0c       	add	r11, r11
    16c2:	88 0b       	sbc	r24, r24
    16c4:	99 0b       	sbc	r25, r25
    16c6:	2c 2f       	mov	r18, r28
    16c8:	20 53       	subi	r18, 0x30	; 48
    16ca:	40 e2       	ldi	r20, 0x20	; 32
    16cc:	78 dd       	rcall	.-1296   	; 0x11be <mulacc>
    16ce:	5b 01       	movw	r10, r22
    16d0:	01 50       	subi	r16, 0x01	; 1
    16d2:	11 09       	sbc	r17, r1
    16d4:	31 f0       	breq	.+12     	; 0x16e2 <conv_flt+0x1c0>
    16d6:	c6 01       	movw	r24, r12
    16d8:	88 d3       	rcall	.+1808   	; 0x1dea <fgetc>
    16da:	ec 01       	movw	r28, r24
    16dc:	c0 97       	sbiw	r24, 0x30	; 48
    16de:	0a 97       	sbiw	r24, 0x0a	; 10
    16e0:	70 f3       	brcs	.-36     	; 0x16be <conv_flt+0x19c>
    16e2:	94 fe       	sbrs	r9, 4
    16e4:	03 c0       	rjmp	.+6      	; 0x16ec <conv_flt+0x1ca>
    16e6:	b1 94       	neg	r11
    16e8:	a1 94       	neg	r10
    16ea:	b1 08       	sbc	r11, r1
    16ec:	ea 0c       	add	r14, r10
    16ee:	fb 1c       	adc	r15, r11
    16f0:	01 2b       	or	r16, r17
    16f2:	29 f0       	breq	.+10     	; 0x16fe <conv_flt+0x1dc>
    16f4:	d7 fd       	sbrc	r29, 7
    16f6:	03 c0       	rjmp	.+6      	; 0x16fe <conv_flt+0x1dc>
    16f8:	b6 01       	movw	r22, r12
    16fa:	ce 01       	movw	r24, r28
    16fc:	63 d4       	rcall	.+2246   	; 0x1fc4 <ungetc>
    16fe:	c3 01       	movw	r24, r6
    1700:	b2 01       	movw	r22, r4
    1702:	79 d1       	rcall	.+754    	; 0x19f6 <__floatunsisf>
    1704:	f7 fe       	sbrs	r15, 7
    1706:	06 c0       	rjmp	.+12     	; 0x1714 <conv_flt+0x1f2>
    1708:	f1 94       	neg	r15
    170a:	e1 94       	neg	r14
    170c:	f1 08       	sbc	r15, r1
    170e:	c7 e1       	ldi	r28, 0x17	; 23
    1710:	d2 e0       	ldi	r29, 0x02	; 2
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <conv_flt+0x1f6>
    1714:	cf e2       	ldi	r28, 0x2F	; 47
    1716:	d2 e0       	ldi	r29, 0x02	; 2
    1718:	6e 01       	movw	r12, r28
    171a:	28 e1       	ldi	r18, 0x18	; 24
    171c:	c2 1a       	sub	r12, r18
    171e:	d1 08       	sbc	r13, r1
    1720:	00 e2       	ldi	r16, 0x20	; 32
    1722:	10 e0       	ldi	r17, 0x00	; 0
    1724:	e0 16       	cp	r14, r16
    1726:	f1 06       	cpc	r15, r17
    1728:	48 f0       	brcs	.+18     	; 0x173c <conv_flt+0x21a>
    172a:	fe 01       	movw	r30, r28
    172c:	25 91       	lpm	r18, Z+
    172e:	35 91       	lpm	r19, Z+
    1730:	45 91       	lpm	r20, Z+
    1732:	54 91       	lpm	r21, Z
    1734:	9d d1       	rcall	.+826    	; 0x1a70 <__mulsf3>
    1736:	e0 1a       	sub	r14, r16
    1738:	f1 0a       	sbc	r15, r17
    173a:	f4 cf       	rjmp	.-24     	; 0x1724 <conv_flt+0x202>
    173c:	24 97       	sbiw	r28, 0x04	; 4
    173e:	16 95       	lsr	r17
    1740:	07 95       	ror	r16
    1742:	cc 16       	cp	r12, r28
    1744:	dd 06       	cpc	r13, r29
    1746:	71 f7       	brne	.-36     	; 0x1724 <conv_flt+0x202>
    1748:	97 fe       	sbrs	r9, 7
    174a:	05 c0       	rjmp	.+10     	; 0x1756 <conv_flt+0x234>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	b0 58       	subi	r27, 0x80	; 128
    1752:	bc 01       	movw	r22, r24
    1754:	cd 01       	movw	r24, r26
    1756:	21 14       	cp	r2, r1
    1758:	31 04       	cpc	r3, r1
    175a:	29 f0       	breq	.+10     	; 0x1766 <conv_flt+0x244>
    175c:	f1 01       	movw	r30, r2
    175e:	60 83       	st	Z, r22
    1760:	71 83       	std	Z+1, r23	; 0x01
    1762:	82 83       	std	Z+2, r24	; 0x02
    1764:	93 83       	std	Z+3, r25	; 0x03
    1766:	81 e0       	ldi	r24, 0x01	; 1
    1768:	df 91       	pop	r29
    176a:	cf 91       	pop	r28
    176c:	1f 91       	pop	r17
    176e:	0f 91       	pop	r16
    1770:	ff 90       	pop	r15
    1772:	ef 90       	pop	r14
    1774:	df 90       	pop	r13
    1776:	cf 90       	pop	r12
    1778:	bf 90       	pop	r11
    177a:	af 90       	pop	r10
    177c:	9f 90       	pop	r9
    177e:	7f 90       	pop	r7
    1780:	6f 90       	pop	r6
    1782:	5f 90       	pop	r5
    1784:	4f 90       	pop	r4
    1786:	3f 90       	pop	r3
    1788:	2f 90       	pop	r2
    178a:	08 95       	ret

0000178c <vfscanf>:
    178c:	6f 92       	push	r6
    178e:	7f 92       	push	r7
    1790:	8f 92       	push	r8
    1792:	9f 92       	push	r9
    1794:	af 92       	push	r10
    1796:	bf 92       	push	r11
    1798:	cf 92       	push	r12
    179a:	df 92       	push	r13
    179c:	ef 92       	push	r14
    179e:	ff 92       	push	r15
    17a0:	0f 93       	push	r16
    17a2:	1f 93       	push	r17
    17a4:	cf 93       	push	r28
    17a6:	df 93       	push	r29
    17a8:	5c 01       	movw	r10, r24
    17aa:	eb 01       	movw	r28, r22
    17ac:	4a 01       	movw	r8, r20
    17ae:	fc 01       	movw	r30, r24
    17b0:	17 82       	std	Z+7, r1	; 0x07
    17b2:	16 82       	std	Z+6, r1	; 0x06
    17b4:	61 2c       	mov	r6, r1
    17b6:	f5 01       	movw	r30, r10
    17b8:	03 81       	ldd	r16, Z+3	; 0x03
    17ba:	fe 01       	movw	r30, r28
    17bc:	03 fd       	sbrc	r16, 3
    17be:	85 91       	lpm	r24, Z+
    17c0:	03 ff       	sbrs	r16, 3
    17c2:	81 91       	ld	r24, Z+
    17c4:	18 2f       	mov	r17, r24
    17c6:	ef 01       	movw	r28, r30
    17c8:	88 23       	and	r24, r24
    17ca:	09 f4       	brne	.+2      	; 0x17ce <vfscanf+0x42>
    17cc:	00 c1       	rjmp	.+512    	; 0x19ce <vfscanf+0x242>
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	db d2       	rcall	.+1462   	; 0x1d88 <isspace>
    17d2:	89 2b       	or	r24, r25
    17d4:	19 f0       	breq	.+6      	; 0x17dc <vfscanf+0x50>
    17d6:	c5 01       	movw	r24, r10
    17d8:	19 dd       	rcall	.-1486   	; 0x120c <skip_spaces>
    17da:	ed cf       	rjmp	.-38     	; 0x17b6 <vfscanf+0x2a>
    17dc:	15 32       	cpi	r17, 0x25	; 37
    17de:	41 f4       	brne	.+16     	; 0x17f0 <vfscanf+0x64>
    17e0:	fe 01       	movw	r30, r28
    17e2:	03 fd       	sbrc	r16, 3
    17e4:	15 91       	lpm	r17, Z+
    17e6:	03 ff       	sbrs	r16, 3
    17e8:	11 91       	ld	r17, Z+
    17ea:	ef 01       	movw	r28, r30
    17ec:	15 32       	cpi	r17, 0x25	; 37
    17ee:	71 f4       	brne	.+28     	; 0x180c <vfscanf+0x80>
    17f0:	c5 01       	movw	r24, r10
    17f2:	fb d2       	rcall	.+1526   	; 0x1dea <fgetc>
    17f4:	97 fd       	sbrc	r25, 7
    17f6:	e9 c0       	rjmp	.+466    	; 0x19ca <vfscanf+0x23e>
    17f8:	41 2f       	mov	r20, r17
    17fa:	50 e0       	ldi	r21, 0x00	; 0
    17fc:	9c 01       	movw	r18, r24
    17fe:	33 27       	eor	r19, r19
    1800:	24 17       	cp	r18, r20
    1802:	35 07       	cpc	r19, r21
    1804:	c1 f2       	breq	.-80     	; 0x17b6 <vfscanf+0x2a>
    1806:	b5 01       	movw	r22, r10
    1808:	dd d3       	rcall	.+1978   	; 0x1fc4 <ungetc>
    180a:	e1 c0       	rjmp	.+450    	; 0x19ce <vfscanf+0x242>
    180c:	1a 32       	cpi	r17, 0x2A	; 42
    180e:	41 f4       	brne	.+16     	; 0x1820 <vfscanf+0x94>
    1810:	03 fd       	sbrc	r16, 3
    1812:	15 91       	lpm	r17, Z+
    1814:	03 ff       	sbrs	r16, 3
    1816:	11 91       	ld	r17, Z+
    1818:	ef 01       	movw	r28, r30
    181a:	77 24       	eor	r7, r7
    181c:	73 94       	inc	r7
    181e:	01 c0       	rjmp	.+2      	; 0x1822 <vfscanf+0x96>
    1820:	71 2c       	mov	r7, r1
    1822:	e1 2c       	mov	r14, r1
    1824:	f1 2c       	mov	r15, r1
    1826:	20 ed       	ldi	r18, 0xD0	; 208
    1828:	21 0f       	add	r18, r17
    182a:	2a 30       	cpi	r18, 0x0A	; 10
    182c:	80 f4       	brcc	.+32     	; 0x184e <vfscanf+0xc2>
    182e:	f7 2d       	mov	r31, r7
    1830:	f2 60       	ori	r31, 0x02	; 2
    1832:	7f 2e       	mov	r7, r31
    1834:	b7 01       	movw	r22, r14
    1836:	80 e0       	ldi	r24, 0x00	; 0
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	40 e2       	ldi	r20, 0x20	; 32
    183c:	c0 dc       	rcall	.-1664   	; 0x11be <mulacc>
    183e:	7b 01       	movw	r14, r22
    1840:	fe 01       	movw	r30, r28
    1842:	03 fd       	sbrc	r16, 3
    1844:	15 91       	lpm	r17, Z+
    1846:	03 ff       	sbrs	r16, 3
    1848:	11 91       	ld	r17, Z+
    184a:	ef 01       	movw	r28, r30
    184c:	ec cf       	rjmp	.-40     	; 0x1826 <vfscanf+0x9a>
    184e:	71 fe       	sbrs	r7, 1
    1850:	04 c0       	rjmp	.+8      	; 0x185a <vfscanf+0xce>
    1852:	e1 14       	cp	r14, r1
    1854:	f1 04       	cpc	r15, r1
    1856:	21 f4       	brne	.+8      	; 0x1860 <vfscanf+0xd4>
    1858:	ba c0       	rjmp	.+372    	; 0x19ce <vfscanf+0x242>
    185a:	ee 24       	eor	r14, r14
    185c:	ea 94       	dec	r14
    185e:	fe 2c       	mov	r15, r14
    1860:	18 36       	cpi	r17, 0x68	; 104
    1862:	19 f0       	breq	.+6      	; 0x186a <vfscanf+0xde>
    1864:	1c 36       	cpi	r17, 0x6C	; 108
    1866:	61 f0       	breq	.+24     	; 0x1880 <vfscanf+0xf4>
    1868:	14 c0       	rjmp	.+40     	; 0x1892 <vfscanf+0x106>
    186a:	fe 01       	movw	r30, r28
    186c:	03 fd       	sbrc	r16, 3
    186e:	15 91       	lpm	r17, Z+
    1870:	03 ff       	sbrs	r16, 3
    1872:	11 91       	ld	r17, Z+
    1874:	ef 01       	movw	r28, r30
    1876:	18 36       	cpi	r17, 0x68	; 104
    1878:	61 f4       	brne	.+24     	; 0x1892 <vfscanf+0x106>
    187a:	87 2d       	mov	r24, r7
    187c:	88 60       	ori	r24, 0x08	; 8
    187e:	78 2e       	mov	r7, r24
    1880:	97 2d       	mov	r25, r7
    1882:	94 60       	ori	r25, 0x04	; 4
    1884:	79 2e       	mov	r7, r25
    1886:	fe 01       	movw	r30, r28
    1888:	03 fd       	sbrc	r16, 3
    188a:	15 91       	lpm	r17, Z+
    188c:	03 ff       	sbrs	r16, 3
    188e:	11 91       	ld	r17, Z+
    1890:	ef 01       	movw	r28, r30
    1892:	11 23       	and	r17, r17
    1894:	09 f4       	brne	.+2      	; 0x1898 <vfscanf+0x10c>
    1896:	9b c0       	rjmp	.+310    	; 0x19ce <vfscanf+0x242>
    1898:	61 2f       	mov	r22, r17
    189a:	70 e0       	ldi	r23, 0x00	; 0
    189c:	86 ee       	ldi	r24, 0xE6	; 230
    189e:	91 e0       	ldi	r25, 0x01	; 1
    18a0:	83 d2       	rcall	.+1286   	; 0x1da8 <strchr_P>
    18a2:	89 2b       	or	r24, r25
    18a4:	09 f4       	brne	.+2      	; 0x18a8 <vfscanf+0x11c>
    18a6:	93 c0       	rjmp	.+294    	; 0x19ce <vfscanf+0x242>
    18a8:	70 fc       	sbrc	r7, 0
    18aa:	07 c0       	rjmp	.+14     	; 0x18ba <vfscanf+0x12e>
    18ac:	f4 01       	movw	r30, r8
    18ae:	c0 80       	ld	r12, Z
    18b0:	d1 80       	ldd	r13, Z+1	; 0x01
    18b2:	c4 01       	movw	r24, r8
    18b4:	02 96       	adiw	r24, 0x02	; 2
    18b6:	4c 01       	movw	r8, r24
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <vfscanf+0x132>
    18ba:	c1 2c       	mov	r12, r1
    18bc:	d1 2c       	mov	r13, r1
    18be:	1e 36       	cpi	r17, 0x6E	; 110
    18c0:	49 f4       	brne	.+18     	; 0x18d4 <vfscanf+0x148>
    18c2:	f5 01       	movw	r30, r10
    18c4:	46 81       	ldd	r20, Z+6	; 0x06
    18c6:	57 81       	ldd	r21, Z+7	; 0x07
    18c8:	60 e0       	ldi	r22, 0x00	; 0
    18ca:	70 e0       	ldi	r23, 0x00	; 0
    18cc:	27 2d       	mov	r18, r7
    18ce:	c6 01       	movw	r24, r12
    18d0:	6a dc       	rcall	.-1836   	; 0x11a6 <putval>
    18d2:	71 cf       	rjmp	.-286    	; 0x17b6 <vfscanf+0x2a>
    18d4:	13 36       	cpi	r17, 0x63	; 99
    18d6:	b1 f4       	brne	.+44     	; 0x1904 <vfscanf+0x178>
    18d8:	71 fc       	sbrc	r7, 1
    18da:	03 c0       	rjmp	.+6      	; 0x18e2 <vfscanf+0x156>
    18dc:	ee 24       	eor	r14, r14
    18de:	e3 94       	inc	r14
    18e0:	f1 2c       	mov	r15, r1
    18e2:	c5 01       	movw	r24, r10
    18e4:	82 d2       	rcall	.+1284   	; 0x1dea <fgetc>
    18e6:	97 fd       	sbrc	r25, 7
    18e8:	70 c0       	rjmp	.+224    	; 0x19ca <vfscanf+0x23e>
    18ea:	c1 14       	cp	r12, r1
    18ec:	d1 04       	cpc	r13, r1
    18ee:	29 f0       	breq	.+10     	; 0x18fa <vfscanf+0x16e>
    18f0:	f6 01       	movw	r30, r12
    18f2:	80 83       	st	Z, r24
    18f4:	c6 01       	movw	r24, r12
    18f6:	01 96       	adiw	r24, 0x01	; 1
    18f8:	6c 01       	movw	r12, r24
    18fa:	91 e0       	ldi	r25, 0x01	; 1
    18fc:	e9 1a       	sub	r14, r25
    18fe:	f1 08       	sbc	r15, r1
    1900:	81 f7       	brne	.-32     	; 0x18e2 <vfscanf+0x156>
    1902:	5f c0       	rjmp	.+190    	; 0x19c2 <vfscanf+0x236>
    1904:	1b 35       	cpi	r17, 0x5B	; 91
    1906:	51 f4       	brne	.+20     	; 0x191c <vfscanf+0x190>
    1908:	9e 01       	movw	r18, r28
    190a:	a6 01       	movw	r20, r12
    190c:	b7 01       	movw	r22, r14
    190e:	c5 01       	movw	r24, r10
    1910:	23 dd       	rcall	.-1466   	; 0x1358 <conv_brk>
    1912:	ec 01       	movw	r28, r24
    1914:	89 2b       	or	r24, r25
    1916:	09 f0       	breq	.+2      	; 0x191a <vfscanf+0x18e>
    1918:	54 c0       	rjmp	.+168    	; 0x19c2 <vfscanf+0x236>
    191a:	4e c0       	rjmp	.+156    	; 0x19b8 <vfscanf+0x22c>
    191c:	c5 01       	movw	r24, r10
    191e:	76 dc       	rcall	.-1812   	; 0x120c <skip_spaces>
    1920:	97 fd       	sbrc	r25, 7
    1922:	53 c0       	rjmp	.+166    	; 0x19ca <vfscanf+0x23e>
    1924:	1f 36       	cpi	r17, 0x6F	; 111
    1926:	c9 f1       	breq	.+114    	; 0x199a <vfscanf+0x20e>
    1928:	40 f4       	brcc	.+16     	; 0x193a <vfscanf+0x1ae>
    192a:	14 36       	cpi	r17, 0x64	; 100
    192c:	91 f1       	breq	.+100    	; 0x1992 <vfscanf+0x206>
    192e:	19 36       	cpi	r17, 0x69	; 105
    1930:	b9 f1       	breq	.+110    	; 0x19a0 <vfscanf+0x214>
    1932:	18 35       	cpi	r17, 0x58	; 88
    1934:	09 f0       	breq	.+2      	; 0x1938 <vfscanf+0x1ac>
    1936:	3a c0       	rjmp	.+116    	; 0x19ac <vfscanf+0x220>
    1938:	28 c0       	rjmp	.+80     	; 0x198a <vfscanf+0x1fe>
    193a:	13 37       	cpi	r17, 0x73	; 115
    193c:	a9 f0       	breq	.+42     	; 0x1968 <vfscanf+0x1dc>
    193e:	18 f4       	brcc	.+6      	; 0x1946 <vfscanf+0x1ba>
    1940:	10 37       	cpi	r17, 0x70	; 112
    1942:	19 f1       	breq	.+70     	; 0x198a <vfscanf+0x1fe>
    1944:	33 c0       	rjmp	.+102    	; 0x19ac <vfscanf+0x220>
    1946:	15 37       	cpi	r17, 0x75	; 117
    1948:	21 f1       	breq	.+72     	; 0x1992 <vfscanf+0x206>
    194a:	18 37       	cpi	r17, 0x78	; 120
    194c:	f1 f0       	breq	.+60     	; 0x198a <vfscanf+0x1fe>
    194e:	2e c0       	rjmp	.+92     	; 0x19ac <vfscanf+0x220>
    1950:	c1 14       	cp	r12, r1
    1952:	d1 04       	cpc	r13, r1
    1954:	29 f0       	breq	.+10     	; 0x1960 <vfscanf+0x1d4>
    1956:	f6 01       	movw	r30, r12
    1958:	00 83       	st	Z, r16
    195a:	c6 01       	movw	r24, r12
    195c:	01 96       	adiw	r24, 0x01	; 1
    195e:	6c 01       	movw	r12, r24
    1960:	91 e0       	ldi	r25, 0x01	; 1
    1962:	e9 1a       	sub	r14, r25
    1964:	f1 08       	sbc	r15, r1
    1966:	59 f0       	breq	.+22     	; 0x197e <vfscanf+0x1f2>
    1968:	c5 01       	movw	r24, r10
    196a:	3f d2       	rcall	.+1150   	; 0x1dea <fgetc>
    196c:	8c 01       	movw	r16, r24
    196e:	97 fd       	sbrc	r25, 7
    1970:	06 c0       	rjmp	.+12     	; 0x197e <vfscanf+0x1f2>
    1972:	0a d2       	rcall	.+1044   	; 0x1d88 <isspace>
    1974:	89 2b       	or	r24, r25
    1976:	61 f3       	breq	.-40     	; 0x1950 <vfscanf+0x1c4>
    1978:	b5 01       	movw	r22, r10
    197a:	c8 01       	movw	r24, r16
    197c:	23 d3       	rcall	.+1606   	; 0x1fc4 <ungetc>
    197e:	c1 14       	cp	r12, r1
    1980:	d1 04       	cpc	r13, r1
    1982:	f9 f0       	breq	.+62     	; 0x19c2 <vfscanf+0x236>
    1984:	f6 01       	movw	r30, r12
    1986:	10 82       	st	Z, r1
    1988:	1c c0       	rjmp	.+56     	; 0x19c2 <vfscanf+0x236>
    198a:	f7 2d       	mov	r31, r7
    198c:	f0 64       	ori	r31, 0x40	; 64
    198e:	7f 2e       	mov	r7, r31
    1990:	07 c0       	rjmp	.+14     	; 0x19a0 <vfscanf+0x214>
    1992:	87 2d       	mov	r24, r7
    1994:	80 62       	ori	r24, 0x20	; 32
    1996:	78 2e       	mov	r7, r24
    1998:	03 c0       	rjmp	.+6      	; 0x19a0 <vfscanf+0x214>
    199a:	97 2d       	mov	r25, r7
    199c:	90 61       	ori	r25, 0x10	; 16
    199e:	79 2e       	mov	r7, r25
    19a0:	27 2d       	mov	r18, r7
    19a2:	a6 01       	movw	r20, r12
    19a4:	b7 01       	movw	r22, r14
    19a6:	c5 01       	movw	r24, r10
    19a8:	47 dc       	rcall	.-1906   	; 0x1238 <conv_int>
    19aa:	04 c0       	rjmp	.+8      	; 0x19b4 <vfscanf+0x228>
    19ac:	a6 01       	movw	r20, r12
    19ae:	b7 01       	movw	r22, r14
    19b0:	c5 01       	movw	r24, r10
    19b2:	b7 dd       	rcall	.-1170   	; 0x1522 <conv_flt>
    19b4:	81 11       	cpse	r24, r1
    19b6:	05 c0       	rjmp	.+10     	; 0x19c2 <vfscanf+0x236>
    19b8:	f5 01       	movw	r30, r10
    19ba:	83 81       	ldd	r24, Z+3	; 0x03
    19bc:	80 73       	andi	r24, 0x30	; 48
    19be:	29 f4       	brne	.+10     	; 0x19ca <vfscanf+0x23e>
    19c0:	06 c0       	rjmp	.+12     	; 0x19ce <vfscanf+0x242>
    19c2:	70 fc       	sbrc	r7, 0
    19c4:	f8 ce       	rjmp	.-528    	; 0x17b6 <vfscanf+0x2a>
    19c6:	63 94       	inc	r6
    19c8:	f6 ce       	rjmp	.-532    	; 0x17b6 <vfscanf+0x2a>
    19ca:	66 20       	and	r6, r6
    19cc:	19 f0       	breq	.+6      	; 0x19d4 <vfscanf+0x248>
    19ce:	86 2d       	mov	r24, r6
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	02 c0       	rjmp	.+4      	; 0x19d8 <vfscanf+0x24c>
    19d4:	8f ef       	ldi	r24, 0xFF	; 255
    19d6:	9f ef       	ldi	r25, 0xFF	; 255
    19d8:	df 91       	pop	r29
    19da:	cf 91       	pop	r28
    19dc:	1f 91       	pop	r17
    19de:	0f 91       	pop	r16
    19e0:	ff 90       	pop	r15
    19e2:	ef 90       	pop	r14
    19e4:	df 90       	pop	r13
    19e6:	cf 90       	pop	r12
    19e8:	bf 90       	pop	r11
    19ea:	af 90       	pop	r10
    19ec:	9f 90       	pop	r9
    19ee:	8f 90       	pop	r8
    19f0:	7f 90       	pop	r7
    19f2:	6f 90       	pop	r6
    19f4:	08 95       	ret

000019f6 <__floatunsisf>:
    19f6:	e8 94       	clt
    19f8:	09 c0       	rjmp	.+18     	; 0x1a0c <__floatsisf+0x12>

000019fa <__floatsisf>:
    19fa:	97 fb       	bst	r25, 7
    19fc:	3e f4       	brtc	.+14     	; 0x1a0c <__floatsisf+0x12>
    19fe:	90 95       	com	r25
    1a00:	80 95       	com	r24
    1a02:	70 95       	com	r23
    1a04:	61 95       	neg	r22
    1a06:	7f 4f       	sbci	r23, 0xFF	; 255
    1a08:	8f 4f       	sbci	r24, 0xFF	; 255
    1a0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0c:	99 23       	and	r25, r25
    1a0e:	a9 f0       	breq	.+42     	; 0x1a3a <__floatsisf+0x40>
    1a10:	f9 2f       	mov	r31, r25
    1a12:	96 e9       	ldi	r25, 0x96	; 150
    1a14:	bb 27       	eor	r27, r27
    1a16:	93 95       	inc	r25
    1a18:	f6 95       	lsr	r31
    1a1a:	87 95       	ror	r24
    1a1c:	77 95       	ror	r23
    1a1e:	67 95       	ror	r22
    1a20:	b7 95       	ror	r27
    1a22:	f1 11       	cpse	r31, r1
    1a24:	f8 cf       	rjmp	.-16     	; 0x1a16 <__floatsisf+0x1c>
    1a26:	fa f4       	brpl	.+62     	; 0x1a66 <__floatsisf+0x6c>
    1a28:	bb 0f       	add	r27, r27
    1a2a:	11 f4       	brne	.+4      	; 0x1a30 <__floatsisf+0x36>
    1a2c:	60 ff       	sbrs	r22, 0
    1a2e:	1b c0       	rjmp	.+54     	; 0x1a66 <__floatsisf+0x6c>
    1a30:	6f 5f       	subi	r22, 0xFF	; 255
    1a32:	7f 4f       	sbci	r23, 0xFF	; 255
    1a34:	8f 4f       	sbci	r24, 0xFF	; 255
    1a36:	9f 4f       	sbci	r25, 0xFF	; 255
    1a38:	16 c0       	rjmp	.+44     	; 0x1a66 <__floatsisf+0x6c>
    1a3a:	88 23       	and	r24, r24
    1a3c:	11 f0       	breq	.+4      	; 0x1a42 <__floatsisf+0x48>
    1a3e:	96 e9       	ldi	r25, 0x96	; 150
    1a40:	11 c0       	rjmp	.+34     	; 0x1a64 <__floatsisf+0x6a>
    1a42:	77 23       	and	r23, r23
    1a44:	21 f0       	breq	.+8      	; 0x1a4e <__floatsisf+0x54>
    1a46:	9e e8       	ldi	r25, 0x8E	; 142
    1a48:	87 2f       	mov	r24, r23
    1a4a:	76 2f       	mov	r23, r22
    1a4c:	05 c0       	rjmp	.+10     	; 0x1a58 <__floatsisf+0x5e>
    1a4e:	66 23       	and	r22, r22
    1a50:	71 f0       	breq	.+28     	; 0x1a6e <__floatsisf+0x74>
    1a52:	96 e8       	ldi	r25, 0x86	; 134
    1a54:	86 2f       	mov	r24, r22
    1a56:	70 e0       	ldi	r23, 0x00	; 0
    1a58:	60 e0       	ldi	r22, 0x00	; 0
    1a5a:	2a f0       	brmi	.+10     	; 0x1a66 <__floatsisf+0x6c>
    1a5c:	9a 95       	dec	r25
    1a5e:	66 0f       	add	r22, r22
    1a60:	77 1f       	adc	r23, r23
    1a62:	88 1f       	adc	r24, r24
    1a64:	da f7       	brpl	.-10     	; 0x1a5c <__floatsisf+0x62>
    1a66:	88 0f       	add	r24, r24
    1a68:	96 95       	lsr	r25
    1a6a:	87 95       	ror	r24
    1a6c:	97 f9       	bld	r25, 7
    1a6e:	08 95       	ret

00001a70 <__mulsf3>:
    1a70:	0b d0       	rcall	.+22     	; 0x1a88 <__mulsf3x>
    1a72:	78 c0       	rjmp	.+240    	; 0x1b64 <__fp_round>
    1a74:	69 d0       	rcall	.+210    	; 0x1b48 <__fp_pscA>
    1a76:	28 f0       	brcs	.+10     	; 0x1a82 <__mulsf3+0x12>
    1a78:	6e d0       	rcall	.+220    	; 0x1b56 <__fp_pscB>
    1a7a:	18 f0       	brcs	.+6      	; 0x1a82 <__mulsf3+0x12>
    1a7c:	95 23       	and	r25, r21
    1a7e:	09 f0       	breq	.+2      	; 0x1a82 <__mulsf3+0x12>
    1a80:	5a c0       	rjmp	.+180    	; 0x1b36 <__fp_inf>
    1a82:	5f c0       	rjmp	.+190    	; 0x1b42 <__fp_nan>
    1a84:	11 24       	eor	r1, r1
    1a86:	a2 c0       	rjmp	.+324    	; 0x1bcc <__fp_szero>

00001a88 <__mulsf3x>:
    1a88:	7e d0       	rcall	.+252    	; 0x1b86 <__fp_split3>
    1a8a:	a0 f3       	brcs	.-24     	; 0x1a74 <__mulsf3+0x4>

00001a8c <__mulsf3_pse>:
    1a8c:	95 9f       	mul	r25, r21
    1a8e:	d1 f3       	breq	.-12     	; 0x1a84 <__mulsf3+0x14>
    1a90:	95 0f       	add	r25, r21
    1a92:	50 e0       	ldi	r21, 0x00	; 0
    1a94:	55 1f       	adc	r21, r21
    1a96:	62 9f       	mul	r22, r18
    1a98:	f0 01       	movw	r30, r0
    1a9a:	72 9f       	mul	r23, r18
    1a9c:	bb 27       	eor	r27, r27
    1a9e:	f0 0d       	add	r31, r0
    1aa0:	b1 1d       	adc	r27, r1
    1aa2:	63 9f       	mul	r22, r19
    1aa4:	aa 27       	eor	r26, r26
    1aa6:	f0 0d       	add	r31, r0
    1aa8:	b1 1d       	adc	r27, r1
    1aaa:	aa 1f       	adc	r26, r26
    1aac:	64 9f       	mul	r22, r20
    1aae:	66 27       	eor	r22, r22
    1ab0:	b0 0d       	add	r27, r0
    1ab2:	a1 1d       	adc	r26, r1
    1ab4:	66 1f       	adc	r22, r22
    1ab6:	82 9f       	mul	r24, r18
    1ab8:	22 27       	eor	r18, r18
    1aba:	b0 0d       	add	r27, r0
    1abc:	a1 1d       	adc	r26, r1
    1abe:	62 1f       	adc	r22, r18
    1ac0:	73 9f       	mul	r23, r19
    1ac2:	b0 0d       	add	r27, r0
    1ac4:	a1 1d       	adc	r26, r1
    1ac6:	62 1f       	adc	r22, r18
    1ac8:	83 9f       	mul	r24, r19
    1aca:	a0 0d       	add	r26, r0
    1acc:	61 1d       	adc	r22, r1
    1ace:	22 1f       	adc	r18, r18
    1ad0:	74 9f       	mul	r23, r20
    1ad2:	33 27       	eor	r19, r19
    1ad4:	a0 0d       	add	r26, r0
    1ad6:	61 1d       	adc	r22, r1
    1ad8:	23 1f       	adc	r18, r19
    1ada:	84 9f       	mul	r24, r20
    1adc:	60 0d       	add	r22, r0
    1ade:	21 1d       	adc	r18, r1
    1ae0:	82 2f       	mov	r24, r18
    1ae2:	76 2f       	mov	r23, r22
    1ae4:	6a 2f       	mov	r22, r26
    1ae6:	11 24       	eor	r1, r1
    1ae8:	9f 57       	subi	r25, 0x7F	; 127
    1aea:	50 40       	sbci	r21, 0x00	; 0
    1aec:	8a f0       	brmi	.+34     	; 0x1b10 <__mulsf3_pse+0x84>
    1aee:	e1 f0       	breq	.+56     	; 0x1b28 <__mulsf3_pse+0x9c>
    1af0:	88 23       	and	r24, r24
    1af2:	4a f0       	brmi	.+18     	; 0x1b06 <__mulsf3_pse+0x7a>
    1af4:	ee 0f       	add	r30, r30
    1af6:	ff 1f       	adc	r31, r31
    1af8:	bb 1f       	adc	r27, r27
    1afa:	66 1f       	adc	r22, r22
    1afc:	77 1f       	adc	r23, r23
    1afe:	88 1f       	adc	r24, r24
    1b00:	91 50       	subi	r25, 0x01	; 1
    1b02:	50 40       	sbci	r21, 0x00	; 0
    1b04:	a9 f7       	brne	.-22     	; 0x1af0 <__mulsf3_pse+0x64>
    1b06:	9e 3f       	cpi	r25, 0xFE	; 254
    1b08:	51 05       	cpc	r21, r1
    1b0a:	70 f0       	brcs	.+28     	; 0x1b28 <__mulsf3_pse+0x9c>
    1b0c:	14 c0       	rjmp	.+40     	; 0x1b36 <__fp_inf>
    1b0e:	5e c0       	rjmp	.+188    	; 0x1bcc <__fp_szero>
    1b10:	5f 3f       	cpi	r21, 0xFF	; 255
    1b12:	ec f3       	brlt	.-6      	; 0x1b0e <__mulsf3_pse+0x82>
    1b14:	98 3e       	cpi	r25, 0xE8	; 232
    1b16:	dc f3       	brlt	.-10     	; 0x1b0e <__mulsf3_pse+0x82>
    1b18:	86 95       	lsr	r24
    1b1a:	77 95       	ror	r23
    1b1c:	67 95       	ror	r22
    1b1e:	b7 95       	ror	r27
    1b20:	f7 95       	ror	r31
    1b22:	e7 95       	ror	r30
    1b24:	9f 5f       	subi	r25, 0xFF	; 255
    1b26:	c1 f7       	brne	.-16     	; 0x1b18 <__mulsf3_pse+0x8c>
    1b28:	fe 2b       	or	r31, r30
    1b2a:	88 0f       	add	r24, r24
    1b2c:	91 1d       	adc	r25, r1
    1b2e:	96 95       	lsr	r25
    1b30:	87 95       	ror	r24
    1b32:	97 f9       	bld	r25, 7
    1b34:	08 95       	ret

00001b36 <__fp_inf>:
    1b36:	97 f9       	bld	r25, 7
    1b38:	9f 67       	ori	r25, 0x7F	; 127
    1b3a:	80 e8       	ldi	r24, 0x80	; 128
    1b3c:	70 e0       	ldi	r23, 0x00	; 0
    1b3e:	60 e0       	ldi	r22, 0x00	; 0
    1b40:	08 95       	ret

00001b42 <__fp_nan>:
    1b42:	9f ef       	ldi	r25, 0xFF	; 255
    1b44:	80 ec       	ldi	r24, 0xC0	; 192
    1b46:	08 95       	ret

00001b48 <__fp_pscA>:
    1b48:	00 24       	eor	r0, r0
    1b4a:	0a 94       	dec	r0
    1b4c:	16 16       	cp	r1, r22
    1b4e:	17 06       	cpc	r1, r23
    1b50:	18 06       	cpc	r1, r24
    1b52:	09 06       	cpc	r0, r25
    1b54:	08 95       	ret

00001b56 <__fp_pscB>:
    1b56:	00 24       	eor	r0, r0
    1b58:	0a 94       	dec	r0
    1b5a:	12 16       	cp	r1, r18
    1b5c:	13 06       	cpc	r1, r19
    1b5e:	14 06       	cpc	r1, r20
    1b60:	05 06       	cpc	r0, r21
    1b62:	08 95       	ret

00001b64 <__fp_round>:
    1b64:	09 2e       	mov	r0, r25
    1b66:	03 94       	inc	r0
    1b68:	00 0c       	add	r0, r0
    1b6a:	11 f4       	brne	.+4      	; 0x1b70 <__fp_round+0xc>
    1b6c:	88 23       	and	r24, r24
    1b6e:	52 f0       	brmi	.+20     	; 0x1b84 <__fp_round+0x20>
    1b70:	bb 0f       	add	r27, r27
    1b72:	40 f4       	brcc	.+16     	; 0x1b84 <__fp_round+0x20>
    1b74:	bf 2b       	or	r27, r31
    1b76:	11 f4       	brne	.+4      	; 0x1b7c <__fp_round+0x18>
    1b78:	60 ff       	sbrs	r22, 0
    1b7a:	04 c0       	rjmp	.+8      	; 0x1b84 <__fp_round+0x20>
    1b7c:	6f 5f       	subi	r22, 0xFF	; 255
    1b7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b80:	8f 4f       	sbci	r24, 0xFF	; 255
    1b82:	9f 4f       	sbci	r25, 0xFF	; 255
    1b84:	08 95       	ret

00001b86 <__fp_split3>:
    1b86:	57 fd       	sbrc	r21, 7
    1b88:	90 58       	subi	r25, 0x80	; 128
    1b8a:	44 0f       	add	r20, r20
    1b8c:	55 1f       	adc	r21, r21
    1b8e:	59 f0       	breq	.+22     	; 0x1ba6 <__fp_splitA+0x10>
    1b90:	5f 3f       	cpi	r21, 0xFF	; 255
    1b92:	71 f0       	breq	.+28     	; 0x1bb0 <__fp_splitA+0x1a>
    1b94:	47 95       	ror	r20

00001b96 <__fp_splitA>:
    1b96:	88 0f       	add	r24, r24
    1b98:	97 fb       	bst	r25, 7
    1b9a:	99 1f       	adc	r25, r25
    1b9c:	61 f0       	breq	.+24     	; 0x1bb6 <__fp_splitA+0x20>
    1b9e:	9f 3f       	cpi	r25, 0xFF	; 255
    1ba0:	79 f0       	breq	.+30     	; 0x1bc0 <__fp_splitA+0x2a>
    1ba2:	87 95       	ror	r24
    1ba4:	08 95       	ret
    1ba6:	12 16       	cp	r1, r18
    1ba8:	13 06       	cpc	r1, r19
    1baa:	14 06       	cpc	r1, r20
    1bac:	55 1f       	adc	r21, r21
    1bae:	f2 cf       	rjmp	.-28     	; 0x1b94 <__fp_split3+0xe>
    1bb0:	46 95       	lsr	r20
    1bb2:	f1 df       	rcall	.-30     	; 0x1b96 <__fp_splitA>
    1bb4:	08 c0       	rjmp	.+16     	; 0x1bc6 <__fp_splitA+0x30>
    1bb6:	16 16       	cp	r1, r22
    1bb8:	17 06       	cpc	r1, r23
    1bba:	18 06       	cpc	r1, r24
    1bbc:	99 1f       	adc	r25, r25
    1bbe:	f1 cf       	rjmp	.-30     	; 0x1ba2 <__fp_splitA+0xc>
    1bc0:	86 95       	lsr	r24
    1bc2:	71 05       	cpc	r23, r1
    1bc4:	61 05       	cpc	r22, r1
    1bc6:	08 94       	sec
    1bc8:	08 95       	ret

00001bca <__fp_zero>:
    1bca:	e8 94       	clt

00001bcc <__fp_szero>:
    1bcc:	bb 27       	eor	r27, r27
    1bce:	66 27       	eor	r22, r22
    1bd0:	77 27       	eor	r23, r23
    1bd2:	cb 01       	movw	r24, r22
    1bd4:	97 f9       	bld	r25, 7
    1bd6:	08 95       	ret

00001bd8 <__ftoa_engine>:
    1bd8:	28 30       	cpi	r18, 0x08	; 8
    1bda:	08 f0       	brcs	.+2      	; 0x1bde <__ftoa_engine+0x6>
    1bdc:	27 e0       	ldi	r18, 0x07	; 7
    1bde:	33 27       	eor	r19, r19
    1be0:	da 01       	movw	r26, r20
    1be2:	99 0f       	add	r25, r25
    1be4:	31 1d       	adc	r19, r1
    1be6:	87 fd       	sbrc	r24, 7
    1be8:	91 60       	ori	r25, 0x01	; 1
    1bea:	00 96       	adiw	r24, 0x00	; 0
    1bec:	61 05       	cpc	r22, r1
    1bee:	71 05       	cpc	r23, r1
    1bf0:	39 f4       	brne	.+14     	; 0x1c00 <__ftoa_engine+0x28>
    1bf2:	32 60       	ori	r19, 0x02	; 2
    1bf4:	2e 5f       	subi	r18, 0xFE	; 254
    1bf6:	3d 93       	st	X+, r19
    1bf8:	30 e3       	ldi	r19, 0x30	; 48
    1bfa:	2a 95       	dec	r18
    1bfc:	e1 f7       	brne	.-8      	; 0x1bf6 <__ftoa_engine+0x1e>
    1bfe:	08 95       	ret
    1c00:	9f 3f       	cpi	r25, 0xFF	; 255
    1c02:	30 f0       	brcs	.+12     	; 0x1c10 <__ftoa_engine+0x38>
    1c04:	80 38       	cpi	r24, 0x80	; 128
    1c06:	71 05       	cpc	r23, r1
    1c08:	61 05       	cpc	r22, r1
    1c0a:	09 f0       	breq	.+2      	; 0x1c0e <__ftoa_engine+0x36>
    1c0c:	3c 5f       	subi	r19, 0xFC	; 252
    1c0e:	3c 5f       	subi	r19, 0xFC	; 252
    1c10:	3d 93       	st	X+, r19
    1c12:	91 30       	cpi	r25, 0x01	; 1
    1c14:	08 f0       	brcs	.+2      	; 0x1c18 <__ftoa_engine+0x40>
    1c16:	80 68       	ori	r24, 0x80	; 128
    1c18:	91 1d       	adc	r25, r1
    1c1a:	df 93       	push	r29
    1c1c:	cf 93       	push	r28
    1c1e:	1f 93       	push	r17
    1c20:	0f 93       	push	r16
    1c22:	ff 92       	push	r15
    1c24:	ef 92       	push	r14
    1c26:	19 2f       	mov	r17, r25
    1c28:	98 7f       	andi	r25, 0xF8	; 248
    1c2a:	96 95       	lsr	r25
    1c2c:	e9 2f       	mov	r30, r25
    1c2e:	96 95       	lsr	r25
    1c30:	96 95       	lsr	r25
    1c32:	e9 0f       	add	r30, r25
    1c34:	ff 27       	eor	r31, r31
    1c36:	ea 5b       	subi	r30, 0xBA	; 186
    1c38:	fe 4f       	sbci	r31, 0xFE	; 254
    1c3a:	99 27       	eor	r25, r25
    1c3c:	33 27       	eor	r19, r19
    1c3e:	ee 24       	eor	r14, r14
    1c40:	ff 24       	eor	r15, r15
    1c42:	a7 01       	movw	r20, r14
    1c44:	e7 01       	movw	r28, r14
    1c46:	05 90       	lpm	r0, Z+
    1c48:	08 94       	sec
    1c4a:	07 94       	ror	r0
    1c4c:	28 f4       	brcc	.+10     	; 0x1c58 <__ftoa_engine+0x80>
    1c4e:	36 0f       	add	r19, r22
    1c50:	e7 1e       	adc	r14, r23
    1c52:	f8 1e       	adc	r15, r24
    1c54:	49 1f       	adc	r20, r25
    1c56:	51 1d       	adc	r21, r1
    1c58:	66 0f       	add	r22, r22
    1c5a:	77 1f       	adc	r23, r23
    1c5c:	88 1f       	adc	r24, r24
    1c5e:	99 1f       	adc	r25, r25
    1c60:	06 94       	lsr	r0
    1c62:	a1 f7       	brne	.-24     	; 0x1c4c <__ftoa_engine+0x74>
    1c64:	05 90       	lpm	r0, Z+
    1c66:	07 94       	ror	r0
    1c68:	28 f4       	brcc	.+10     	; 0x1c74 <__ftoa_engine+0x9c>
    1c6a:	e7 0e       	add	r14, r23
    1c6c:	f8 1e       	adc	r15, r24
    1c6e:	49 1f       	adc	r20, r25
    1c70:	56 1f       	adc	r21, r22
    1c72:	c1 1d       	adc	r28, r1
    1c74:	77 0f       	add	r23, r23
    1c76:	88 1f       	adc	r24, r24
    1c78:	99 1f       	adc	r25, r25
    1c7a:	66 1f       	adc	r22, r22
    1c7c:	06 94       	lsr	r0
    1c7e:	a1 f7       	brne	.-24     	; 0x1c68 <__ftoa_engine+0x90>
    1c80:	05 90       	lpm	r0, Z+
    1c82:	07 94       	ror	r0
    1c84:	28 f4       	brcc	.+10     	; 0x1c90 <__ftoa_engine+0xb8>
    1c86:	f8 0e       	add	r15, r24
    1c88:	49 1f       	adc	r20, r25
    1c8a:	56 1f       	adc	r21, r22
    1c8c:	c7 1f       	adc	r28, r23
    1c8e:	d1 1d       	adc	r29, r1
    1c90:	88 0f       	add	r24, r24
    1c92:	99 1f       	adc	r25, r25
    1c94:	66 1f       	adc	r22, r22
    1c96:	77 1f       	adc	r23, r23
    1c98:	06 94       	lsr	r0
    1c9a:	a1 f7       	brne	.-24     	; 0x1c84 <__ftoa_engine+0xac>
    1c9c:	05 90       	lpm	r0, Z+
    1c9e:	07 94       	ror	r0
    1ca0:	20 f4       	brcc	.+8      	; 0x1caa <__ftoa_engine+0xd2>
    1ca2:	49 0f       	add	r20, r25
    1ca4:	56 1f       	adc	r21, r22
    1ca6:	c7 1f       	adc	r28, r23
    1ca8:	d8 1f       	adc	r29, r24
    1caa:	99 0f       	add	r25, r25
    1cac:	66 1f       	adc	r22, r22
    1cae:	77 1f       	adc	r23, r23
    1cb0:	88 1f       	adc	r24, r24
    1cb2:	06 94       	lsr	r0
    1cb4:	a9 f7       	brne	.-22     	; 0x1ca0 <__ftoa_engine+0xc8>
    1cb6:	84 91       	lpm	r24, Z
    1cb8:	10 95       	com	r17
    1cba:	17 70       	andi	r17, 0x07	; 7
    1cbc:	41 f0       	breq	.+16     	; 0x1cce <__ftoa_engine+0xf6>
    1cbe:	d6 95       	lsr	r29
    1cc0:	c7 95       	ror	r28
    1cc2:	57 95       	ror	r21
    1cc4:	47 95       	ror	r20
    1cc6:	f7 94       	ror	r15
    1cc8:	e7 94       	ror	r14
    1cca:	1a 95       	dec	r17
    1ccc:	c1 f7       	brne	.-16     	; 0x1cbe <__ftoa_engine+0xe6>
    1cce:	ec ee       	ldi	r30, 0xEC	; 236
    1cd0:	f0 e0       	ldi	r31, 0x00	; 0
    1cd2:	68 94       	set
    1cd4:	15 90       	lpm	r1, Z+
    1cd6:	15 91       	lpm	r17, Z+
    1cd8:	35 91       	lpm	r19, Z+
    1cda:	65 91       	lpm	r22, Z+
    1cdc:	95 91       	lpm	r25, Z+
    1cde:	05 90       	lpm	r0, Z+
    1ce0:	7f e2       	ldi	r23, 0x2F	; 47
    1ce2:	73 95       	inc	r23
    1ce4:	e1 18       	sub	r14, r1
    1ce6:	f1 0a       	sbc	r15, r17
    1ce8:	43 0b       	sbc	r20, r19
    1cea:	56 0b       	sbc	r21, r22
    1cec:	c9 0b       	sbc	r28, r25
    1cee:	d0 09       	sbc	r29, r0
    1cf0:	c0 f7       	brcc	.-16     	; 0x1ce2 <__ftoa_engine+0x10a>
    1cf2:	e1 0c       	add	r14, r1
    1cf4:	f1 1e       	adc	r15, r17
    1cf6:	43 1f       	adc	r20, r19
    1cf8:	56 1f       	adc	r21, r22
    1cfa:	c9 1f       	adc	r28, r25
    1cfc:	d0 1d       	adc	r29, r0
    1cfe:	7e f4       	brtc	.+30     	; 0x1d1e <__ftoa_engine+0x146>
    1d00:	70 33       	cpi	r23, 0x30	; 48
    1d02:	11 f4       	brne	.+4      	; 0x1d08 <__ftoa_engine+0x130>
    1d04:	8a 95       	dec	r24
    1d06:	e6 cf       	rjmp	.-52     	; 0x1cd4 <__ftoa_engine+0xfc>
    1d08:	e8 94       	clt
    1d0a:	01 50       	subi	r16, 0x01	; 1
    1d0c:	30 f0       	brcs	.+12     	; 0x1d1a <__ftoa_engine+0x142>
    1d0e:	08 0f       	add	r16, r24
    1d10:	0a f4       	brpl	.+2      	; 0x1d14 <__ftoa_engine+0x13c>
    1d12:	00 27       	eor	r16, r16
    1d14:	02 17       	cp	r16, r18
    1d16:	08 f4       	brcc	.+2      	; 0x1d1a <__ftoa_engine+0x142>
    1d18:	20 2f       	mov	r18, r16
    1d1a:	23 95       	inc	r18
    1d1c:	02 2f       	mov	r16, r18
    1d1e:	7a 33       	cpi	r23, 0x3A	; 58
    1d20:	28 f0       	brcs	.+10     	; 0x1d2c <__ftoa_engine+0x154>
    1d22:	79 e3       	ldi	r23, 0x39	; 57
    1d24:	7d 93       	st	X+, r23
    1d26:	2a 95       	dec	r18
    1d28:	e9 f7       	brne	.-6      	; 0x1d24 <__ftoa_engine+0x14c>
    1d2a:	10 c0       	rjmp	.+32     	; 0x1d4c <__ftoa_engine+0x174>
    1d2c:	7d 93       	st	X+, r23
    1d2e:	2a 95       	dec	r18
    1d30:	89 f6       	brne	.-94     	; 0x1cd4 <__ftoa_engine+0xfc>
    1d32:	06 94       	lsr	r0
    1d34:	97 95       	ror	r25
    1d36:	67 95       	ror	r22
    1d38:	37 95       	ror	r19
    1d3a:	17 95       	ror	r17
    1d3c:	17 94       	ror	r1
    1d3e:	e1 18       	sub	r14, r1
    1d40:	f1 0a       	sbc	r15, r17
    1d42:	43 0b       	sbc	r20, r19
    1d44:	56 0b       	sbc	r21, r22
    1d46:	c9 0b       	sbc	r28, r25
    1d48:	d0 09       	sbc	r29, r0
    1d4a:	98 f0       	brcs	.+38     	; 0x1d72 <__ftoa_engine+0x19a>
    1d4c:	23 95       	inc	r18
    1d4e:	7e 91       	ld	r23, -X
    1d50:	73 95       	inc	r23
    1d52:	7a 33       	cpi	r23, 0x3A	; 58
    1d54:	08 f0       	brcs	.+2      	; 0x1d58 <__ftoa_engine+0x180>
    1d56:	70 e3       	ldi	r23, 0x30	; 48
    1d58:	7c 93       	st	X, r23
    1d5a:	20 13       	cpse	r18, r16
    1d5c:	b8 f7       	brcc	.-18     	; 0x1d4c <__ftoa_engine+0x174>
    1d5e:	7e 91       	ld	r23, -X
    1d60:	70 61       	ori	r23, 0x10	; 16
    1d62:	7d 93       	st	X+, r23
    1d64:	30 f0       	brcs	.+12     	; 0x1d72 <__ftoa_engine+0x19a>
    1d66:	83 95       	inc	r24
    1d68:	71 e3       	ldi	r23, 0x31	; 49
    1d6a:	7d 93       	st	X+, r23
    1d6c:	70 e3       	ldi	r23, 0x30	; 48
    1d6e:	2a 95       	dec	r18
    1d70:	e1 f7       	brne	.-8      	; 0x1d6a <__ftoa_engine+0x192>
    1d72:	11 24       	eor	r1, r1
    1d74:	ef 90       	pop	r14
    1d76:	ff 90       	pop	r15
    1d78:	0f 91       	pop	r16
    1d7a:	1f 91       	pop	r17
    1d7c:	cf 91       	pop	r28
    1d7e:	df 91       	pop	r29
    1d80:	99 27       	eor	r25, r25
    1d82:	87 fd       	sbrc	r24, 7
    1d84:	90 95       	com	r25
    1d86:	08 95       	ret

00001d88 <isspace>:
    1d88:	91 11       	cpse	r25, r1
    1d8a:	93 c1       	rjmp	.+806    	; 0x20b2 <__ctype_isfalse>
    1d8c:	80 32       	cpi	r24, 0x20	; 32
    1d8e:	19 f0       	breq	.+6      	; 0x1d96 <isspace+0xe>
    1d90:	89 50       	subi	r24, 0x09	; 9
    1d92:	85 50       	subi	r24, 0x05	; 5
    1d94:	d0 f7       	brcc	.-12     	; 0x1d8a <isspace+0x2>
    1d96:	08 95       	ret

00001d98 <tolower>:
    1d98:	91 11       	cpse	r25, r1
    1d9a:	08 95       	ret
    1d9c:	81 54       	subi	r24, 0x41	; 65
    1d9e:	8a 51       	subi	r24, 0x1A	; 26
    1da0:	08 f4       	brcc	.+2      	; 0x1da4 <tolower+0xc>
    1da2:	80 5e       	subi	r24, 0xE0	; 224
    1da4:	85 5a       	subi	r24, 0xA5	; 165
    1da6:	08 95       	ret

00001da8 <strchr_P>:
    1da8:	fc 01       	movw	r30, r24
    1daa:	05 90       	lpm	r0, Z+
    1dac:	06 16       	cp	r0, r22
    1dae:	21 f0       	breq	.+8      	; 0x1db8 <strchr_P+0x10>
    1db0:	00 20       	and	r0, r0
    1db2:	d9 f7       	brne	.-10     	; 0x1daa <strchr_P+0x2>
    1db4:	c0 01       	movw	r24, r0
    1db6:	08 95       	ret
    1db8:	31 97       	sbiw	r30, 0x01	; 1
    1dba:	cf 01       	movw	r24, r30
    1dbc:	08 95       	ret

00001dbe <strnlen_P>:
    1dbe:	fc 01       	movw	r30, r24
    1dc0:	05 90       	lpm	r0, Z+
    1dc2:	61 50       	subi	r22, 0x01	; 1
    1dc4:	70 40       	sbci	r23, 0x00	; 0
    1dc6:	01 10       	cpse	r0, r1
    1dc8:	d8 f7       	brcc	.-10     	; 0x1dc0 <strnlen_P+0x2>
    1dca:	80 95       	com	r24
    1dcc:	90 95       	com	r25
    1dce:	8e 0f       	add	r24, r30
    1dd0:	9f 1f       	adc	r25, r31
    1dd2:	08 95       	ret

00001dd4 <strnlen>:
    1dd4:	fc 01       	movw	r30, r24
    1dd6:	61 50       	subi	r22, 0x01	; 1
    1dd8:	70 40       	sbci	r23, 0x00	; 0
    1dda:	01 90       	ld	r0, Z+
    1ddc:	01 10       	cpse	r0, r1
    1dde:	d8 f7       	brcc	.-10     	; 0x1dd6 <strnlen+0x2>
    1de0:	80 95       	com	r24
    1de2:	90 95       	com	r25
    1de4:	8e 0f       	add	r24, r30
    1de6:	9f 1f       	adc	r25, r31
    1de8:	08 95       	ret

00001dea <fgetc>:
    1dea:	cf 93       	push	r28
    1dec:	df 93       	push	r29
    1dee:	ec 01       	movw	r28, r24
    1df0:	2b 81       	ldd	r18, Y+3	; 0x03
    1df2:	20 ff       	sbrs	r18, 0
    1df4:	33 c0       	rjmp	.+102    	; 0x1e5c <fgetc+0x72>
    1df6:	26 ff       	sbrs	r18, 6
    1df8:	0a c0       	rjmp	.+20     	; 0x1e0e <fgetc+0x24>
    1dfa:	2f 7b       	andi	r18, 0xBF	; 191
    1dfc:	2b 83       	std	Y+3, r18	; 0x03
    1dfe:	8e 81       	ldd	r24, Y+6	; 0x06
    1e00:	9f 81       	ldd	r25, Y+7	; 0x07
    1e02:	01 96       	adiw	r24, 0x01	; 1
    1e04:	9f 83       	std	Y+7, r25	; 0x07
    1e06:	8e 83       	std	Y+6, r24	; 0x06
    1e08:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0a:	90 e0       	ldi	r25, 0x00	; 0
    1e0c:	29 c0       	rjmp	.+82     	; 0x1e60 <fgetc+0x76>
    1e0e:	22 ff       	sbrs	r18, 2
    1e10:	0f c0       	rjmp	.+30     	; 0x1e30 <fgetc+0x46>
    1e12:	e8 81       	ld	r30, Y
    1e14:	f9 81       	ldd	r31, Y+1	; 0x01
    1e16:	80 81       	ld	r24, Z
    1e18:	08 2e       	mov	r0, r24
    1e1a:	00 0c       	add	r0, r0
    1e1c:	99 0b       	sbc	r25, r25
    1e1e:	00 97       	sbiw	r24, 0x00	; 0
    1e20:	19 f4       	brne	.+6      	; 0x1e28 <fgetc+0x3e>
    1e22:	20 62       	ori	r18, 0x20	; 32
    1e24:	2b 83       	std	Y+3, r18	; 0x03
    1e26:	1a c0       	rjmp	.+52     	; 0x1e5c <fgetc+0x72>
    1e28:	31 96       	adiw	r30, 0x01	; 1
    1e2a:	f9 83       	std	Y+1, r31	; 0x01
    1e2c:	e8 83       	st	Y, r30
    1e2e:	0e c0       	rjmp	.+28     	; 0x1e4c <fgetc+0x62>
    1e30:	ea 85       	ldd	r30, Y+10	; 0x0a
    1e32:	fb 85       	ldd	r31, Y+11	; 0x0b
    1e34:	19 95       	eicall
    1e36:	97 ff       	sbrs	r25, 7
    1e38:	09 c0       	rjmp	.+18     	; 0x1e4c <fgetc+0x62>
    1e3a:	2b 81       	ldd	r18, Y+3	; 0x03
    1e3c:	01 96       	adiw	r24, 0x01	; 1
    1e3e:	11 f0       	breq	.+4      	; 0x1e44 <fgetc+0x5a>
    1e40:	80 e2       	ldi	r24, 0x20	; 32
    1e42:	01 c0       	rjmp	.+2      	; 0x1e46 <fgetc+0x5c>
    1e44:	80 e1       	ldi	r24, 0x10	; 16
    1e46:	82 2b       	or	r24, r18
    1e48:	8b 83       	std	Y+3, r24	; 0x03
    1e4a:	08 c0       	rjmp	.+16     	; 0x1e5c <fgetc+0x72>
    1e4c:	2e 81       	ldd	r18, Y+6	; 0x06
    1e4e:	3f 81       	ldd	r19, Y+7	; 0x07
    1e50:	2f 5f       	subi	r18, 0xFF	; 255
    1e52:	3f 4f       	sbci	r19, 0xFF	; 255
    1e54:	3f 83       	std	Y+7, r19	; 0x07
    1e56:	2e 83       	std	Y+6, r18	; 0x06
    1e58:	99 27       	eor	r25, r25
    1e5a:	02 c0       	rjmp	.+4      	; 0x1e60 <fgetc+0x76>
    1e5c:	8f ef       	ldi	r24, 0xFF	; 255
    1e5e:	9f ef       	ldi	r25, 0xFF	; 255
    1e60:	df 91       	pop	r29
    1e62:	cf 91       	pop	r28
    1e64:	08 95       	ret

00001e66 <fputc>:
    1e66:	0f 93       	push	r16
    1e68:	1f 93       	push	r17
    1e6a:	cf 93       	push	r28
    1e6c:	df 93       	push	r29
    1e6e:	fb 01       	movw	r30, r22
    1e70:	23 81       	ldd	r18, Z+3	; 0x03
    1e72:	21 fd       	sbrc	r18, 1
    1e74:	03 c0       	rjmp	.+6      	; 0x1e7c <fputc+0x16>
    1e76:	8f ef       	ldi	r24, 0xFF	; 255
    1e78:	9f ef       	ldi	r25, 0xFF	; 255
    1e7a:	2c c0       	rjmp	.+88     	; 0x1ed4 <fputc+0x6e>
    1e7c:	22 ff       	sbrs	r18, 2
    1e7e:	16 c0       	rjmp	.+44     	; 0x1eac <fputc+0x46>
    1e80:	46 81       	ldd	r20, Z+6	; 0x06
    1e82:	57 81       	ldd	r21, Z+7	; 0x07
    1e84:	24 81       	ldd	r18, Z+4	; 0x04
    1e86:	35 81       	ldd	r19, Z+5	; 0x05
    1e88:	42 17       	cp	r20, r18
    1e8a:	53 07       	cpc	r21, r19
    1e8c:	44 f4       	brge	.+16     	; 0x1e9e <fputc+0x38>
    1e8e:	a0 81       	ld	r26, Z
    1e90:	b1 81       	ldd	r27, Z+1	; 0x01
    1e92:	9d 01       	movw	r18, r26
    1e94:	2f 5f       	subi	r18, 0xFF	; 255
    1e96:	3f 4f       	sbci	r19, 0xFF	; 255
    1e98:	31 83       	std	Z+1, r19	; 0x01
    1e9a:	20 83       	st	Z, r18
    1e9c:	8c 93       	st	X, r24
    1e9e:	26 81       	ldd	r18, Z+6	; 0x06
    1ea0:	37 81       	ldd	r19, Z+7	; 0x07
    1ea2:	2f 5f       	subi	r18, 0xFF	; 255
    1ea4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ea6:	37 83       	std	Z+7, r19	; 0x07
    1ea8:	26 83       	std	Z+6, r18	; 0x06
    1eaa:	14 c0       	rjmp	.+40     	; 0x1ed4 <fputc+0x6e>
    1eac:	8b 01       	movw	r16, r22
    1eae:	ec 01       	movw	r28, r24
    1eb0:	fb 01       	movw	r30, r22
    1eb2:	00 84       	ldd	r0, Z+8	; 0x08
    1eb4:	f1 85       	ldd	r31, Z+9	; 0x09
    1eb6:	e0 2d       	mov	r30, r0
    1eb8:	19 95       	eicall
    1eba:	89 2b       	or	r24, r25
    1ebc:	e1 f6       	brne	.-72     	; 0x1e76 <fputc+0x10>
    1ebe:	d8 01       	movw	r26, r16
    1ec0:	16 96       	adiw	r26, 0x06	; 6
    1ec2:	8d 91       	ld	r24, X+
    1ec4:	9c 91       	ld	r25, X
    1ec6:	17 97       	sbiw	r26, 0x07	; 7
    1ec8:	01 96       	adiw	r24, 0x01	; 1
    1eca:	17 96       	adiw	r26, 0x07	; 7
    1ecc:	9c 93       	st	X, r25
    1ece:	8e 93       	st	-X, r24
    1ed0:	16 97       	sbiw	r26, 0x06	; 6
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	df 91       	pop	r29
    1ed6:	cf 91       	pop	r28
    1ed8:	1f 91       	pop	r17
    1eda:	0f 91       	pop	r16
    1edc:	08 95       	ret

00001ede <printf>:
    1ede:	cf 93       	push	r28
    1ee0:	df 93       	push	r29
    1ee2:	cd b7       	in	r28, 0x3d	; 61
    1ee4:	de b7       	in	r29, 0x3e	; 62
    1ee6:	ae 01       	movw	r20, r28
    1ee8:	4a 5f       	subi	r20, 0xFA	; 250
    1eea:	5f 4f       	sbci	r21, 0xFF	; 255
    1eec:	fa 01       	movw	r30, r20
    1eee:	61 91       	ld	r22, Z+
    1ef0:	71 91       	ld	r23, Z+
    1ef2:	af 01       	movw	r20, r30
    1ef4:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <__data_end+0x2>
    1ef8:	90 91 8d 02 	lds	r25, 0x028D	; 0x80028d <__data_end+0x3>
    1efc:	0e 94 3e 05 	call	0xa7c	; 0xa7c <vfprintf>
    1f00:	df 91       	pop	r29
    1f02:	cf 91       	pop	r28
    1f04:	08 95       	ret

00001f06 <puts>:
    1f06:	0f 93       	push	r16
    1f08:	1f 93       	push	r17
    1f0a:	cf 93       	push	r28
    1f0c:	df 93       	push	r29
    1f0e:	e0 91 8c 02 	lds	r30, 0x028C	; 0x80028c <__data_end+0x2>
    1f12:	f0 91 8d 02 	lds	r31, 0x028D	; 0x80028d <__data_end+0x3>
    1f16:	23 81       	ldd	r18, Z+3	; 0x03
    1f18:	21 ff       	sbrs	r18, 1
    1f1a:	1b c0       	rjmp	.+54     	; 0x1f52 <puts+0x4c>
    1f1c:	8c 01       	movw	r16, r24
    1f1e:	d0 e0       	ldi	r29, 0x00	; 0
    1f20:	c0 e0       	ldi	r28, 0x00	; 0
    1f22:	f8 01       	movw	r30, r16
    1f24:	81 91       	ld	r24, Z+
    1f26:	8f 01       	movw	r16, r30
    1f28:	60 91 8c 02 	lds	r22, 0x028C	; 0x80028c <__data_end+0x2>
    1f2c:	70 91 8d 02 	lds	r23, 0x028D	; 0x80028d <__data_end+0x3>
    1f30:	db 01       	movw	r26, r22
    1f32:	18 96       	adiw	r26, 0x08	; 8
    1f34:	ed 91       	ld	r30, X+
    1f36:	fc 91       	ld	r31, X
    1f38:	19 97       	sbiw	r26, 0x09	; 9
    1f3a:	88 23       	and	r24, r24
    1f3c:	31 f0       	breq	.+12     	; 0x1f4a <puts+0x44>
    1f3e:	19 95       	eicall
    1f40:	89 2b       	or	r24, r25
    1f42:	79 f3       	breq	.-34     	; 0x1f22 <puts+0x1c>
    1f44:	df ef       	ldi	r29, 0xFF	; 255
    1f46:	cf ef       	ldi	r28, 0xFF	; 255
    1f48:	ec cf       	rjmp	.-40     	; 0x1f22 <puts+0x1c>
    1f4a:	8a e0       	ldi	r24, 0x0A	; 10
    1f4c:	19 95       	eicall
    1f4e:	89 2b       	or	r24, r25
    1f50:	19 f0       	breq	.+6      	; 0x1f58 <puts+0x52>
    1f52:	8f ef       	ldi	r24, 0xFF	; 255
    1f54:	9f ef       	ldi	r25, 0xFF	; 255
    1f56:	02 c0       	rjmp	.+4      	; 0x1f5c <puts+0x56>
    1f58:	8d 2f       	mov	r24, r29
    1f5a:	9c 2f       	mov	r25, r28
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	1f 91       	pop	r17
    1f62:	0f 91       	pop	r16
    1f64:	08 95       	ret

00001f66 <sprintf>:
    1f66:	0f 93       	push	r16
    1f68:	1f 93       	push	r17
    1f6a:	cf 93       	push	r28
    1f6c:	df 93       	push	r29
    1f6e:	cd b7       	in	r28, 0x3d	; 61
    1f70:	de b7       	in	r29, 0x3e	; 62
    1f72:	2e 97       	sbiw	r28, 0x0e	; 14
    1f74:	0f b6       	in	r0, 0x3f	; 63
    1f76:	f8 94       	cli
    1f78:	de bf       	out	0x3e, r29	; 62
    1f7a:	0f be       	out	0x3f, r0	; 63
    1f7c:	cd bf       	out	0x3d, r28	; 61
    1f7e:	0e 89       	ldd	r16, Y+22	; 0x16
    1f80:	1f 89       	ldd	r17, Y+23	; 0x17
    1f82:	86 e0       	ldi	r24, 0x06	; 6
    1f84:	8c 83       	std	Y+4, r24	; 0x04
    1f86:	1a 83       	std	Y+2, r17	; 0x02
    1f88:	09 83       	std	Y+1, r16	; 0x01
    1f8a:	8f ef       	ldi	r24, 0xFF	; 255
    1f8c:	9f e7       	ldi	r25, 0x7F	; 127
    1f8e:	9e 83       	std	Y+6, r25	; 0x06
    1f90:	8d 83       	std	Y+5, r24	; 0x05
    1f92:	ae 01       	movw	r20, r28
    1f94:	46 5e       	subi	r20, 0xE6	; 230
    1f96:	5f 4f       	sbci	r21, 0xFF	; 255
    1f98:	68 8d       	ldd	r22, Y+24	; 0x18
    1f9a:	79 8d       	ldd	r23, Y+25	; 0x19
    1f9c:	ce 01       	movw	r24, r28
    1f9e:	01 96       	adiw	r24, 0x01	; 1
    1fa0:	0e 94 3e 05 	call	0xa7c	; 0xa7c <vfprintf>
    1fa4:	ef 81       	ldd	r30, Y+7	; 0x07
    1fa6:	f8 85       	ldd	r31, Y+8	; 0x08
    1fa8:	e0 0f       	add	r30, r16
    1faa:	f1 1f       	adc	r31, r17
    1fac:	10 82       	st	Z, r1
    1fae:	2e 96       	adiw	r28, 0x0e	; 14
    1fb0:	0f b6       	in	r0, 0x3f	; 63
    1fb2:	f8 94       	cli
    1fb4:	de bf       	out	0x3e, r29	; 62
    1fb6:	0f be       	out	0x3f, r0	; 63
    1fb8:	cd bf       	out	0x3d, r28	; 61
    1fba:	df 91       	pop	r29
    1fbc:	cf 91       	pop	r28
    1fbe:	1f 91       	pop	r17
    1fc0:	0f 91       	pop	r16
    1fc2:	08 95       	ret

00001fc4 <ungetc>:
    1fc4:	fb 01       	movw	r30, r22
    1fc6:	23 81       	ldd	r18, Z+3	; 0x03
    1fc8:	20 ff       	sbrs	r18, 0
    1fca:	12 c0       	rjmp	.+36     	; 0x1ff0 <ungetc+0x2c>
    1fcc:	26 fd       	sbrc	r18, 6
    1fce:	10 c0       	rjmp	.+32     	; 0x1ff0 <ungetc+0x2c>
    1fd0:	8f 3f       	cpi	r24, 0xFF	; 255
    1fd2:	3f ef       	ldi	r19, 0xFF	; 255
    1fd4:	93 07       	cpc	r25, r19
    1fd6:	61 f0       	breq	.+24     	; 0x1ff0 <ungetc+0x2c>
    1fd8:	82 83       	std	Z+2, r24	; 0x02
    1fda:	2f 7d       	andi	r18, 0xDF	; 223
    1fdc:	20 64       	ori	r18, 0x40	; 64
    1fde:	23 83       	std	Z+3, r18	; 0x03
    1fe0:	26 81       	ldd	r18, Z+6	; 0x06
    1fe2:	37 81       	ldd	r19, Z+7	; 0x07
    1fe4:	21 50       	subi	r18, 0x01	; 1
    1fe6:	31 09       	sbc	r19, r1
    1fe8:	37 83       	std	Z+7, r19	; 0x07
    1fea:	26 83       	std	Z+6, r18	; 0x06
    1fec:	99 27       	eor	r25, r25
    1fee:	08 95       	ret
    1ff0:	8f ef       	ldi	r24, 0xFF	; 255
    1ff2:	9f ef       	ldi	r25, 0xFF	; 255
    1ff4:	08 95       	ret

00001ff6 <__ultoa_invert>:
    1ff6:	fa 01       	movw	r30, r20
    1ff8:	aa 27       	eor	r26, r26
    1ffa:	28 30       	cpi	r18, 0x08	; 8
    1ffc:	51 f1       	breq	.+84     	; 0x2052 <__ultoa_invert+0x5c>
    1ffe:	20 31       	cpi	r18, 0x10	; 16
    2000:	81 f1       	breq	.+96     	; 0x2062 <__ultoa_invert+0x6c>
    2002:	e8 94       	clt
    2004:	6f 93       	push	r22
    2006:	6e 7f       	andi	r22, 0xFE	; 254
    2008:	6e 5f       	subi	r22, 0xFE	; 254
    200a:	7f 4f       	sbci	r23, 0xFF	; 255
    200c:	8f 4f       	sbci	r24, 0xFF	; 255
    200e:	9f 4f       	sbci	r25, 0xFF	; 255
    2010:	af 4f       	sbci	r26, 0xFF	; 255
    2012:	b1 e0       	ldi	r27, 0x01	; 1
    2014:	3e d0       	rcall	.+124    	; 0x2092 <__ultoa_invert+0x9c>
    2016:	b4 e0       	ldi	r27, 0x04	; 4
    2018:	3c d0       	rcall	.+120    	; 0x2092 <__ultoa_invert+0x9c>
    201a:	67 0f       	add	r22, r23
    201c:	78 1f       	adc	r23, r24
    201e:	89 1f       	adc	r24, r25
    2020:	9a 1f       	adc	r25, r26
    2022:	a1 1d       	adc	r26, r1
    2024:	68 0f       	add	r22, r24
    2026:	79 1f       	adc	r23, r25
    2028:	8a 1f       	adc	r24, r26
    202a:	91 1d       	adc	r25, r1
    202c:	a1 1d       	adc	r26, r1
    202e:	6a 0f       	add	r22, r26
    2030:	71 1d       	adc	r23, r1
    2032:	81 1d       	adc	r24, r1
    2034:	91 1d       	adc	r25, r1
    2036:	a1 1d       	adc	r26, r1
    2038:	20 d0       	rcall	.+64     	; 0x207a <__ultoa_invert+0x84>
    203a:	09 f4       	brne	.+2      	; 0x203e <__ultoa_invert+0x48>
    203c:	68 94       	set
    203e:	3f 91       	pop	r19
    2040:	2a e0       	ldi	r18, 0x0A	; 10
    2042:	26 9f       	mul	r18, r22
    2044:	11 24       	eor	r1, r1
    2046:	30 19       	sub	r19, r0
    2048:	30 5d       	subi	r19, 0xD0	; 208
    204a:	31 93       	st	Z+, r19
    204c:	de f6       	brtc	.-74     	; 0x2004 <__ultoa_invert+0xe>
    204e:	cf 01       	movw	r24, r30
    2050:	08 95       	ret
    2052:	46 2f       	mov	r20, r22
    2054:	47 70       	andi	r20, 0x07	; 7
    2056:	40 5d       	subi	r20, 0xD0	; 208
    2058:	41 93       	st	Z+, r20
    205a:	b3 e0       	ldi	r27, 0x03	; 3
    205c:	0f d0       	rcall	.+30     	; 0x207c <__ultoa_invert+0x86>
    205e:	c9 f7       	brne	.-14     	; 0x2052 <__ultoa_invert+0x5c>
    2060:	f6 cf       	rjmp	.-20     	; 0x204e <__ultoa_invert+0x58>
    2062:	46 2f       	mov	r20, r22
    2064:	4f 70       	andi	r20, 0x0F	; 15
    2066:	40 5d       	subi	r20, 0xD0	; 208
    2068:	4a 33       	cpi	r20, 0x3A	; 58
    206a:	18 f0       	brcs	.+6      	; 0x2072 <__ultoa_invert+0x7c>
    206c:	49 5d       	subi	r20, 0xD9	; 217
    206e:	31 fd       	sbrc	r19, 1
    2070:	40 52       	subi	r20, 0x20	; 32
    2072:	41 93       	st	Z+, r20
    2074:	02 d0       	rcall	.+4      	; 0x207a <__ultoa_invert+0x84>
    2076:	a9 f7       	brne	.-22     	; 0x2062 <__ultoa_invert+0x6c>
    2078:	ea cf       	rjmp	.-44     	; 0x204e <__ultoa_invert+0x58>
    207a:	b4 e0       	ldi	r27, 0x04	; 4
    207c:	a6 95       	lsr	r26
    207e:	97 95       	ror	r25
    2080:	87 95       	ror	r24
    2082:	77 95       	ror	r23
    2084:	67 95       	ror	r22
    2086:	ba 95       	dec	r27
    2088:	c9 f7       	brne	.-14     	; 0x207c <__ultoa_invert+0x86>
    208a:	00 97       	sbiw	r24, 0x00	; 0
    208c:	61 05       	cpc	r22, r1
    208e:	71 05       	cpc	r23, r1
    2090:	08 95       	ret
    2092:	9b 01       	movw	r18, r22
    2094:	ac 01       	movw	r20, r24
    2096:	0a 2e       	mov	r0, r26
    2098:	06 94       	lsr	r0
    209a:	57 95       	ror	r21
    209c:	47 95       	ror	r20
    209e:	37 95       	ror	r19
    20a0:	27 95       	ror	r18
    20a2:	ba 95       	dec	r27
    20a4:	c9 f7       	brne	.-14     	; 0x2098 <__ultoa_invert+0xa2>
    20a6:	62 0f       	add	r22, r18
    20a8:	73 1f       	adc	r23, r19
    20aa:	84 1f       	adc	r24, r20
    20ac:	95 1f       	adc	r25, r21
    20ae:	a0 1d       	adc	r26, r0
    20b0:	08 95       	ret

000020b2 <__ctype_isfalse>:
    20b2:	99 27       	eor	r25, r25
    20b4:	88 27       	eor	r24, r24

000020b6 <__ctype_istrue>:
    20b6:	08 95       	ret

000020b8 <_exit>:
    20b8:	f8 94       	cli

000020ba <__stop_program>:
    20ba:	ff cf       	rjmp	.-2      	; 0x20ba <__stop_program>
