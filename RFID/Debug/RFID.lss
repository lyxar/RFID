
RFID.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006a  00800200  00001fe0  00002074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fe0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080026a  0080026a  000020de  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000020de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000213c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  0000217c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000211e  00000000  00000000  000022cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001229  00000000  00000000  000043ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f9d  00000000  00000000  00005613  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  000065b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000837  00000000  00000000  000068d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f03  00000000  00000000  00007107  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  0000800a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c1       	rjmp	.+562    	; 0x234 <__ctors_end>
       2:	00 00       	nop
       4:	37 c1       	rjmp	.+622    	; 0x274 <__bad_interrupt>
       6:	00 00       	nop
       8:	35 c1       	rjmp	.+618    	; 0x274 <__bad_interrupt>
       a:	00 00       	nop
       c:	33 c1       	rjmp	.+614    	; 0x274 <__bad_interrupt>
       e:	00 00       	nop
      10:	31 c1       	rjmp	.+610    	; 0x274 <__bad_interrupt>
      12:	00 00       	nop
      14:	2f c1       	rjmp	.+606    	; 0x274 <__bad_interrupt>
      16:	00 00       	nop
      18:	2d c1       	rjmp	.+602    	; 0x274 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	2b c1       	rjmp	.+598    	; 0x274 <__bad_interrupt>
      1e:	00 00       	nop
      20:	29 c1       	rjmp	.+594    	; 0x274 <__bad_interrupt>
      22:	00 00       	nop
      24:	27 c1       	rjmp	.+590    	; 0x274 <__bad_interrupt>
      26:	00 00       	nop
      28:	25 c1       	rjmp	.+586    	; 0x274 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	23 c1       	rjmp	.+582    	; 0x274 <__bad_interrupt>
      2e:	00 00       	nop
      30:	21 c1       	rjmp	.+578    	; 0x274 <__bad_interrupt>
      32:	00 00       	nop
      34:	1f c1       	rjmp	.+574    	; 0x274 <__bad_interrupt>
      36:	00 00       	nop
      38:	1d c1       	rjmp	.+570    	; 0x274 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	1b c1       	rjmp	.+566    	; 0x274 <__bad_interrupt>
      3e:	00 00       	nop
      40:	19 c1       	rjmp	.+562    	; 0x274 <__bad_interrupt>
      42:	00 00       	nop
      44:	17 c1       	rjmp	.+558    	; 0x274 <__bad_interrupt>
      46:	00 00       	nop
      48:	15 c1       	rjmp	.+554    	; 0x274 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	13 c1       	rjmp	.+550    	; 0x274 <__bad_interrupt>
      4e:	00 00       	nop
      50:	11 c1       	rjmp	.+546    	; 0x274 <__bad_interrupt>
      52:	00 00       	nop
      54:	0f c1       	rjmp	.+542    	; 0x274 <__bad_interrupt>
      56:	00 00       	nop
      58:	0d c1       	rjmp	.+538    	; 0x274 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0b c1       	rjmp	.+534    	; 0x274 <__bad_interrupt>
      5e:	00 00       	nop
      60:	09 c1       	rjmp	.+530    	; 0x274 <__bad_interrupt>
      62:	00 00       	nop
      64:	07 c1       	rjmp	.+526    	; 0x274 <__bad_interrupt>
      66:	00 00       	nop
      68:	05 c1       	rjmp	.+522    	; 0x274 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	03 c1       	rjmp	.+518    	; 0x274 <__bad_interrupt>
      6e:	00 00       	nop
      70:	01 c1       	rjmp	.+514    	; 0x274 <__bad_interrupt>
      72:	00 00       	nop
      74:	ff c0       	rjmp	.+510    	; 0x274 <__bad_interrupt>
      76:	00 00       	nop
      78:	fd c0       	rjmp	.+506    	; 0x274 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	fb c0       	rjmp	.+502    	; 0x274 <__bad_interrupt>
      7e:	00 00       	nop
      80:	f9 c0       	rjmp	.+498    	; 0x274 <__bad_interrupt>
      82:	00 00       	nop
      84:	f7 c0       	rjmp	.+494    	; 0x274 <__bad_interrupt>
      86:	00 00       	nop
      88:	f5 c0       	rjmp	.+490    	; 0x274 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f3 c0       	rjmp	.+486    	; 0x274 <__bad_interrupt>
      8e:	00 00       	nop
      90:	f1 c0       	rjmp	.+482    	; 0x274 <__bad_interrupt>
      92:	00 00       	nop
      94:	ef c0       	rjmp	.+478    	; 0x274 <__bad_interrupt>
      96:	00 00       	nop
      98:	ed c0       	rjmp	.+474    	; 0x274 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	eb c0       	rjmp	.+470    	; 0x274 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	e9 c0       	rjmp	.+466    	; 0x274 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	e7 c0       	rjmp	.+462    	; 0x274 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	e5 c0       	rjmp	.+458    	; 0x274 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	e3 c0       	rjmp	.+454    	; 0x274 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	e1 c0       	rjmp	.+450    	; 0x274 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	df c0       	rjmp	.+446    	; 0x274 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	dd c0       	rjmp	.+442    	; 0x274 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	db c0       	rjmp	.+438    	; 0x274 <__bad_interrupt>
      be:	00 00       	nop
      c0:	d9 c0       	rjmp	.+434    	; 0x274 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	d7 c0       	rjmp	.+430    	; 0x274 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	d5 c0       	rjmp	.+426    	; 0x274 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	d3 c0       	rjmp	.+422    	; 0x274 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	d1 c0       	rjmp	.+418    	; 0x274 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	cf c0       	rjmp	.+414    	; 0x274 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	cd c0       	rjmp	.+410    	; 0x274 <__bad_interrupt>
      da:	00 00       	nop
      dc:	cb c0       	rjmp	.+406    	; 0x274 <__bad_interrupt>
      de:	00 00       	nop
      e0:	c9 c0       	rjmp	.+402    	; 0x274 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__c.2529>:
     1e6:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     1f6:	47 00                                               G.

000001f8 <pstr_an>:
     1f8:	61 6e 00                                            an.

000001fb <pstr_nfinity>:
     1fb:	6e 66 69 6e 69 74 79 00                             nfinity.

00000203 <pwr_m10>:
     203:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     213:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000021b <pwr_p10>:
     21b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     22b:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d1 e2       	ldi	r29, 0x21	; 33
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	00 e0       	ldi	r16, 0x00	; 0
     242:	0c bf       	out	0x3c, r16	; 60

00000244 <__do_copy_data>:
     244:	12 e0       	ldi	r17, 0x02	; 2
     246:	a0 e0       	ldi	r26, 0x00	; 0
     248:	b2 e0       	ldi	r27, 0x02	; 2
     24a:	e0 ee       	ldi	r30, 0xE0	; 224
     24c:	ff e1       	ldi	r31, 0x1F	; 31
     24e:	00 e0       	ldi	r16, 0x00	; 0
     250:	0b bf       	out	0x3b, r16	; 59
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x14>
     254:	07 90       	elpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	aa 36       	cpi	r26, 0x6A	; 106
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0x10>

0000025e <__do_clear_bss>:
     25e:	22 e0       	ldi	r18, 0x02	; 2
     260:	aa e6       	ldi	r26, 0x6A	; 106
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	a0 37       	cpi	r26, 0x70	; 112
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	27 d1       	rcall	.+590    	; 0x4be <main>
     270:	0c 94 ee 0f 	jmp	0x1fdc	; 0x1fdc <_exit>

00000274 <__bad_interrupt>:
     274:	c5 ce       	rjmp	.-630    	; 0x0 <__vectors>

00000276 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     276:	e2 e0       	ldi	r30, 0x02	; 2
     278:	f1 e0       	ldi	r31, 0x01	; 1
     27a:	80 81       	ld	r24, Z
     27c:	80 62       	ori	r24, 0x20	; 32
     27e:	80 83       	st	Z, r24
     280:	00 00       	nop
     282:	80 81       	ld	r24, Z
     284:	8f 7d       	andi	r24, 0xDF	; 223
     286:	80 83       	st	Z, r24
     288:	08 95       	ret

0000028a <lcd_write>:
     28a:	cf 93       	push	r28
     28c:	c8 2f       	mov	r28, r24
     28e:	66 23       	and	r22, r22
     290:	31 f0       	breq	.+12     	; 0x29e <lcd_write+0x14>
     292:	e2 e0       	ldi	r30, 0x02	; 2
     294:	f1 e0       	ldi	r31, 0x01	; 1
     296:	80 81       	ld	r24, Z
     298:	80 61       	ori	r24, 0x10	; 16
     29a:	80 83       	st	Z, r24
     29c:	05 c0       	rjmp	.+10     	; 0x2a8 <lcd_write+0x1e>
     29e:	e2 e0       	ldi	r30, 0x02	; 2
     2a0:	f1 e0       	ldi	r31, 0x01	; 1
     2a2:	80 81       	ld	r24, Z
     2a4:	8f 7e       	andi	r24, 0xEF	; 239
     2a6:	80 83       	st	Z, r24
     2a8:	e2 e0       	ldi	r30, 0x02	; 2
     2aa:	f1 e0       	ldi	r31, 0x01	; 1
     2ac:	80 81       	ld	r24, Z
     2ae:	87 7f       	andi	r24, 0xF7	; 247
     2b0:	80 83       	st	Z, r24
     2b2:	a1 e0       	ldi	r26, 0x01	; 1
     2b4:	b1 e0       	ldi	r27, 0x01	; 1
     2b6:	8c 91       	ld	r24, X
     2b8:	80 64       	ori	r24, 0x40	; 64
     2ba:	8c 93       	st	X, r24
     2bc:	24 9a       	sbi	0x04, 4	; 4
     2be:	25 9a       	sbi	0x04, 5	; 4
     2c0:	26 9a       	sbi	0x04, 6	; 4
     2c2:	2e 98       	cbi	0x05, 6	; 5
     2c4:	2d 98       	cbi	0x05, 5	; 5
     2c6:	2c 98       	cbi	0x05, 4	; 5
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7b       	andi	r24, 0xBF	; 191
     2cc:	80 83       	st	Z, r24
     2ce:	cc 23       	and	r28, r28
     2d0:	0c f4       	brge	.+2      	; 0x2d4 <lcd_write+0x4a>
     2d2:	2e 9a       	sbi	0x05, 6	; 5
     2d4:	c6 fd       	sbrc	r28, 6
     2d6:	2d 9a       	sbi	0x05, 5	; 5
     2d8:	c5 fd       	sbrc	r28, 5
     2da:	2c 9a       	sbi	0x05, 4	; 5
     2dc:	c4 ff       	sbrs	r28, 4
     2de:	05 c0       	rjmp	.+10     	; 0x2ea <lcd_write+0x60>
     2e0:	e2 e0       	ldi	r30, 0x02	; 2
     2e2:	f1 e0       	ldi	r31, 0x01	; 1
     2e4:	80 81       	ld	r24, Z
     2e6:	80 64       	ori	r24, 0x40	; 64
     2e8:	80 83       	st	Z, r24
     2ea:	c5 df       	rcall	.-118    	; 0x276 <toggle_e>
     2ec:	2e 98       	cbi	0x05, 6	; 5
     2ee:	2d 98       	cbi	0x05, 5	; 5
     2f0:	2c 98       	cbi	0x05, 4	; 5
     2f2:	e2 e0       	ldi	r30, 0x02	; 2
     2f4:	f1 e0       	ldi	r31, 0x01	; 1
     2f6:	80 81       	ld	r24, Z
     2f8:	8f 7b       	andi	r24, 0xBF	; 191
     2fa:	80 83       	st	Z, r24
     2fc:	c3 fd       	sbrc	r28, 3
     2fe:	2e 9a       	sbi	0x05, 6	; 5
     300:	c2 fd       	sbrc	r28, 2
     302:	2d 9a       	sbi	0x05, 5	; 5
     304:	c1 fd       	sbrc	r28, 1
     306:	2c 9a       	sbi	0x05, 4	; 5
     308:	c0 ff       	sbrs	r28, 0
     30a:	05 c0       	rjmp	.+10     	; 0x316 <lcd_write+0x8c>
     30c:	e2 e0       	ldi	r30, 0x02	; 2
     30e:	f1 e0       	ldi	r31, 0x01	; 1
     310:	80 81       	ld	r24, Z
     312:	80 64       	ori	r24, 0x40	; 64
     314:	80 83       	st	Z, r24
     316:	af df       	rcall	.-162    	; 0x276 <toggle_e>
     318:	e2 e0       	ldi	r30, 0x02	; 2
     31a:	f1 e0       	ldi	r31, 0x01	; 1
     31c:	80 81       	ld	r24, Z
     31e:	80 64       	ori	r24, 0x40	; 64
     320:	80 83       	st	Z, r24
     322:	2c 9a       	sbi	0x05, 4	; 5
     324:	2d 9a       	sbi	0x05, 5	; 5
     326:	2e 9a       	sbi	0x05, 6	; 5
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <lcd_read>:
     32c:	88 23       	and	r24, r24
     32e:	31 f0       	breq	.+12     	; 0x33c <lcd_read+0x10>
     330:	e2 e0       	ldi	r30, 0x02	; 2
     332:	f1 e0       	ldi	r31, 0x01	; 1
     334:	80 81       	ld	r24, Z
     336:	80 61       	ori	r24, 0x10	; 16
     338:	80 83       	st	Z, r24
     33a:	05 c0       	rjmp	.+10     	; 0x346 <lcd_read+0x1a>
     33c:	e2 e0       	ldi	r30, 0x02	; 2
     33e:	f1 e0       	ldi	r31, 0x01	; 1
     340:	80 81       	ld	r24, Z
     342:	8f 7e       	andi	r24, 0xEF	; 239
     344:	80 83       	st	Z, r24
     346:	e2 e0       	ldi	r30, 0x02	; 2
     348:	f1 e0       	ldi	r31, 0x01	; 1
     34a:	80 81       	ld	r24, Z
     34c:	88 60       	ori	r24, 0x08	; 8
     34e:	80 83       	st	Z, r24
     350:	a1 e0       	ldi	r26, 0x01	; 1
     352:	b1 e0       	ldi	r27, 0x01	; 1
     354:	8c 91       	ld	r24, X
     356:	8f 7b       	andi	r24, 0xBF	; 191
     358:	8c 93       	st	X, r24
     35a:	24 98       	cbi	0x04, 4	; 4
     35c:	25 98       	cbi	0x04, 5	; 4
     35e:	26 98       	cbi	0x04, 6	; 4
     360:	80 81       	ld	r24, Z
     362:	80 62       	ori	r24, 0x20	; 32
     364:	80 83       	st	Z, r24
     366:	00 00       	nop
     368:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     36c:	86 ff       	sbrs	r24, 6
     36e:	02 c0       	rjmp	.+4      	; 0x374 <lcd_read+0x48>
     370:	80 e1       	ldi	r24, 0x10	; 16
     372:	01 c0       	rjmp	.+2      	; 0x376 <lcd_read+0x4a>
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	1c 99       	sbic	0x03, 4	; 3
     378:	80 62       	ori	r24, 0x20	; 32
     37a:	1d 99       	sbic	0x03, 5	; 3
     37c:	80 64       	ori	r24, 0x40	; 64
     37e:	1e 99       	sbic	0x03, 6	; 3
     380:	80 68       	ori	r24, 0x80	; 128
     382:	e2 e0       	ldi	r30, 0x02	; 2
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	90 81       	ld	r25, Z
     388:	9f 7d       	andi	r25, 0xDF	; 223
     38a:	90 83       	st	Z, r25
     38c:	00 00       	nop
     38e:	90 81       	ld	r25, Z
     390:	90 62       	ori	r25, 0x20	; 32
     392:	90 83       	st	Z, r25
     394:	00 00       	nop
     396:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     39a:	96 fd       	sbrc	r25, 6
     39c:	81 60       	ori	r24, 0x01	; 1
     39e:	1c 99       	sbic	0x03, 4	; 3
     3a0:	82 60       	ori	r24, 0x02	; 2
     3a2:	1d 99       	sbic	0x03, 5	; 3
     3a4:	84 60       	ori	r24, 0x04	; 4
     3a6:	1e 99       	sbic	0x03, 6	; 3
     3a8:	88 60       	ori	r24, 0x08	; 8
     3aa:	e2 e0       	ldi	r30, 0x02	; 2
     3ac:	f1 e0       	ldi	r31, 0x01	; 1
     3ae:	90 81       	ld	r25, Z
     3b0:	9f 7d       	andi	r25, 0xDF	; 223
     3b2:	90 83       	st	Z, r25
     3b4:	08 95       	ret

000003b6 <lcd_waitbusy>:
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	b9 df       	rcall	.-142    	; 0x32c <lcd_read>
     3ba:	88 23       	and	r24, r24
     3bc:	e4 f3       	brlt	.-8      	; 0x3b6 <lcd_waitbusy>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <lcd_waitbusy+0xa>
     3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <lcd_waitbusy+0xc>
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	b3 cf       	rjmp	.-154    	; 0x32c <lcd_read>
     3c6:	08 95       	ret

000003c8 <lcd_command>:
     3c8:	cf 93       	push	r28
     3ca:	c8 2f       	mov	r28, r24
     3cc:	f4 df       	rcall	.-24     	; 0x3b6 <lcd_waitbusy>
     3ce:	60 e0       	ldi	r22, 0x00	; 0
     3d0:	8c 2f       	mov	r24, r28
     3d2:	5b df       	rcall	.-330    	; 0x28a <lcd_write>
     3d4:	cf 91       	pop	r28
     3d6:	08 95       	ret

000003d8 <lcd_gotoxy>:
     3d8:	61 11       	cpse	r22, r1
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <lcd_gotoxy+0xa>
     3dc:	80 58       	subi	r24, 0x80	; 128
     3de:	f4 cf       	rjmp	.-24     	; 0x3c8 <lcd_command>
     3e0:	08 95       	ret
     3e2:	80 54       	subi	r24, 0x40	; 64
     3e4:	f1 cf       	rjmp	.-30     	; 0x3c8 <lcd_command>
     3e6:	08 95       	ret

000003e8 <lcd_clrscr>:
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	ee cf       	rjmp	.-36     	; 0x3c8 <lcd_command>
     3ec:	08 95       	ret

000003ee <lcd_putc>:
     3ee:	cf 93       	push	r28
     3f0:	c8 2f       	mov	r28, r24
     3f2:	e1 df       	rcall	.-62     	; 0x3b6 <lcd_waitbusy>
     3f4:	ca 30       	cpi	r28, 0x0A	; 10
     3f6:	41 f4       	brne	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3f8:	80 34       	cpi	r24, 0x40	; 64
     3fa:	10 f0       	brcs	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	01 c0       	rjmp	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     400:	80 e4       	ldi	r24, 0x40	; 64
     402:	80 58       	subi	r24, 0x80	; 128
     404:	e1 df       	rcall	.-62     	; 0x3c8 <lcd_command>
     406:	03 c0       	rjmp	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     408:	61 e0       	ldi	r22, 0x01	; 1
     40a:	8c 2f       	mov	r24, r28
     40c:	3e df       	rcall	.-388    	; 0x28a <lcd_write>
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <lcd_puts>:
     412:	cf 93       	push	r28
     414:	df 93       	push	r29
     416:	ec 01       	movw	r28, r24
     418:	21 96       	adiw	r28, 0x01	; 1
     41a:	fc 01       	movw	r30, r24
     41c:	80 81       	ld	r24, Z
     41e:	88 23       	and	r24, r24
     420:	21 f0       	breq	.+8      	; 0x42a <lcd_puts+0x18>
     422:	e5 df       	rcall	.-54     	; 0x3ee <lcd_putc>
     424:	89 91       	ld	r24, Y+
     426:	81 11       	cpse	r24, r1
     428:	fc cf       	rjmp	.-8      	; 0x422 <lcd_puts+0x10>
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     430:	1f 93       	push	r17
     432:	cf 93       	push	r28
     434:	df 93       	push	r29
     436:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     438:	e1 e0       	ldi	r30, 0x01	; 1
     43a:	f1 e0       	ldi	r31, 0x01	; 1
     43c:	80 81       	ld	r24, Z
     43e:	80 61       	ori	r24, 0x10	; 16
     440:	80 83       	st	Z, r24
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     442:	80 81       	ld	r24, Z
     444:	88 60       	ori	r24, 0x08	; 8
     446:	80 83       	st	Z, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     448:	80 81       	ld	r24, Z
     44a:	80 62       	ori	r24, 0x20	; 32
     44c:	80 83       	st	Z, r24
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     44e:	80 81       	ld	r24, Z
     450:	80 64       	ori	r24, 0x40	; 64
     452:	80 83       	st	Z, r24
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     454:	24 9a       	sbi	0x04, 4	; 4
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     456:	25 9a       	sbi	0x04, 5	; 4
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     458:	26 9a       	sbi	0x04, 6	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     45a:	8f e9       	ldi	r24, 0x9F	; 159
     45c:	9f e0       	ldi	r25, 0x0F	; 15
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <lcd_init+0x2e>
     462:	00 c0       	rjmp	.+0      	; 0x464 <lcd_init+0x34>
     464:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     466:	2c 9a       	sbi	0x05, 4	; 5
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     468:	c2 e0       	ldi	r28, 0x02	; 2
     46a:	d1 e0       	ldi	r29, 0x01	; 1
     46c:	88 81       	ld	r24, Y
     46e:	80 64       	ori	r24, 0x40	; 64
     470:	88 83       	st	Y, r24
    lcd_e_toggle();
     472:	01 df       	rcall	.-510    	; 0x276 <toggle_e>
     474:	81 ee       	ldi	r24, 0xE1	; 225
     476:	94 e0       	ldi	r25, 0x04	; 4
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <lcd_init+0x48>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <lcd_init+0x4e>
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     47e:	00 00       	nop
     480:	fa de       	rcall	.-524    	; 0x276 <toggle_e>
     482:	95 e1       	ldi	r25, 0x15	; 21
     484:	9a 95       	dec	r25
     486:	f1 f7       	brne	.-4      	; 0x484 <lcd_init+0x54>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     488:	00 00       	nop
     48a:	f5 de       	rcall	.-534    	; 0x276 <toggle_e>
     48c:	85 e1       	ldi	r24, 0x15	; 21
     48e:	8a 95       	dec	r24
     490:	f1 f7       	brne	.-4      	; 0x48e <lcd_init+0x5e>
     492:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     494:	88 81       	ld	r24, Y
     496:	8f 7b       	andi	r24, 0xBF	; 191
    lcd_e_toggle();
     498:	88 83       	st	Y, r24
     49a:	ed de       	rcall	.-550    	; 0x276 <toggle_e>
     49c:	95 e1       	ldi	r25, 0x15	; 21
     49e:	9a 95       	dec	r25
     4a0:	f1 f7       	brne	.-4      	; 0x49e <lcd_init+0x6e>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     4a2:	00 00       	nop
     4a4:	88 e2       	ldi	r24, 0x28	; 40
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     4a6:	90 df       	rcall	.-224    	; 0x3c8 <lcd_command>
     4a8:	88 e0       	ldi	r24, 0x08	; 8
    lcd_clrscr();                           /* display clear                */ 
     4aa:	8e df       	rcall	.-228    	; 0x3c8 <lcd_command>
     4ac:	9d df       	rcall	.-198    	; 0x3e8 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     4ae:	86 e0       	ldi	r24, 0x06	; 6
     4b0:	8b df       	rcall	.-234    	; 0x3c8 <lcd_command>
     4b2:	81 2f       	mov	r24, r17
    lcd_command(dispAttr);                  /* display/cursor control       */
     4b4:	89 df       	rcall	.-238    	; 0x3c8 <lcd_command>
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28

}/* lcd_init */
     4ba:	1f 91       	pop	r17
     4bc:	08 95       	ret

000004be <main>:
#include "spi/spi.h"
#include "mfrc522/mfrc522.h"
#include "lcd/lcd.h"

int main()
{
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	cd b7       	in	r28, 0x3d	; 61
     4c4:	de b7       	in	r29, 0x3e	; 62
     4c6:	c6 5a       	subi	r28, 0xA6	; 166
     4c8:	d1 09       	sbc	r29, r1
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de bf       	out	0x3e, r29	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd bf       	out	0x3d, r28	; 61
	UartInit();
     4d4:	73 d2       	rcall	.+1254   	; 0x9bc <UartInit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4d6:	2f ef       	ldi	r18, 0xFF	; 255
     4d8:	80 e7       	ldi	r24, 0x70	; 112
     4da:	92 e0       	ldi	r25, 0x02	; 2
     4dc:	21 50       	subi	r18, 0x01	; 1
     4de:	80 40       	sbci	r24, 0x00	; 0
     4e0:	90 40       	sbci	r25, 0x00	; 0
     4e2:	e1 f7       	brne	.-8      	; 0x4dc <main+0x1e>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <main+0x28>
	char buffer[150];
	uint8_t byte;
	uint8_t str[MAX_LEN];
	_delay_ms(50);
	
	spi_init();
     4e6:	00 00       	nop
	/* initialize display, cursor on */
	lcd_init(LCD_DISP_ON);
     4e8:	7d d2       	rcall	.+1274   	; 0x9e4 <spi_init>
     4ea:	8c e0       	ldi	r24, 0x0C	; 12

	/* clear display and home cursor */
	lcd_clrscr();
     4ec:	a1 df       	rcall	.-190    	; 0x430 <lcd_init>
     4ee:	7c df       	rcall	.-264    	; 0x3e8 <lcd_clrscr>
     4f0:	ef ef       	ldi	r30, 0xFF	; 255
     4f2:	f3 ed       	ldi	r31, 0xD3	; 211
     4f4:	20 e3       	ldi	r18, 0x30	; 48
     4f6:	e1 50       	subi	r30, 0x01	; 1
     4f8:	f0 40       	sbci	r31, 0x00	; 0
     4fa:	20 40       	sbci	r18, 0x00	; 0
     4fc:	e1 f7       	brne	.-8      	; 0x4f6 <main+0x38>
	_delay_ms(1000);
	
	//init reader
	mfrc522_init();
     4fe:	00 c0       	rjmp	.+0      	; 0x500 <main+0x42>
     500:	00 00       	nop
	
	//check version of the reader
	byte = mfrc522_read(VersionReg);
     502:	a6 d0       	rcall	.+332    	; 0x650 <mfrc522_init>
     504:	87 e3       	ldi	r24, 0x37	; 55
     506:	97 d0       	rcall	.+302    	; 0x636 <mfrc522_read>
	
	//printf("%d", byte);
	
	//Version numbers can be found in the Readme
	if(byte == 0x92)
     508:	82 39       	cpi	r24, 0x92	; 146
     50a:	49 f4       	brne	.+18     	; 0x51e <main+0x60>
	{
		printf("MIFARE RC522v2\r\n");
     50c:	8e e0       	ldi	r24, 0x0E	; 14
     50e:	92 e0       	ldi	r25, 0x02	; 2
     510:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
		printf("Detected\r\n");
     514:	8e e1       	ldi	r24, 0x1E	; 30
     516:	92 e0       	ldi	r25, 0x02	; 2
     518:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
     51c:	1c c0       	rjmp	.+56     	; 0x556 <main+0x98>
	}else if(byte == 0x91 || byte==0x90)
     51e:	90 e7       	ldi	r25, 0x70	; 112
     520:	98 0f       	add	r25, r24
     522:	92 30       	cpi	r25, 0x02	; 2
     524:	48 f4       	brcc	.+18     	; 0x538 <main+0x7a>
	{
		printf("MIFARE RC522v1\r\n");
     526:	88 e2       	ldi	r24, 0x28	; 40
     528:	92 e0       	ldi	r25, 0x02	; 2
     52a:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
		printf("Detected\r\n");
     52e:	8e e1       	ldi	r24, 0x1E	; 30
     530:	92 e0       	ldi	r25, 0x02	; 2
     532:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
     536:	0f c0       	rjmp	.+30     	; 0x556 <main+0x98>
	}else if(byte == 0x88)
     538:	88 38       	cpi	r24, 0x88	; 136
     53a:	49 f4       	brne	.+18     	; 0x54e <main+0x90>
	{
		printf("RFID-RD522\r\n");
     53c:	88 e3       	ldi	r24, 0x38	; 56
     53e:	92 e0       	ldi	r25, 0x02	; 2
     540:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
		printf("Detected\r\n");
     544:	8e e1       	ldi	r24, 0x1E	; 30
     546:	92 e0       	ldi	r25, 0x02	; 2
     548:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
     54c:	04 c0       	rjmp	.+8      	; 0x556 <main+0x98>
	}
	else
	{
		printf("No reader found\r\n");
     54e:	84 e4       	ldi	r24, 0x44	; 68
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
     556:	8f ef       	ldi	r24, 0xFF	; 255
     558:	9d e3       	ldi	r25, 0x3D	; 61
     55a:	e9 e4       	ldi	r30, 0x49	; 73
     55c:	81 50       	subi	r24, 0x01	; 1
     55e:	90 40       	sbci	r25, 0x00	; 0
     560:	e0 40       	sbci	r30, 0x00	; 0
     562:	e1 f7       	brne	.-8      	; 0x55c <main+0x9e>
     564:	00 c0       	rjmp	.+0      	; 0x566 <main+0xa8>
     566:	00 00       	nop
				printf("\r\n");
				lcd_puts(buffer);	
			}
			else
			{
				printf("Error");
     568:	0f 2e       	mov	r0, r31
     56a:	f3 e6       	ldi	r31, 0x63	; 99
     56c:	6f 2e       	mov	r6, r31
     56e:	f2 e0       	ldi	r31, 0x02	; 2
     570:	7f 2e       	mov	r7, r31
     572:	f0 2d       	mov	r31, r0
				lcd_gotoxy(0,0);
				lcd_puts("Authorized");
				lcd_gotoxy(0,1);	
				for(byte=0;byte<8;byte++)
				{					
					printf("%i", str[byte]);
     574:	0f 2e       	mov	r0, r31
     576:	f0 e6       	ldi	r31, 0x60	; 96
     578:	cf 2e       	mov	r12, r31
     57a:	f2 e0       	ldi	r31, 0x02	; 2
     57c:	df 2e       	mov	r13, r31
	}
	
	_delay_ms(1500);	
	
	while(1){
		byte = mfrc522_request(PICC_REQALL,str);
     57e:	f0 2d       	mov	r31, r0
     580:	be 01       	movw	r22, r28
     582:	69 56       	subi	r22, 0x69	; 105
     584:	7f 4f       	sbci	r23, 0xFF	; 255
     586:	82 e5       	ldi	r24, 0x52	; 82
		
		if(byte == CARD_FOUND)
     588:	96 d1       	rcall	.+812    	; 0x8b6 <mfrc522_request>
     58a:	81 30       	cpi	r24, 0x01	; 1
		{
			int test = 0;
			byte = mfrc522_get_card_serial(str);
     58c:	09 f0       	breq	.+2      	; 0x590 <main+0xd2>
     58e:	3e c0       	rjmp	.+124    	; 0x60c <main+0x14e>
     590:	ce 01       	movw	r24, r28
     592:	89 56       	subi	r24, 0x69	; 105
			if(byte == CARD_FOUND)
     594:	9f 4f       	sbci	r25, 0xFF	; 255
			{
				lcd_clrscr();
     596:	c1 d1       	rcall	.+898    	; 0x91a <mfrc522_get_card_serial>
				lcd_gotoxy(0,0);
     598:	81 30       	cpi	r24, 0x01	; 1
     59a:	91 f5       	brne	.+100    	; 0x600 <main+0x142>
     59c:	25 df       	rcall	.-438    	; 0x3e8 <lcd_clrscr>
     59e:	60 e0       	ldi	r22, 0x00	; 0
				lcd_puts("Authorized");
     5a0:	80 e0       	ldi	r24, 0x00	; 0
     5a2:	1a df       	rcall	.-460    	; 0x3d8 <lcd_gotoxy>
     5a4:	85 e5       	ldi	r24, 0x55	; 85
     5a6:	92 e0       	ldi	r25, 0x02	; 2
				lcd_gotoxy(0,1);	
     5a8:	34 df       	rcall	.-408    	; 0x412 <lcd_puts>
     5aa:	61 e0       	ldi	r22, 0x01	; 1
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	14 df       	rcall	.-472    	; 0x3d8 <lcd_gotoxy>
     5b0:	8e 01       	movw	r16, r28
     5b2:	09 56       	subi	r16, 0x69	; 105
     5b4:	1f 4f       	sbci	r17, 0xFF	; 255
     5b6:	ce 01       	movw	r24, r28
     5b8:	01 96       	adiw	r24, 0x01	; 1
     5ba:	7c 01       	movw	r14, r24
     5bc:	48 01       	movw	r8, r16
     5be:	98 e0       	ldi	r25, 0x08	; 8
     5c0:	89 0e       	add	r8, r25
     5c2:	91 1c       	adc	r9, r1
     5c4:	58 01       	movw	r10, r16
				for(byte=0;byte<8;byte++)
				{					
					printf("%i", str[byte]);
     5c6:	f8 01       	movw	r30, r16
     5c8:	81 91       	ld	r24, Z+
     5ca:	8f 01       	movw	r16, r30
     5cc:	1f 92       	push	r1
     5ce:	8f 93       	push	r24
     5d0:	df 92       	push	r13
     5d2:	cf 92       	push	r12
     5d4:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <printf>
					//test += sprintf(&buffer[test], "%i", str[byte]);		
					buffer[byte] = str[byte];			
     5d8:	f5 01       	movw	r30, r10
     5da:	80 81       	ld	r24, Z
     5dc:	f7 01       	movw	r30, r14
     5de:	81 93       	st	Z+, r24
     5e0:	7f 01       	movw	r14, r30
			{
				lcd_clrscr();
				lcd_gotoxy(0,0);
				lcd_puts("Authorized");
				lcd_gotoxy(0,1);	
				for(byte=0;byte<8;byte++)
     5e2:	0f 90       	pop	r0
     5e4:	0f 90       	pop	r0
     5e6:	0f 90       	pop	r0
     5e8:	0f 90       	pop	r0
     5ea:	08 15       	cp	r16, r8
     5ec:	19 05       	cpc	r17, r9
				{					
					printf("%i", str[byte]);
					//test += sprintf(&buffer[test], "%i", str[byte]);		
					buffer[byte] = str[byte];			
				}				
				printf("\r\n");
     5ee:	51 f7       	brne	.-44     	; 0x5c4 <main+0x106>
     5f0:	86 e3       	ldi	r24, 0x36	; 54
     5f2:	92 e0       	ldi	r25, 0x02	; 2
     5f4:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <puts>
				lcd_puts(buffer);	
     5f8:	ce 01       	movw	r24, r28
     5fa:	01 96       	adiw	r24, 0x01	; 1
     5fc:	0a df       	rcall	.-492    	; 0x412 <lcd_puts>
     5fe:	06 c0       	rjmp	.+12     	; 0x60c <main+0x14e>
			}
			else
			{
				printf("Error");
     600:	7f 92       	push	r7
     602:	6f 92       	push	r6
     604:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <printf>
     608:	0f 90       	pop	r0
     60a:	0f 90       	pop	r0
     60c:	ff ef       	ldi	r31, 0xFF	; 255
     60e:	29 e6       	ldi	r18, 0x69	; 105
     610:	88 e1       	ldi	r24, 0x18	; 24
     612:	f1 50       	subi	r31, 0x01	; 1
     614:	20 40       	sbci	r18, 0x00	; 0
     616:	80 40       	sbci	r24, 0x00	; 0
     618:	e1 f7       	brne	.-8      	; 0x612 <main+0x154>
     61a:	00 c0       	rjmp	.+0      	; 0x61c <main+0x15e>
     61c:	00 00       	nop
     61e:	b0 cf       	rjmp	.-160    	; 0x580 <main+0xc2>

00000620 <mfrc522_write>:
		mfrc522_write(TxControlReg,byte|0x03);
	}
}

void mfrc522_write(uint8_t reg, uint8_t data)
{
     620:	cf 93       	push	r28
     622:	c6 2f       	mov	r28, r22
	ENABLE_CHIP();
     624:	28 98       	cbi	0x05, 0	; 5
	spi_transmit((reg<<1)&0x7E);
     626:	88 0f       	add	r24, r24
     628:	8e 77       	andi	r24, 0x7E	; 126
     62a:	e3 d1       	rcall	.+966    	; 0x9f2 <spi_transmit>
	spi_transmit(data);
     62c:	8c 2f       	mov	r24, r28
     62e:	e1 d1       	rcall	.+962    	; 0x9f2 <spi_transmit>
	DISABLE_CHIP();
     630:	28 9a       	sbi	0x05, 0	; 5
}
     632:	cf 91       	pop	r28
     634:	08 95       	ret

00000636 <mfrc522_read>:

uint8_t mfrc522_read(uint8_t reg)
{
	uint8_t data;	
	ENABLE_CHIP();
     636:	28 98       	cbi	0x05, 0	; 5
	spi_transmit(((reg<<1)&0x7E)|0x80);
     638:	88 0f       	add	r24, r24
     63a:	8e 77       	andi	r24, 0x7E	; 126
     63c:	80 68       	ori	r24, 0x80	; 128
     63e:	d9 d1       	rcall	.+946    	; 0x9f2 <spi_transmit>
	data = spi_transmit(0x00);
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	d7 d1       	rcall	.+942    	; 0x9f2 <spi_transmit>
	DISABLE_CHIP();
     644:	28 9a       	sbi	0x05, 0	; 5
	return data;
}
     646:	08 95       	ret

00000648 <mfrc522_reset>:

void mfrc522_reset()
{
	mfrc522_write(CommandReg,SoftReset_CMD);
     648:	6f e0       	ldi	r22, 0x0F	; 15
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	e9 cf       	rjmp	.-46     	; 0x620 <mfrc522_write>
     64e:	08 95       	ret

00000650 <mfrc522_init>:
#include "../spi/spi.h"

void mfrc522_init()
{
	uint8_t byte;
	mfrc522_reset();
     650:	fb df       	rcall	.-10     	; 0x648 <mfrc522_reset>
	
	mfrc522_write(TModeReg, 0x8D);
     652:	6d e8       	ldi	r22, 0x8D	; 141
     654:	8a e2       	ldi	r24, 0x2A	; 42
     656:	e4 df       	rcall	.-56     	; 0x620 <mfrc522_write>
    mfrc522_write(TPrescalerReg, 0x3E);
     658:	6e e3       	ldi	r22, 0x3E	; 62
     65a:	8b e2       	ldi	r24, 0x2B	; 43
     65c:	e1 df       	rcall	.-62     	; 0x620 <mfrc522_write>
    mfrc522_write(TReloadReg_1, 30);   
     65e:	6e e1       	ldi	r22, 0x1E	; 30
     660:	8c e2       	ldi	r24, 0x2C	; 44
     662:	de df       	rcall	.-68     	; 0x620 <mfrc522_write>
    mfrc522_write(TReloadReg_2, 0);	
     664:	60 e0       	ldi	r22, 0x00	; 0
     666:	8d e2       	ldi	r24, 0x2D	; 45
     668:	db df       	rcall	.-74     	; 0x620 <mfrc522_write>
	mfrc522_write(TxASKReg, 0x40);	
     66a:	60 e4       	ldi	r22, 0x40	; 64
     66c:	85 e1       	ldi	r24, 0x15	; 21
	mfrc522_write(ModeReg, 0x3D);
     66e:	d8 df       	rcall	.-80     	; 0x620 <mfrc522_write>
     670:	6d e3       	ldi	r22, 0x3D	; 61
     672:	81 e1       	ldi	r24, 0x11	; 17
     674:	d5 df       	rcall	.-86     	; 0x620 <mfrc522_write>
	
	byte = mfrc522_read(TxControlReg);
     676:	84 e1       	ldi	r24, 0x14	; 20
     678:	de df       	rcall	.-68     	; 0x636 <mfrc522_read>
	if(!(byte&0x03))
     67a:	98 2f       	mov	r25, r24
     67c:	93 70       	andi	r25, 0x03	; 3
     67e:	21 f4       	brne	.+8      	; 0x688 <mfrc522_init+0x38>
	{
		mfrc522_write(TxControlReg,byte|0x03);
     680:	68 2f       	mov	r22, r24
     682:	63 60       	ori	r22, 0x03	; 3
     684:	84 e1       	ldi	r24, 0x14	; 20
     686:	cc cf       	rjmp	.-104    	; 0x620 <mfrc522_write>
     688:	08 95       	ret

0000068a <mfrc522_to_card>:
     68a:	3f 92       	push	r3
   
	return status;
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
     68c:	4f 92       	push	r4
     68e:	5f 92       	push	r5
     690:	6f 92       	push	r6
     692:	7f 92       	push	r7
     694:	8f 92       	push	r8
     696:	9f 92       	push	r9
     698:	af 92       	push	r10
     69a:	bf 92       	push	r11
     69c:	cf 92       	push	r12
     69e:	df 92       	push	r13
     6a0:	ef 92       	push	r14
     6a2:	ff 92       	push	r15
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	98 2e       	mov	r9, r24
     6ae:	f6 2e       	mov	r15, r22
     6b0:	e7 2e       	mov	r14, r23
     6b2:	44 2e       	mov	r4, r20
     6b4:	82 2e       	mov	r8, r18
     6b6:	33 2e       	mov	r3, r19
     6b8:	58 01       	movw	r10, r16
    uint8_t lastBits;
    uint8_t n;
    uint8_t	tmp;
    uint32_t i;

    switch (cmd)
     6ba:	8c e0       	ldi	r24, 0x0C	; 12
     6bc:	98 16       	cp	r9, r24
     6be:	09 f4       	brne	.+2      	; 0x6c2 <mfrc522_to_card+0x38>
     6c0:	ba c0       	rjmp	.+372    	; 0x836 <mfrc522_to_card+0x1ac>
     6c2:	ee e0       	ldi	r30, 0x0E	; 14
     6c4:	9e 12       	cpse	r9, r30
     6c6:	03 c0       	rjmp	.+6      	; 0x6ce <mfrc522_to_card+0x44>
    {
        case MFAuthent_CMD:		//Certification cards close
		{
			irqEn = 0x12;
			waitIRq = 0x10;
     6c8:	10 e1       	ldi	r17, 0x10	; 16

    switch (cmd)
    {
        case MFAuthent_CMD:		//Certification cards close
		{
			irqEn = 0x12;
     6ca:	02 e1       	ldi	r16, 0x12	; 18
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <mfrc522_to_card+0x48>

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
    uint8_t irqEn = 0x00;
    uint8_t waitIRq = 0x00;
     6ce:	10 e0       	ldi	r17, 0x00	; 0
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
    uint8_t irqEn = 0x00;
     6d0:	00 e0       	ldi	r16, 0x00	; 0
		default:
			break;
    }
   
    //mfrc522_write(ComIEnReg, irqEn|0x80);	//Interrupt request
    n=mfrc522_read(ComIrqReg);
     6d2:	84 e0       	ldi	r24, 0x04	; 4
     6d4:	b0 df       	rcall	.-160    	; 0x636 <mfrc522_read>
    mfrc522_write(ComIrqReg,n&(~0x80));//clear all interrupt bits
     6d6:	68 2f       	mov	r22, r24
     6d8:	6f 77       	andi	r22, 0x7F	; 127
     6da:	84 e0       	ldi	r24, 0x04	; 4
     6dc:	a1 df       	rcall	.-190    	; 0x620 <mfrc522_write>
    n=mfrc522_read(FIFOLevelReg);
     6de:	8a e0       	ldi	r24, 0x0A	; 10
     6e0:	aa df       	rcall	.-172    	; 0x636 <mfrc522_read>
     6e2:	68 2f       	mov	r22, r24
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
     6e4:	60 68       	ori	r22, 0x80	; 128
     6e6:	8a e0       	ldi	r24, 0x0A	; 10
     6e8:	9b df       	rcall	.-202    	; 0x620 <mfrc522_write>
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???
     6ea:	60 e0       	ldi	r22, 0x00	; 0
     6ec:	81 e0       	ldi	r24, 0x01	; 1
     6ee:	98 df       	rcall	.-208    	; 0x620 <mfrc522_write>
     6f0:	51 2c       	mov	r5, r1

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     6f2:	61 2c       	mov	r6, r1
     6f4:	71 2c       	mov	r7, r1
     6f6:	41 14       	cp	r4, r1
     6f8:	51 04       	cpc	r5, r1
     6fa:	61 04       	cpc	r6, r1
     6fc:	71 04       	cpc	r7, r1
     6fe:	19 f4       	brne	.+6      	; 0x706 <mfrc522_to_card+0x7c>
     700:	14 c0       	rjmp	.+40     	; 0x72a <mfrc522_to_card+0xa0>
     702:	10 e3       	ldi	r17, 0x30	; 48
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
			waitIRq = 0x30;
     704:	07 e7       	ldi	r16, 0x77	; 119
			waitIRq = 0x10;
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
     706:	cf 2d       	mov	r28, r15
     708:	de 2d       	mov	r29, r14
     70a:	c1 2c       	mov	r12, r1
     70c:	d1 2c       	mov	r13, r1
     70e:	76 01       	movw	r14, r12
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
     710:	69 91       	ld	r22, Y+
     712:	89 e0       	ldi	r24, 0x09	; 9
     714:	85 df       	rcall	.-246    	; 0x620 <mfrc522_write>
     716:	ff ef       	ldi	r31, 0xFF	; 255
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     718:	cf 1a       	sub	r12, r31
     71a:	df 0a       	sbc	r13, r31
     71c:	ef 0a       	sbc	r14, r31
     71e:	ff 0a       	sbc	r15, r31
     720:	c4 14       	cp	r12, r4
     722:	d5 04       	cpc	r13, r5
     724:	e6 04       	cpc	r14, r6
     726:	f7 04       	cpc	r15, r7
     728:	98 f3       	brcs	.-26     	; 0x710 <mfrc522_to_card+0x86>
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
	}

	//Execute the cmd
	mfrc522_write(CommandReg, cmd);
     72a:	69 2d       	mov	r22, r9
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	78 df       	rcall	.-272    	; 0x620 <mfrc522_write>
    if (cmd == Transceive_CMD)
     730:	8c e0       	ldi	r24, 0x0C	; 12
     732:	98 12       	cpse	r9, r24
    {    
		n=mfrc522_read(BitFramingReg);
     734:	06 c0       	rjmp	.+12     	; 0x742 <mfrc522_to_card+0xb8>
     736:	8d e0       	ldi	r24, 0x0D	; 13
		mfrc522_write(BitFramingReg,n|0x80);  
     738:	7e df       	rcall	.-260    	; 0x636 <mfrc522_read>
     73a:	68 2f       	mov	r22, r24
     73c:	60 68       	ori	r22, 0x80	; 128
     73e:	8d e0       	ldi	r24, 0x0D	; 13
	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
    do 
    {
		//CommIrqReg[7..0]
		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
        n = mfrc522_read(ComIrqReg);
     740:	6f df       	rcall	.-290    	; 0x620 <mfrc522_write>
     742:	84 e0       	ldi	r24, 0x04	; 4
     744:	78 df       	rcall	.-272    	; 0x636 <mfrc522_read>
     746:	f8 2e       	mov	r15, r24
     748:	c0 e0       	ldi	r28, 0x00	; 0
     74a:	d0 e0       	ldi	r29, 0x00	; 0
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));
     74c:	11 60       	ori	r17, 0x01	; 1
     74e:	09 c0       	rjmp	.+18     	; 0x762 <mfrc522_to_card+0xd8>
	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
    do 
    {
		//CommIrqReg[7..0]
		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
        n = mfrc522_read(ComIrqReg);
     750:	84 e0       	ldi	r24, 0x04	; 4
     752:	71 df       	rcall	.-286    	; 0x636 <mfrc522_read>
     754:	f8 2e       	mov	r15, r24
     756:	21 96       	adiw	r28, 0x01	; 1
     758:	cf 3c       	cpi	r28, 0xCF	; 207
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));
     75a:	e7 e0       	ldi	r30, 0x07	; 7
     75c:	de 07       	cpc	r29, r30
     75e:	09 f4       	brne	.+2      	; 0x762 <mfrc522_to_card+0xd8>
     760:	83 c0       	rjmp	.+262    	; 0x868 <mfrc522_to_card+0x1de>
     762:	81 2f       	mov	r24, r17
     764:	8f 21       	and	r24, r15
     766:	a1 f3       	breq	.-24     	; 0x750 <mfrc522_to_card+0xc6>
     768:	87 c0       	rjmp	.+270    	; 0x878 <mfrc522_to_card+0x1ee>
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
        {
            status = CARD_FOUND;
            if (n & irqEn & 0x01)
     76a:	01 70       	andi	r16, 0x01	; 1
     76c:	f0 22       	and	r15, r16
            {   
				status = CARD_NOT_FOUND;			//??   
     76e:	11 f0       	breq	.+4      	; 0x774 <mfrc522_to_card+0xea>
     770:	c2 e0       	ldi	r28, 0x02	; 2
	
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
        {
            status = CARD_FOUND;
     772:	01 c0       	rjmp	.+2      	; 0x776 <mfrc522_to_card+0xec>
            if (n & irqEn & 0x01)
            {   
				status = CARD_NOT_FOUND;			//??   
			}

            if (cmd == Transceive_CMD)
     774:	c1 e0       	ldi	r28, 0x01	; 1
     776:	fc e0       	ldi	r31, 0x0C	; 12
     778:	9f 12       	cpse	r9, r31
            {
               	n = mfrc522_read(FIFOLevelReg);
     77a:	8a c0       	rjmp	.+276    	; 0x890 <mfrc522_to_card+0x206>
     77c:	8a e0       	ldi	r24, 0x0A	; 10
     77e:	5b df       	rcall	.-330    	; 0x636 <mfrc522_read>
     780:	48 2e       	mov	r4, r24
              	lastBits = mfrc522_read(ControlReg) & 0x07;
     782:	8c e0       	ldi	r24, 0x0C	; 12
     784:	58 df       	rcall	.-336    	; 0x636 <mfrc522_read>
     786:	28 2f       	mov	r18, r24
     788:	27 70       	andi	r18, 0x07	; 7
     78a:	a9 f0       	breq	.+42     	; 0x7b6 <mfrc522_to_card+0x12c>
                if (lastBits)
     78c:	84 2d       	mov	r24, r4
                {   
					*back_data_len = (n-1)*8 + lastBits;   
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	01 97       	sbiw	r24, 0x01	; 1
     792:	88 0f       	add	r24, r24
     794:	99 1f       	adc	r25, r25
     796:	88 0f       	add	r24, r24
     798:	99 1f       	adc	r25, r25
     79a:	88 0f       	add	r24, r24
     79c:	99 1f       	adc	r25, r25
     79e:	82 0f       	add	r24, r18
     7a0:	91 1d       	adc	r25, r1
     7a2:	09 2e       	mov	r0, r25
     7a4:	00 0c       	add	r0, r0
     7a6:	aa 0b       	sbc	r26, r26
     7a8:	bb 0b       	sbc	r27, r27
     7aa:	f5 01       	movw	r30, r10
     7ac:	80 83       	st	Z, r24
     7ae:	91 83       	std	Z+1, r25	; 0x01
     7b0:	a2 83       	std	Z+2, r26	; 0x02
     7b2:	b3 83       	std	Z+3, r27	; 0x03
     7b4:	11 c0       	rjmp	.+34     	; 0x7d8 <mfrc522_to_card+0x14e>
     7b6:	84 2d       	mov	r24, r4
				}
                else
                {   
					*back_data_len = n*8;   
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	88 0f       	add	r24, r24
     7bc:	99 1f       	adc	r25, r25
     7be:	88 0f       	add	r24, r24
     7c0:	99 1f       	adc	r25, r25
     7c2:	88 0f       	add	r24, r24
     7c4:	99 1f       	adc	r25, r25
     7c6:	09 2e       	mov	r0, r25
     7c8:	00 0c       	add	r0, r0
     7ca:	aa 0b       	sbc	r26, r26
     7cc:	bb 0b       	sbc	r27, r27
     7ce:	f5 01       	movw	r30, r10
     7d0:	80 83       	st	Z, r24
     7d2:	91 83       	std	Z+1, r25	; 0x01
     7d4:	a2 83       	std	Z+2, r26	; 0x02
     7d6:	b3 83       	std	Z+3, r27	; 0x03
     7d8:	44 20       	and	r4, r4
				}

                if (n == 0)
     7da:	71 f0       	breq	.+28     	; 0x7f8 <mfrc522_to_card+0x16e>
     7dc:	84 2d       	mov	r24, r4
                {   
					n = MAX_LEN;   
				}
				
				//Reading the received data in FIFO
                for (i=0; i<n; i++)
     7de:	81 31       	cpi	r24, 0x11	; 17
     7e0:	08 f0       	brcs	.+2      	; 0x7e4 <mfrc522_to_card+0x15a>
     7e2:	80 e1       	ldi	r24, 0x10	; 16
     7e4:	48 2e       	mov	r4, r24
     7e6:	51 2c       	mov	r5, r1
     7e8:	61 2c       	mov	r6, r1
     7ea:	71 2c       	mov	r7, r1
     7ec:	41 14       	cp	r4, r1
     7ee:	51 04       	cpc	r5, r1
     7f0:	61 04       	cpc	r6, r1
     7f2:	71 04       	cpc	r7, r1
     7f4:	29 f4       	brne	.+10     	; 0x800 <mfrc522_to_card+0x176>
     7f6:	4c c0       	rjmp	.+152    	; 0x890 <mfrc522_to_card+0x206>
     7f8:	41 2c       	mov	r4, r1
     7fa:	51 2c       	mov	r5, r1
     7fc:	32 01       	movw	r6, r4
     7fe:	43 94       	inc	r4
     800:	08 2d       	mov	r16, r8
     802:	13 2d       	mov	r17, r3
     804:	c1 2c       	mov	r12, r1
     806:	d1 2c       	mov	r13, r1
     808:	76 01       	movw	r14, r12
                {   
					back_data[i] = mfrc522_read(FIFODataReg);    
     80a:	89 e0       	ldi	r24, 0x09	; 9
     80c:	14 df       	rcall	.-472    	; 0x636 <mfrc522_read>
     80e:	f8 01       	movw	r30, r16
     810:	81 93       	st	Z+, r24
     812:	8f 01       	movw	r16, r30
                {   
					n = MAX_LEN;   
				}
				
				//Reading the received data in FIFO
                for (i=0; i<n; i++)
     814:	ff ef       	ldi	r31, 0xFF	; 255
     816:	cf 1a       	sub	r12, r31
     818:	df 0a       	sbc	r13, r31
     81a:	ef 0a       	sbc	r14, r31
     81c:	ff 0a       	sbc	r15, r31
     81e:	c4 14       	cp	r12, r4
     820:	d5 04       	cpc	r13, r5
     822:	e6 04       	cpc	r14, r6
     824:	f7 04       	cpc	r15, r7
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
	}

	//Execute the cmd
	mfrc522_write(CommandReg, cmd);
     826:	88 f3       	brcs	.-30     	; 0x80a <mfrc522_to_card+0x180>
     828:	33 c0       	rjmp	.+102    	; 0x890 <mfrc522_to_card+0x206>
     82a:	6c e0       	ldi	r22, 0x0C	; 12
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
			waitIRq = 0x30;
     82c:	81 e0       	ldi	r24, 0x01	; 1
			waitIRq = 0x10;
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
     82e:	f8 de       	rcall	.-528    	; 0x620 <mfrc522_write>
		default:
			break;
    }
   
    //mfrc522_write(ComIEnReg, irqEn|0x80);	//Interrupt request
    n=mfrc522_read(ComIrqReg);
     830:	10 e3       	ldi	r17, 0x30	; 48
     832:	07 e7       	ldi	r16, 0x77	; 119
     834:	80 cf       	rjmp	.-256    	; 0x736 <mfrc522_to_card+0xac>
    mfrc522_write(ComIrqReg,n&(~0x80));//clear all interrupt bits
     836:	84 e0       	ldi	r24, 0x04	; 4
     838:	fe de       	rcall	.-516    	; 0x636 <mfrc522_read>
     83a:	68 2f       	mov	r22, r24
     83c:	6f 77       	andi	r22, 0x7F	; 127
     83e:	84 e0       	ldi	r24, 0x04	; 4
    n=mfrc522_read(FIFOLevelReg);
     840:	ef de       	rcall	.-546    	; 0x620 <mfrc522_write>
     842:	8a e0       	ldi	r24, 0x0A	; 10
     844:	f8 de       	rcall	.-528    	; 0x636 <mfrc522_read>
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
     846:	68 2f       	mov	r22, r24
     848:	60 68       	ori	r22, 0x80	; 128
     84a:	8a e0       	ldi	r24, 0x0A	; 10
     84c:	e9 de       	rcall	.-558    	; 0x620 <mfrc522_write>
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	e6 de       	rcall	.-564    	; 0x620 <mfrc522_write>

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     854:	51 2c       	mov	r5, r1
     856:	61 2c       	mov	r6, r1
     858:	71 2c       	mov	r7, r1
     85a:	41 14       	cp	r4, r1
     85c:	51 04       	cpc	r5, r1
     85e:	61 04       	cpc	r6, r1
     860:	71 04       	cpc	r7, r1
     862:	09 f0       	breq	.+2      	; 0x866 <mfrc522_to_card+0x1dc>
        n = mfrc522_read(ComIrqReg);
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));

	tmp=mfrc522_read(BitFramingReg);
     864:	4e cf       	rjmp	.-356    	; 0x702 <mfrc522_to_card+0x78>
     866:	e1 cf       	rjmp	.-62     	; 0x82a <mfrc522_to_card+0x1a0>
     868:	8d e0       	ldi	r24, 0x0D	; 13
	mfrc522_write(BitFramingReg,tmp&(~0x80));
     86a:	e5 de       	rcall	.-566    	; 0x636 <mfrc522_read>
     86c:	68 2f       	mov	r22, r24
     86e:	6f 77       	andi	r22, 0x7F	; 127
     870:	8d e0       	ldi	r24, 0x0D	; 13
     872:	d6 de       	rcall	.-596    	; 0x620 <mfrc522_write>
	return status;
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
     874:	c3 e0       	ldi	r28, 0x03	; 3
     876:	0c c0       	rjmp	.+24     	; 0x890 <mfrc522_to_card+0x206>
        n = mfrc522_read(ComIrqReg);
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));

	tmp=mfrc522_read(BitFramingReg);
     878:	8d e0       	ldi	r24, 0x0D	; 13
     87a:	dd de       	rcall	.-582    	; 0x636 <mfrc522_read>
     87c:	68 2f       	mov	r22, r24
	mfrc522_write(BitFramingReg,tmp&(~0x80));
     87e:	6f 77       	andi	r22, 0x7F	; 127
     880:	8d e0       	ldi	r24, 0x0D	; 13
     882:	ce de       	rcall	.-612    	; 0x620 <mfrc522_write>
     884:	86 e0       	ldi	r24, 0x06	; 6
     886:	d7 de       	rcall	.-594    	; 0x636 <mfrc522_read>
	
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
     888:	8b 71       	andi	r24, 0x1B	; 27
     88a:	09 f4       	brne	.+2      	; 0x88e <mfrc522_to_card+0x204>
     88c:	6e cf       	rjmp	.-292    	; 0x76a <mfrc522_to_card+0xe0>
     88e:	c3 e0       	ldi	r28, 0x03	; 3
     890:	8c 2f       	mov	r24, r28
     892:	df 91       	pop	r29
				}
            }
        }
        else
        {   
			status = ERROR;  
     894:	cf 91       	pop	r28
	
    //SetBitMask(ControlReg,0x80);           //timer stops
    //mfrc522_write(cmdReg, PCD_IDLE); 

    return status;
}
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	ff 90       	pop	r15
     89c:	ef 90       	pop	r14
     89e:	df 90       	pop	r13
     8a0:	cf 90       	pop	r12
     8a2:	bf 90       	pop	r11
     8a4:	af 90       	pop	r10
     8a6:	9f 90       	pop	r9
     8a8:	8f 90       	pop	r8
     8aa:	7f 90       	pop	r7
     8ac:	6f 90       	pop	r6
     8ae:	5f 90       	pop	r5
     8b0:	4f 90       	pop	r4
     8b2:	3f 90       	pop	r3
     8b4:	08 95       	ret

000008b6 <mfrc522_request>:
     8b6:	ef 92       	push	r14
     8b8:	ff 92       	push	r15
     8ba:	0f 93       	push	r16
{
	mfrc522_write(CommandReg,SoftReset_CMD);
}

uint8_t	mfrc522_request(uint8_t req_mode, uint8_t * tag_type)
{
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	00 d0       	rcall	.+0      	; 0x8c4 <mfrc522_request+0xe>
     8c4:	1f 92       	push	r1
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62
     8ca:	18 2f       	mov	r17, r24
     8cc:	7b 01       	movw	r14, r22
	uint8_t  status;  
	uint32_t backBits;//The received data bits

	mfrc522_write(BitFramingReg, 0x07);//TxLastBists = BitFramingReg[2..0]	???
     8ce:	67 e0       	ldi	r22, 0x07	; 7
     8d0:	8d e0       	ldi	r24, 0x0D	; 13
     8d2:	a6 de       	rcall	.-692    	; 0x620 <mfrc522_write>
	
	tag_type[0] = req_mode;
     8d4:	f7 01       	movw	r30, r14
     8d6:	10 83       	st	Z, r17
	status = mfrc522_to_card(Transceive_CMD, tag_type, 1, tag_type, &backBits);
     8d8:	8e 01       	movw	r16, r28
     8da:	0f 5f       	subi	r16, 0xFF	; 255
     8dc:	1f 4f       	sbci	r17, 0xFF	; 255
     8de:	97 01       	movw	r18, r14
     8e0:	41 e0       	ldi	r20, 0x01	; 1
     8e2:	b7 01       	movw	r22, r14
     8e4:	8c e0       	ldi	r24, 0x0C	; 12
     8e6:	d1 de       	rcall	.-606    	; 0x68a <mfrc522_to_card>

	if ((status != CARD_FOUND) || (backBits != 0x10))
     8e8:	81 30       	cpi	r24, 0x01	; 1
     8ea:	59 f4       	brne	.+22     	; 0x902 <mfrc522_request+0x4c>
     8ec:	49 81       	ldd	r20, Y+1	; 0x01
     8ee:	5a 81       	ldd	r21, Y+2	; 0x02
     8f0:	6b 81       	ldd	r22, Y+3	; 0x03
     8f2:	7c 81       	ldd	r23, Y+4	; 0x04
     8f4:	40 31       	cpi	r20, 0x10	; 16
     8f6:	51 05       	cpc	r21, r1
     8f8:	61 05       	cpc	r22, r1
     8fa:	71 05       	cpc	r23, r1
     8fc:	19 f0       	breq	.+6      	; 0x904 <mfrc522_request+0x4e>
	{    
		status = ERROR;
     8fe:	83 e0       	ldi	r24, 0x03	; 3
     900:	01 c0       	rjmp	.+2      	; 0x904 <mfrc522_request+0x4e>
     902:	83 e0       	ldi	r24, 0x03	; 3
	}
   
	return status;
}
     904:	0f 90       	pop	r0
     906:	0f 90       	pop	r0
     908:	0f 90       	pop	r0
     90a:	0f 90       	pop	r0
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	08 95       	ret

0000091a <mfrc522_get_card_serial>:
    return status;
}


uint8_t mfrc522_get_card_serial(uint8_t * serial_out)
{
     91a:	ef 92       	push	r14
     91c:	ff 92       	push	r15
     91e:	0f 93       	push	r16
     920:	1f 93       	push	r17
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	00 d0       	rcall	.+0      	; 0x928 <mfrc522_get_card_serial+0xe>
     928:	1f 92       	push	r1
     92a:	cd b7       	in	r28, 0x3d	; 61
     92c:	de b7       	in	r29, 0x3e	; 62
     92e:	7c 01       	movw	r14, r24
	uint8_t status;
    uint8_t i;
	uint8_t serNumCheck=0;
    uint32_t unLen;
    
	mfrc522_write(BitFramingReg, 0x00);		//TxLastBists = BitFramingReg[2..0]
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	8d e0       	ldi	r24, 0x0D	; 13
     934:	75 de       	rcall	.-790    	; 0x620 <mfrc522_write>
 
    serial_out[0] = PICC_ANTICOLL;
     936:	83 e9       	ldi	r24, 0x93	; 147
     938:	f7 01       	movw	r30, r14
     93a:	80 83       	st	Z, r24
    serial_out[1] = 0x20;
     93c:	80 e2       	ldi	r24, 0x20	; 32
     93e:	81 83       	std	Z+1, r24	; 0x01
    status = mfrc522_to_card(Transceive_CMD, serial_out, 2, serial_out, &unLen);
     940:	8e 01       	movw	r16, r28
     942:	0f 5f       	subi	r16, 0xFF	; 255
     944:	1f 4f       	sbci	r17, 0xFF	; 255
     946:	97 01       	movw	r18, r14
     948:	42 e0       	ldi	r20, 0x02	; 2
     94a:	b7 01       	movw	r22, r14
     94c:	8c e0       	ldi	r24, 0x0C	; 12
     94e:	9d de       	rcall	.-710    	; 0x68a <mfrc522_to_card>

    if (status == CARD_FOUND)
     950:	81 30       	cpi	r24, 0x01	; 1
     952:	71 f4       	brne	.+28     	; 0x970 <mfrc522_get_card_serial+0x56>
     954:	f7 01       	movw	r30, r14
     956:	a7 01       	movw	r20, r14
     958:	4c 5f       	subi	r20, 0xFC	; 252
     95a:	5f 4f       	sbci	r21, 0xFF	; 255
     95c:	90 e0       	ldi	r25, 0x00	; 0
	{
		//Check card serial number
		for (i=0; i<4; i++)
		{   
		 	serNumCheck ^= serial_out[i];
     95e:	21 91       	ld	r18, Z+
     960:	92 27       	eor	r25, r18
    status = mfrc522_to_card(Transceive_CMD, serial_out, 2, serial_out, &unLen);

    if (status == CARD_FOUND)
	{
		//Check card serial number
		for (i=0; i<4; i++)
     962:	4e 17       	cp	r20, r30
     964:	5f 07       	cpc	r21, r31
     966:	d9 f7       	brne	.-10     	; 0x95e <mfrc522_get_card_serial+0x44>
		{   
		 	serNumCheck ^= serial_out[i];
		}
		if (serNumCheck != serial_out[i])
     968:	f7 01       	movw	r30, r14
     96a:	24 81       	ldd	r18, Z+4	; 0x04
     96c:	92 13       	cpse	r25, r18
		{   
			status = ERROR;    
     96e:	83 e0       	ldi	r24, 0x03	; 3
		}
    }
    return status;
     970:	0f 90       	pop	r0
     972:	0f 90       	pop	r0
     974:	0f 90       	pop	r0
     976:	0f 90       	pop	r0
     978:	df 91       	pop	r29
     97a:	cf 91       	pop	r28
     97c:	1f 91       	pop	r17
     97e:	0f 91       	pop	r16
     980:	ff 90       	pop	r15
     982:	ef 90       	pop	r14
     984:	08 95       	ret

00000986 <UartPutchar>:
	(0 << UMSEL00);
}

void UartPutchar(char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
     986:	e0 ec       	ldi	r30, 0xC0	; 192
     988:	f0 e0       	ldi	r31, 0x00	; 0
     98a:	90 81       	ld	r25, Z
     98c:	95 ff       	sbrs	r25, 5
     98e:	fd cf       	rjmp	.-6      	; 0x98a <UartPutchar+0x4>
	UDR0 = data;
     990:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     994:	08 95       	ret

00000996 <UartGetchar>:
}

int UartGetchar(void)
{
     996:	cf 93       	push	r28
	char data;
	
	while (!(UCSR0A & (1 << RXC0)));
     998:	e0 ec       	ldi	r30, 0xC0	; 192
     99a:	f0 e0       	ldi	r31, 0x00	; 0
     99c:	80 81       	ld	r24, Z
     99e:	88 23       	and	r24, r24
     9a0:	ec f7       	brge	.-6      	; 0x99c <UartGetchar+0x6>
	
	data = UDR0;
     9a2:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	if (data == '\n') {
     9a6:	ca 30       	cpi	r28, 0x0A	; 10
     9a8:	29 f0       	breq	.+10     	; 0x9b4 <UartGetchar+0x1e>
		return -1;
	}
	UartPutchar(data);
     9aa:	8c 2f       	mov	r24, r28
     9ac:	ec df       	rcall	.-40     	; 0x986 <UartPutchar>

	return data;
     9ae:	8c 2f       	mov	r24, r28
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <UartGetchar+0x22>
	while (!(UCSR0A & (1 << RXC0)));
	
	data = UDR0;
	
	if (data == '\n') {
		return -1;
     9b4:	8f ef       	ldi	r24, 0xFF	; 255
     9b6:	9f ef       	ldi	r25, 0xFF	; 255
	}
	UartPutchar(data);

	return data;
     9b8:	cf 91       	pop	r28
     9ba:	08 95       	ret

000009bc <UartInit>:

static FILE the_stdio = FDEV_SETUP_STREAM(UartPutchar, UartGetchar, _FDEV_SETUP_RW);

void UartInit(void)
{
	stdout = &the_stdio;
     9bc:	ea e6       	ldi	r30, 0x6A	; 106
     9be:	f2 e0       	ldi	r31, 0x02	; 2
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	92 e0       	ldi	r25, 0x02	; 2
     9c4:	93 83       	std	Z+3, r25	; 0x03
     9c6:	82 83       	std	Z+2, r24	; 0x02
	stdin = &the_stdio;
     9c8:	91 83       	std	Z+1, r25	; 0x01
     9ca:	80 83       	st	Z, r24
	
	UBRR0H = UBRRH_VALUE;
     9cc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = UBRRL_VALUE;
     9d0:	87 e6       	ldi	r24, 0x67	; 103
     9d2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>

	#if USE_2X
	UCSR0A |= (1 << U2X0);
	#endif

	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     9d6:	88 e1       	ldi	r24, 0x18	; 24
     9d8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>

	// 8-bit, 1 stop bit, no parity, asynchronous UART
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00) | (0 << USBS0) |
     9dc:	86 e0       	ldi	r24, 0x06	; 6
     9de:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     9e2:	08 95       	ret

000009e4 <spi_init>:
#include "spi.h"

#if SPI_CONFIG_AS_MASTER
void spi_init()
{
	SPI_DDR |= (1<<SPI_MOSI)|(1<<SPI_SCK)|(1<<SPI_SS);
     9e4:	84 b1       	in	r24, 0x04	; 4
     9e6:	87 60       	ori	r24, 0x07	; 7
     9e8:	84 b9       	out	0x04, r24	; 4
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);//prescaler 16
     9ea:	8c b5       	in	r24, 0x2c	; 44
     9ec:	81 65       	ori	r24, 0x51	; 81
     9ee:	8c bd       	out	0x2c, r24	; 44
     9f0:	08 95       	ret

000009f2 <spi_transmit>:
}


uint8_t spi_transmit(uint8_t data)
{
	SPDR = data;
     9f2:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     9f4:	0d b4       	in	r0, 0x2d	; 45
     9f6:	07 fe       	sbrs	r0, 7
     9f8:	fd cf       	rjmp	.-6      	; 0x9f4 <spi_transmit+0x2>
	
	return SPDR;
     9fa:	8e b5       	in	r24, 0x2e	; 46
}
     9fc:	08 95       	ret

000009fe <vfprintf>:
     9fe:	2f 92       	push	r2
     a00:	3f 92       	push	r3
     a02:	4f 92       	push	r4
     a04:	5f 92       	push	r5
     a06:	6f 92       	push	r6
     a08:	7f 92       	push	r7
     a0a:	8f 92       	push	r8
     a0c:	9f 92       	push	r9
     a0e:	af 92       	push	r10
     a10:	bf 92       	push	r11
     a12:	cf 92       	push	r12
     a14:	df 92       	push	r13
     a16:	ef 92       	push	r14
     a18:	ff 92       	push	r15
     a1a:	0f 93       	push	r16
     a1c:	1f 93       	push	r17
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	cd b7       	in	r28, 0x3d	; 61
     a24:	de b7       	in	r29, 0x3e	; 62
     a26:	60 97       	sbiw	r28, 0x10	; 16
     a28:	0f b6       	in	r0, 0x3f	; 63
     a2a:	f8 94       	cli
     a2c:	de bf       	out	0x3e, r29	; 62
     a2e:	0f be       	out	0x3f, r0	; 63
     a30:	cd bf       	out	0x3d, r28	; 61
     a32:	7c 01       	movw	r14, r24
     a34:	1b 01       	movw	r2, r22
     a36:	6a 01       	movw	r12, r20
     a38:	fc 01       	movw	r30, r24
     a3a:	17 82       	std	Z+7, r1	; 0x07
     a3c:	16 82       	std	Z+6, r1	; 0x06
     a3e:	83 81       	ldd	r24, Z+3	; 0x03
     a40:	81 ff       	sbrs	r24, 1
     a42:	36 c3       	rjmp	.+1644   	; 0x10b0 <vfprintf+0x6b2>
     a44:	9e 01       	movw	r18, r28
     a46:	2f 5f       	subi	r18, 0xFF	; 255
     a48:	3f 4f       	sbci	r19, 0xFF	; 255
     a4a:	39 01       	movw	r6, r18
     a4c:	f7 01       	movw	r30, r14
     a4e:	93 81       	ldd	r25, Z+3	; 0x03
     a50:	f1 01       	movw	r30, r2
     a52:	93 fd       	sbrc	r25, 3
     a54:	85 91       	lpm	r24, Z+
     a56:	93 ff       	sbrs	r25, 3
     a58:	81 91       	ld	r24, Z+
     a5a:	1f 01       	movw	r2, r30
     a5c:	88 23       	and	r24, r24
     a5e:	09 f4       	brne	.+2      	; 0xa62 <vfprintf+0x64>
     a60:	23 c3       	rjmp	.+1606   	; 0x10a8 <vfprintf+0x6aa>
     a62:	85 32       	cpi	r24, 0x25	; 37
     a64:	39 f4       	brne	.+14     	; 0xa74 <vfprintf+0x76>
     a66:	93 fd       	sbrc	r25, 3
     a68:	85 91       	lpm	r24, Z+
     a6a:	93 ff       	sbrs	r25, 3
     a6c:	81 91       	ld	r24, Z+
     a6e:	1f 01       	movw	r2, r30
     a70:	85 32       	cpi	r24, 0x25	; 37
     a72:	39 f4       	brne	.+14     	; 0xa82 <vfprintf+0x84>
     a74:	b7 01       	movw	r22, r14
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     a7c:	56 01       	movw	r10, r12
     a7e:	65 01       	movw	r12, r10
     a80:	e5 cf       	rjmp	.-54     	; 0xa4c <vfprintf+0x4e>
     a82:	10 e0       	ldi	r17, 0x00	; 0
     a84:	51 2c       	mov	r5, r1
     a86:	91 2c       	mov	r9, r1
     a88:	ff e1       	ldi	r31, 0x1F	; 31
     a8a:	f9 15       	cp	r31, r9
     a8c:	d8 f0       	brcs	.+54     	; 0xac4 <vfprintf+0xc6>
     a8e:	8b 32       	cpi	r24, 0x2B	; 43
     a90:	79 f0       	breq	.+30     	; 0xab0 <vfprintf+0xb2>
     a92:	38 f4       	brcc	.+14     	; 0xaa2 <vfprintf+0xa4>
     a94:	80 32       	cpi	r24, 0x20	; 32
     a96:	79 f0       	breq	.+30     	; 0xab6 <vfprintf+0xb8>
     a98:	83 32       	cpi	r24, 0x23	; 35
     a9a:	a1 f4       	brne	.+40     	; 0xac4 <vfprintf+0xc6>
     a9c:	f9 2d       	mov	r31, r9
     a9e:	f0 61       	ori	r31, 0x10	; 16
     aa0:	2e c0       	rjmp	.+92     	; 0xafe <vfprintf+0x100>
     aa2:	8d 32       	cpi	r24, 0x2D	; 45
     aa4:	61 f0       	breq	.+24     	; 0xabe <vfprintf+0xc0>
     aa6:	80 33       	cpi	r24, 0x30	; 48
     aa8:	69 f4       	brne	.+26     	; 0xac4 <vfprintf+0xc6>
     aaa:	29 2d       	mov	r18, r9
     aac:	21 60       	ori	r18, 0x01	; 1
     aae:	2d c0       	rjmp	.+90     	; 0xb0a <vfprintf+0x10c>
     ab0:	39 2d       	mov	r19, r9
     ab2:	32 60       	ori	r19, 0x02	; 2
     ab4:	93 2e       	mov	r9, r19
     ab6:	89 2d       	mov	r24, r9
     ab8:	84 60       	ori	r24, 0x04	; 4
     aba:	98 2e       	mov	r9, r24
     abc:	2a c0       	rjmp	.+84     	; 0xb12 <vfprintf+0x114>
     abe:	e9 2d       	mov	r30, r9
     ac0:	e8 60       	ori	r30, 0x08	; 8
     ac2:	15 c0       	rjmp	.+42     	; 0xaee <vfprintf+0xf0>
     ac4:	97 fc       	sbrc	r9, 7
     ac6:	2d c0       	rjmp	.+90     	; 0xb22 <vfprintf+0x124>
     ac8:	20 ed       	ldi	r18, 0xD0	; 208
     aca:	28 0f       	add	r18, r24
     acc:	2a 30       	cpi	r18, 0x0A	; 10
     ace:	88 f4       	brcc	.+34     	; 0xaf2 <vfprintf+0xf4>
     ad0:	96 fe       	sbrs	r9, 6
     ad2:	06 c0       	rjmp	.+12     	; 0xae0 <vfprintf+0xe2>
     ad4:	3a e0       	ldi	r19, 0x0A	; 10
     ad6:	13 9f       	mul	r17, r19
     ad8:	20 0d       	add	r18, r0
     ada:	11 24       	eor	r1, r1
     adc:	12 2f       	mov	r17, r18
     ade:	19 c0       	rjmp	.+50     	; 0xb12 <vfprintf+0x114>
     ae0:	8a e0       	ldi	r24, 0x0A	; 10
     ae2:	58 9e       	mul	r5, r24
     ae4:	20 0d       	add	r18, r0
     ae6:	11 24       	eor	r1, r1
     ae8:	52 2e       	mov	r5, r18
     aea:	e9 2d       	mov	r30, r9
     aec:	e0 62       	ori	r30, 0x20	; 32
     aee:	9e 2e       	mov	r9, r30
     af0:	10 c0       	rjmp	.+32     	; 0xb12 <vfprintf+0x114>
     af2:	8e 32       	cpi	r24, 0x2E	; 46
     af4:	31 f4       	brne	.+12     	; 0xb02 <vfprintf+0x104>
     af6:	96 fc       	sbrc	r9, 6
     af8:	d7 c2       	rjmp	.+1454   	; 0x10a8 <vfprintf+0x6aa>
     afa:	f9 2d       	mov	r31, r9
     afc:	f0 64       	ori	r31, 0x40	; 64
     afe:	9f 2e       	mov	r9, r31
     b00:	08 c0       	rjmp	.+16     	; 0xb12 <vfprintf+0x114>
     b02:	8c 36       	cpi	r24, 0x6C	; 108
     b04:	21 f4       	brne	.+8      	; 0xb0e <vfprintf+0x110>
     b06:	29 2d       	mov	r18, r9
     b08:	20 68       	ori	r18, 0x80	; 128
     b0a:	92 2e       	mov	r9, r18
     b0c:	02 c0       	rjmp	.+4      	; 0xb12 <vfprintf+0x114>
     b0e:	88 36       	cpi	r24, 0x68	; 104
     b10:	41 f4       	brne	.+16     	; 0xb22 <vfprintf+0x124>
     b12:	f1 01       	movw	r30, r2
     b14:	93 fd       	sbrc	r25, 3
     b16:	85 91       	lpm	r24, Z+
     b18:	93 ff       	sbrs	r25, 3
     b1a:	81 91       	ld	r24, Z+
     b1c:	1f 01       	movw	r2, r30
     b1e:	81 11       	cpse	r24, r1
     b20:	b3 cf       	rjmp	.-154    	; 0xa88 <vfprintf+0x8a>
     b22:	9b eb       	ldi	r25, 0xBB	; 187
     b24:	98 0f       	add	r25, r24
     b26:	93 30       	cpi	r25, 0x03	; 3
     b28:	20 f4       	brcc	.+8      	; 0xb32 <vfprintf+0x134>
     b2a:	99 2d       	mov	r25, r9
     b2c:	90 61       	ori	r25, 0x10	; 16
     b2e:	80 5e       	subi	r24, 0xE0	; 224
     b30:	07 c0       	rjmp	.+14     	; 0xb40 <vfprintf+0x142>
     b32:	9b e9       	ldi	r25, 0x9B	; 155
     b34:	98 0f       	add	r25, r24
     b36:	93 30       	cpi	r25, 0x03	; 3
     b38:	08 f0       	brcs	.+2      	; 0xb3c <vfprintf+0x13e>
     b3a:	63 c1       	rjmp	.+710    	; 0xe02 <vfprintf+0x404>
     b3c:	99 2d       	mov	r25, r9
     b3e:	9f 7e       	andi	r25, 0xEF	; 239
     b40:	96 ff       	sbrs	r25, 6
     b42:	16 e0       	ldi	r17, 0x06	; 6
     b44:	9f 73       	andi	r25, 0x3F	; 63
     b46:	99 2e       	mov	r9, r25
     b48:	85 36       	cpi	r24, 0x65	; 101
     b4a:	19 f4       	brne	.+6      	; 0xb52 <vfprintf+0x154>
     b4c:	90 64       	ori	r25, 0x40	; 64
     b4e:	99 2e       	mov	r9, r25
     b50:	08 c0       	rjmp	.+16     	; 0xb62 <vfprintf+0x164>
     b52:	86 36       	cpi	r24, 0x66	; 102
     b54:	21 f4       	brne	.+8      	; 0xb5e <vfprintf+0x160>
     b56:	39 2f       	mov	r19, r25
     b58:	30 68       	ori	r19, 0x80	; 128
     b5a:	93 2e       	mov	r9, r19
     b5c:	02 c0       	rjmp	.+4      	; 0xb62 <vfprintf+0x164>
     b5e:	11 11       	cpse	r17, r1
     b60:	11 50       	subi	r17, 0x01	; 1
     b62:	97 fe       	sbrs	r9, 7
     b64:	07 c0       	rjmp	.+14     	; 0xb74 <vfprintf+0x176>
     b66:	1c 33       	cpi	r17, 0x3C	; 60
     b68:	50 f4       	brcc	.+20     	; 0xb7e <vfprintf+0x180>
     b6a:	44 24       	eor	r4, r4
     b6c:	43 94       	inc	r4
     b6e:	41 0e       	add	r4, r17
     b70:	27 e0       	ldi	r18, 0x07	; 7
     b72:	0b c0       	rjmp	.+22     	; 0xb8a <vfprintf+0x18c>
     b74:	18 30       	cpi	r17, 0x08	; 8
     b76:	38 f0       	brcs	.+14     	; 0xb86 <vfprintf+0x188>
     b78:	27 e0       	ldi	r18, 0x07	; 7
     b7a:	17 e0       	ldi	r17, 0x07	; 7
     b7c:	05 c0       	rjmp	.+10     	; 0xb88 <vfprintf+0x18a>
     b7e:	27 e0       	ldi	r18, 0x07	; 7
     b80:	9c e3       	ldi	r25, 0x3C	; 60
     b82:	49 2e       	mov	r4, r25
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <vfprintf+0x18c>
     b86:	21 2f       	mov	r18, r17
     b88:	41 2c       	mov	r4, r1
     b8a:	56 01       	movw	r10, r12
     b8c:	84 e0       	ldi	r24, 0x04	; 4
     b8e:	a8 0e       	add	r10, r24
     b90:	b1 1c       	adc	r11, r1
     b92:	f6 01       	movw	r30, r12
     b94:	60 81       	ld	r22, Z
     b96:	71 81       	ldd	r23, Z+1	; 0x01
     b98:	82 81       	ldd	r24, Z+2	; 0x02
     b9a:	93 81       	ldd	r25, Z+3	; 0x03
     b9c:	04 2d       	mov	r16, r4
     b9e:	a3 01       	movw	r20, r6
     ba0:	dc d7       	rcall	.+4024   	; 0x1b5a <__ftoa_engine>
     ba2:	6c 01       	movw	r12, r24
     ba4:	f9 81       	ldd	r31, Y+1	; 0x01
     ba6:	fc 87       	std	Y+12, r31	; 0x0c
     ba8:	f0 ff       	sbrs	r31, 0
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <vfprintf+0x1b2>
     bac:	f3 ff       	sbrs	r31, 3
     bae:	06 c0       	rjmp	.+12     	; 0xbbc <vfprintf+0x1be>
     bb0:	91 fc       	sbrc	r9, 1
     bb2:	06 c0       	rjmp	.+12     	; 0xbc0 <vfprintf+0x1c2>
     bb4:	92 fe       	sbrs	r9, 2
     bb6:	06 c0       	rjmp	.+12     	; 0xbc4 <vfprintf+0x1c6>
     bb8:	00 e2       	ldi	r16, 0x20	; 32
     bba:	05 c0       	rjmp	.+10     	; 0xbc6 <vfprintf+0x1c8>
     bbc:	0d e2       	ldi	r16, 0x2D	; 45
     bbe:	03 c0       	rjmp	.+6      	; 0xbc6 <vfprintf+0x1c8>
     bc0:	0b e2       	ldi	r16, 0x2B	; 43
     bc2:	01 c0       	rjmp	.+2      	; 0xbc6 <vfprintf+0x1c8>
     bc4:	00 e0       	ldi	r16, 0x00	; 0
     bc6:	8c 85       	ldd	r24, Y+12	; 0x0c
     bc8:	8c 70       	andi	r24, 0x0C	; 12
     bca:	19 f0       	breq	.+6      	; 0xbd2 <vfprintf+0x1d4>
     bcc:	01 11       	cpse	r16, r1
     bce:	4e c2       	rjmp	.+1180   	; 0x106c <vfprintf+0x66e>
     bd0:	8b c2       	rjmp	.+1302   	; 0x10e8 <vfprintf+0x6ea>
     bd2:	97 fe       	sbrs	r9, 7
     bd4:	10 c0       	rjmp	.+32     	; 0xbf6 <vfprintf+0x1f8>
     bd6:	4c 0c       	add	r4, r12
     bd8:	fc 85       	ldd	r31, Y+12	; 0x0c
     bda:	f4 ff       	sbrs	r31, 4
     bdc:	04 c0       	rjmp	.+8      	; 0xbe6 <vfprintf+0x1e8>
     bde:	8a 81       	ldd	r24, Y+2	; 0x02
     be0:	81 33       	cpi	r24, 0x31	; 49
     be2:	09 f4       	brne	.+2      	; 0xbe6 <vfprintf+0x1e8>
     be4:	4a 94       	dec	r4
     be6:	14 14       	cp	r1, r4
     be8:	74 f5       	brge	.+92     	; 0xc46 <vfprintf+0x248>
     bea:	28 e0       	ldi	r18, 0x08	; 8
     bec:	24 15       	cp	r18, r4
     bee:	78 f5       	brcc	.+94     	; 0xc4e <vfprintf+0x250>
     bf0:	88 e0       	ldi	r24, 0x08	; 8
     bf2:	48 2e       	mov	r4, r24
     bf4:	2c c0       	rjmp	.+88     	; 0xc4e <vfprintf+0x250>
     bf6:	96 fc       	sbrc	r9, 6
     bf8:	2a c0       	rjmp	.+84     	; 0xc4e <vfprintf+0x250>
     bfa:	81 2f       	mov	r24, r17
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	8c 15       	cp	r24, r12
     c00:	9d 05       	cpc	r25, r13
     c02:	9c f0       	brlt	.+38     	; 0xc2a <vfprintf+0x22c>
     c04:	3c ef       	ldi	r19, 0xFC	; 252
     c06:	c3 16       	cp	r12, r19
     c08:	3f ef       	ldi	r19, 0xFF	; 255
     c0a:	d3 06       	cpc	r13, r19
     c0c:	74 f0       	brlt	.+28     	; 0xc2a <vfprintf+0x22c>
     c0e:	89 2d       	mov	r24, r9
     c10:	80 68       	ori	r24, 0x80	; 128
     c12:	98 2e       	mov	r9, r24
     c14:	0a c0       	rjmp	.+20     	; 0xc2a <vfprintf+0x22c>
     c16:	e2 e0       	ldi	r30, 0x02	; 2
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	ec 0f       	add	r30, r28
     c1c:	fd 1f       	adc	r31, r29
     c1e:	e1 0f       	add	r30, r17
     c20:	f1 1d       	adc	r31, r1
     c22:	80 81       	ld	r24, Z
     c24:	80 33       	cpi	r24, 0x30	; 48
     c26:	19 f4       	brne	.+6      	; 0xc2e <vfprintf+0x230>
     c28:	11 50       	subi	r17, 0x01	; 1
     c2a:	11 11       	cpse	r17, r1
     c2c:	f4 cf       	rjmp	.-24     	; 0xc16 <vfprintf+0x218>
     c2e:	97 fe       	sbrs	r9, 7
     c30:	0e c0       	rjmp	.+28     	; 0xc4e <vfprintf+0x250>
     c32:	44 24       	eor	r4, r4
     c34:	43 94       	inc	r4
     c36:	41 0e       	add	r4, r17
     c38:	81 2f       	mov	r24, r17
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	c8 16       	cp	r12, r24
     c3e:	d9 06       	cpc	r13, r25
     c40:	2c f4       	brge	.+10     	; 0xc4c <vfprintf+0x24e>
     c42:	1c 19       	sub	r17, r12
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <vfprintf+0x250>
     c46:	44 24       	eor	r4, r4
     c48:	43 94       	inc	r4
     c4a:	01 c0       	rjmp	.+2      	; 0xc4e <vfprintf+0x250>
     c4c:	10 e0       	ldi	r17, 0x00	; 0
     c4e:	97 fe       	sbrs	r9, 7
     c50:	06 c0       	rjmp	.+12     	; 0xc5e <vfprintf+0x260>
     c52:	1c 14       	cp	r1, r12
     c54:	1d 04       	cpc	r1, r13
     c56:	34 f4       	brge	.+12     	; 0xc64 <vfprintf+0x266>
     c58:	c6 01       	movw	r24, r12
     c5a:	01 96       	adiw	r24, 0x01	; 1
     c5c:	05 c0       	rjmp	.+10     	; 0xc68 <vfprintf+0x26a>
     c5e:	85 e0       	ldi	r24, 0x05	; 5
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <vfprintf+0x26a>
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	01 11       	cpse	r16, r1
     c6a:	01 96       	adiw	r24, 0x01	; 1
     c6c:	11 23       	and	r17, r17
     c6e:	31 f0       	breq	.+12     	; 0xc7c <vfprintf+0x27e>
     c70:	21 2f       	mov	r18, r17
     c72:	30 e0       	ldi	r19, 0x00	; 0
     c74:	2f 5f       	subi	r18, 0xFF	; 255
     c76:	3f 4f       	sbci	r19, 0xFF	; 255
     c78:	82 0f       	add	r24, r18
     c7a:	93 1f       	adc	r25, r19
     c7c:	25 2d       	mov	r18, r5
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	82 17       	cp	r24, r18
     c82:	93 07       	cpc	r25, r19
     c84:	14 f4       	brge	.+4      	; 0xc8a <vfprintf+0x28c>
     c86:	58 1a       	sub	r5, r24
     c88:	01 c0       	rjmp	.+2      	; 0xc8c <vfprintf+0x28e>
     c8a:	51 2c       	mov	r5, r1
     c8c:	89 2d       	mov	r24, r9
     c8e:	89 70       	andi	r24, 0x09	; 9
     c90:	49 f4       	brne	.+18     	; 0xca4 <vfprintf+0x2a6>
     c92:	55 20       	and	r5, r5
     c94:	39 f0       	breq	.+14     	; 0xca4 <vfprintf+0x2a6>
     c96:	b7 01       	movw	r22, r14
     c98:	80 e2       	ldi	r24, 0x20	; 32
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     ca0:	5a 94       	dec	r5
     ca2:	f7 cf       	rjmp	.-18     	; 0xc92 <vfprintf+0x294>
     ca4:	00 23       	and	r16, r16
     ca6:	29 f0       	breq	.+10     	; 0xcb2 <vfprintf+0x2b4>
     ca8:	b7 01       	movw	r22, r14
     caa:	80 2f       	mov	r24, r16
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     cb2:	93 fc       	sbrc	r9, 3
     cb4:	09 c0       	rjmp	.+18     	; 0xcc8 <vfprintf+0x2ca>
     cb6:	55 20       	and	r5, r5
     cb8:	39 f0       	breq	.+14     	; 0xcc8 <vfprintf+0x2ca>
     cba:	b7 01       	movw	r22, r14
     cbc:	80 e3       	ldi	r24, 0x30	; 48
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     cc4:	5a 94       	dec	r5
     cc6:	f7 cf       	rjmp	.-18     	; 0xcb6 <vfprintf+0x2b8>
     cc8:	97 fe       	sbrs	r9, 7
     cca:	4c c0       	rjmp	.+152    	; 0xd64 <vfprintf+0x366>
     ccc:	46 01       	movw	r8, r12
     cce:	d7 fe       	sbrs	r13, 7
     cd0:	02 c0       	rjmp	.+4      	; 0xcd6 <vfprintf+0x2d8>
     cd2:	81 2c       	mov	r8, r1
     cd4:	91 2c       	mov	r9, r1
     cd6:	c6 01       	movw	r24, r12
     cd8:	88 19       	sub	r24, r8
     cda:	99 09       	sbc	r25, r9
     cdc:	f3 01       	movw	r30, r6
     cde:	e8 0f       	add	r30, r24
     ce0:	f9 1f       	adc	r31, r25
     ce2:	fe 87       	std	Y+14, r31	; 0x0e
     ce4:	ed 87       	std	Y+13, r30	; 0x0d
     ce6:	96 01       	movw	r18, r12
     ce8:	24 19       	sub	r18, r4
     cea:	31 09       	sbc	r19, r1
     cec:	38 8b       	std	Y+16, r19	; 0x10
     cee:	2f 87       	std	Y+15, r18	; 0x0f
     cf0:	01 2f       	mov	r16, r17
     cf2:	10 e0       	ldi	r17, 0x00	; 0
     cf4:	11 95       	neg	r17
     cf6:	01 95       	neg	r16
     cf8:	11 09       	sbc	r17, r1
     cfa:	3f ef       	ldi	r19, 0xFF	; 255
     cfc:	83 16       	cp	r8, r19
     cfe:	93 06       	cpc	r9, r19
     d00:	29 f4       	brne	.+10     	; 0xd0c <vfprintf+0x30e>
     d02:	b7 01       	movw	r22, r14
     d04:	8e e2       	ldi	r24, 0x2E	; 46
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     d0c:	c8 14       	cp	r12, r8
     d0e:	d9 04       	cpc	r13, r9
     d10:	4c f0       	brlt	.+18     	; 0xd24 <vfprintf+0x326>
     d12:	8f 85       	ldd	r24, Y+15	; 0x0f
     d14:	98 89       	ldd	r25, Y+16	; 0x10
     d16:	88 15       	cp	r24, r8
     d18:	99 05       	cpc	r25, r9
     d1a:	24 f4       	brge	.+8      	; 0xd24 <vfprintf+0x326>
     d1c:	ed 85       	ldd	r30, Y+13	; 0x0d
     d1e:	fe 85       	ldd	r31, Y+14	; 0x0e
     d20:	81 81       	ldd	r24, Z+1	; 0x01
     d22:	01 c0       	rjmp	.+2      	; 0xd26 <vfprintf+0x328>
     d24:	80 e3       	ldi	r24, 0x30	; 48
     d26:	f1 e0       	ldi	r31, 0x01	; 1
     d28:	8f 1a       	sub	r8, r31
     d2a:	91 08       	sbc	r9, r1
     d2c:	2d 85       	ldd	r18, Y+13	; 0x0d
     d2e:	3e 85       	ldd	r19, Y+14	; 0x0e
     d30:	2f 5f       	subi	r18, 0xFF	; 255
     d32:	3f 4f       	sbci	r19, 0xFF	; 255
     d34:	3e 87       	std	Y+14, r19	; 0x0e
     d36:	2d 87       	std	Y+13, r18	; 0x0d
     d38:	80 16       	cp	r8, r16
     d3a:	91 06       	cpc	r9, r17
     d3c:	2c f0       	brlt	.+10     	; 0xd48 <vfprintf+0x34a>
     d3e:	b7 01       	movw	r22, r14
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     d46:	d9 cf       	rjmp	.-78     	; 0xcfa <vfprintf+0x2fc>
     d48:	c8 14       	cp	r12, r8
     d4a:	d9 04       	cpc	r13, r9
     d4c:	41 f4       	brne	.+16     	; 0xd5e <vfprintf+0x360>
     d4e:	9a 81       	ldd	r25, Y+2	; 0x02
     d50:	96 33       	cpi	r25, 0x36	; 54
     d52:	20 f4       	brcc	.+8      	; 0xd5c <vfprintf+0x35e>
     d54:	95 33       	cpi	r25, 0x35	; 53
     d56:	19 f4       	brne	.+6      	; 0xd5e <vfprintf+0x360>
     d58:	3c 85       	ldd	r19, Y+12	; 0x0c
     d5a:	34 ff       	sbrs	r19, 4
     d5c:	81 e3       	ldi	r24, 0x31	; 49
     d5e:	b7 01       	movw	r22, r14
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	4d c0       	rjmp	.+154    	; 0xdfe <vfprintf+0x400>
     d64:	8a 81       	ldd	r24, Y+2	; 0x02
     d66:	81 33       	cpi	r24, 0x31	; 49
     d68:	19 f0       	breq	.+6      	; 0xd70 <vfprintf+0x372>
     d6a:	9c 85       	ldd	r25, Y+12	; 0x0c
     d6c:	9f 7e       	andi	r25, 0xEF	; 239
     d6e:	9c 87       	std	Y+12, r25	; 0x0c
     d70:	b7 01       	movw	r22, r14
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     d78:	11 11       	cpse	r17, r1
     d7a:	05 c0       	rjmp	.+10     	; 0xd86 <vfprintf+0x388>
     d7c:	94 fc       	sbrc	r9, 4
     d7e:	18 c0       	rjmp	.+48     	; 0xdb0 <vfprintf+0x3b2>
     d80:	85 e6       	ldi	r24, 0x65	; 101
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	17 c0       	rjmp	.+46     	; 0xdb4 <vfprintf+0x3b6>
     d86:	b7 01       	movw	r22, r14
     d88:	8e e2       	ldi	r24, 0x2E	; 46
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     d90:	1e 5f       	subi	r17, 0xFE	; 254
     d92:	82 e0       	ldi	r24, 0x02	; 2
     d94:	01 e0       	ldi	r16, 0x01	; 1
     d96:	08 0f       	add	r16, r24
     d98:	f3 01       	movw	r30, r6
     d9a:	e8 0f       	add	r30, r24
     d9c:	f1 1d       	adc	r31, r1
     d9e:	80 81       	ld	r24, Z
     da0:	b7 01       	movw	r22, r14
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     da8:	80 2f       	mov	r24, r16
     daa:	01 13       	cpse	r16, r17
     dac:	f3 cf       	rjmp	.-26     	; 0xd94 <vfprintf+0x396>
     dae:	e6 cf       	rjmp	.-52     	; 0xd7c <vfprintf+0x37e>
     db0:	85 e4       	ldi	r24, 0x45	; 69
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	b7 01       	movw	r22, r14
     db6:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     dba:	d7 fc       	sbrc	r13, 7
     dbc:	06 c0       	rjmp	.+12     	; 0xdca <vfprintf+0x3cc>
     dbe:	c1 14       	cp	r12, r1
     dc0:	d1 04       	cpc	r13, r1
     dc2:	41 f4       	brne	.+16     	; 0xdd4 <vfprintf+0x3d6>
     dc4:	ec 85       	ldd	r30, Y+12	; 0x0c
     dc6:	e4 ff       	sbrs	r30, 4
     dc8:	05 c0       	rjmp	.+10     	; 0xdd4 <vfprintf+0x3d6>
     dca:	d1 94       	neg	r13
     dcc:	c1 94       	neg	r12
     dce:	d1 08       	sbc	r13, r1
     dd0:	8d e2       	ldi	r24, 0x2D	; 45
     dd2:	01 c0       	rjmp	.+2      	; 0xdd6 <vfprintf+0x3d8>
     dd4:	8b e2       	ldi	r24, 0x2B	; 43
     dd6:	b7 01       	movw	r22, r14
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <fputc>
     dde:	80 e3       	ldi	r24, 0x30	; 48
     de0:	2a e0       	ldi	r18, 0x0A	; 10
     de2:	c2 16       	cp	r12, r18
     de4:	d1 04       	cpc	r13, r1
     de6:	2c f0       	brlt	.+10     	; 0xdf2 <vfprintf+0x3f4>
     de8:	8f 5f       	subi	r24, 0xFF	; 255
     dea:	fa e0       	ldi	r31, 0x0A	; 10
     dec:	cf 1a       	sub	r12, r31
     dee:	d1 08       	sbc	r13, r1
     df0:	f7 cf       	rjmp	.-18     	; 0xde0 <vfprintf+0x3e2>
     df2:	b7 01       	movw	r22, r14
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	f8 d7       	rcall	.+4080   	; 0x1de8 <fputc>
     df8:	b7 01       	movw	r22, r14
     dfa:	c6 01       	movw	r24, r12
     dfc:	c0 96       	adiw	r24, 0x30	; 48
     dfe:	f4 d7       	rcall	.+4072   	; 0x1de8 <fputc>
     e00:	4a c1       	rjmp	.+660    	; 0x1096 <vfprintf+0x698>
     e02:	83 36       	cpi	r24, 0x63	; 99
     e04:	31 f0       	breq	.+12     	; 0xe12 <vfprintf+0x414>
     e06:	83 37       	cpi	r24, 0x73	; 115
     e08:	79 f0       	breq	.+30     	; 0xe28 <vfprintf+0x42a>
     e0a:	83 35       	cpi	r24, 0x53	; 83
     e0c:	09 f0       	breq	.+2      	; 0xe10 <vfprintf+0x412>
     e0e:	52 c0       	rjmp	.+164    	; 0xeb4 <vfprintf+0x4b6>
     e10:	1f c0       	rjmp	.+62     	; 0xe50 <vfprintf+0x452>
     e12:	56 01       	movw	r10, r12
     e14:	32 e0       	ldi	r19, 0x02	; 2
     e16:	a3 0e       	add	r10, r19
     e18:	b1 1c       	adc	r11, r1
     e1a:	f6 01       	movw	r30, r12
     e1c:	80 81       	ld	r24, Z
     e1e:	89 83       	std	Y+1, r24	; 0x01
     e20:	01 e0       	ldi	r16, 0x01	; 1
     e22:	10 e0       	ldi	r17, 0x00	; 0
     e24:	63 01       	movw	r12, r6
     e26:	11 c0       	rjmp	.+34     	; 0xe4a <vfprintf+0x44c>
     e28:	56 01       	movw	r10, r12
     e2a:	f2 e0       	ldi	r31, 0x02	; 2
     e2c:	af 0e       	add	r10, r31
     e2e:	b1 1c       	adc	r11, r1
     e30:	f6 01       	movw	r30, r12
     e32:	c0 80       	ld	r12, Z
     e34:	d1 80       	ldd	r13, Z+1	; 0x01
     e36:	96 fe       	sbrs	r9, 6
     e38:	03 c0       	rjmp	.+6      	; 0xe40 <vfprintf+0x442>
     e3a:	61 2f       	mov	r22, r17
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <vfprintf+0x446>
     e40:	6f ef       	ldi	r22, 0xFF	; 255
     e42:	7f ef       	ldi	r23, 0xFF	; 255
     e44:	c6 01       	movw	r24, r12
     e46:	87 d7       	rcall	.+3854   	; 0x1d56 <strnlen>
     e48:	8c 01       	movw	r16, r24
     e4a:	f9 2d       	mov	r31, r9
     e4c:	ff 77       	andi	r31, 0x7F	; 127
     e4e:	13 c0       	rjmp	.+38     	; 0xe76 <vfprintf+0x478>
     e50:	56 01       	movw	r10, r12
     e52:	22 e0       	ldi	r18, 0x02	; 2
     e54:	a2 0e       	add	r10, r18
     e56:	b1 1c       	adc	r11, r1
     e58:	f6 01       	movw	r30, r12
     e5a:	c0 80       	ld	r12, Z
     e5c:	d1 80       	ldd	r13, Z+1	; 0x01
     e5e:	96 fe       	sbrs	r9, 6
     e60:	03 c0       	rjmp	.+6      	; 0xe68 <vfprintf+0x46a>
     e62:	61 2f       	mov	r22, r17
     e64:	70 e0       	ldi	r23, 0x00	; 0
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <vfprintf+0x46e>
     e68:	6f ef       	ldi	r22, 0xFF	; 255
     e6a:	7f ef       	ldi	r23, 0xFF	; 255
     e6c:	c6 01       	movw	r24, r12
     e6e:	68 d7       	rcall	.+3792   	; 0x1d40 <strnlen_P>
     e70:	8c 01       	movw	r16, r24
     e72:	f9 2d       	mov	r31, r9
     e74:	f0 68       	ori	r31, 0x80	; 128
     e76:	9f 2e       	mov	r9, r31
     e78:	f3 fd       	sbrc	r31, 3
     e7a:	18 c0       	rjmp	.+48     	; 0xeac <vfprintf+0x4ae>
     e7c:	85 2d       	mov	r24, r5
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	08 17       	cp	r16, r24
     e82:	19 07       	cpc	r17, r25
     e84:	98 f4       	brcc	.+38     	; 0xeac <vfprintf+0x4ae>
     e86:	b7 01       	movw	r22, r14
     e88:	80 e2       	ldi	r24, 0x20	; 32
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	ad d7       	rcall	.+3930   	; 0x1de8 <fputc>
     e8e:	5a 94       	dec	r5
     e90:	f5 cf       	rjmp	.-22     	; 0xe7c <vfprintf+0x47e>
     e92:	f6 01       	movw	r30, r12
     e94:	97 fc       	sbrc	r9, 7
     e96:	85 91       	lpm	r24, Z+
     e98:	97 fe       	sbrs	r9, 7
     e9a:	81 91       	ld	r24, Z+
     e9c:	6f 01       	movw	r12, r30
     e9e:	b7 01       	movw	r22, r14
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	a2 d7       	rcall	.+3908   	; 0x1de8 <fputc>
     ea4:	51 10       	cpse	r5, r1
     ea6:	5a 94       	dec	r5
     ea8:	01 50       	subi	r16, 0x01	; 1
     eaa:	11 09       	sbc	r17, r1
     eac:	01 15       	cp	r16, r1
     eae:	11 05       	cpc	r17, r1
     eb0:	81 f7       	brne	.-32     	; 0xe92 <vfprintf+0x494>
     eb2:	f1 c0       	rjmp	.+482    	; 0x1096 <vfprintf+0x698>
     eb4:	84 36       	cpi	r24, 0x64	; 100
     eb6:	11 f0       	breq	.+4      	; 0xebc <vfprintf+0x4be>
     eb8:	89 36       	cpi	r24, 0x69	; 105
     eba:	61 f5       	brne	.+88     	; 0xf14 <vfprintf+0x516>
     ebc:	56 01       	movw	r10, r12
     ebe:	97 fe       	sbrs	r9, 7
     ec0:	09 c0       	rjmp	.+18     	; 0xed4 <vfprintf+0x4d6>
     ec2:	24 e0       	ldi	r18, 0x04	; 4
     ec4:	a2 0e       	add	r10, r18
     ec6:	b1 1c       	adc	r11, r1
     ec8:	f6 01       	movw	r30, r12
     eca:	60 81       	ld	r22, Z
     ecc:	71 81       	ldd	r23, Z+1	; 0x01
     ece:	82 81       	ldd	r24, Z+2	; 0x02
     ed0:	93 81       	ldd	r25, Z+3	; 0x03
     ed2:	0a c0       	rjmp	.+20     	; 0xee8 <vfprintf+0x4ea>
     ed4:	f2 e0       	ldi	r31, 0x02	; 2
     ed6:	af 0e       	add	r10, r31
     ed8:	b1 1c       	adc	r11, r1
     eda:	f6 01       	movw	r30, r12
     edc:	60 81       	ld	r22, Z
     ede:	71 81       	ldd	r23, Z+1	; 0x01
     ee0:	07 2e       	mov	r0, r23
     ee2:	00 0c       	add	r0, r0
     ee4:	88 0b       	sbc	r24, r24
     ee6:	99 0b       	sbc	r25, r25
     ee8:	f9 2d       	mov	r31, r9
     eea:	ff 76       	andi	r31, 0x6F	; 111
     eec:	9f 2e       	mov	r9, r31
     eee:	97 ff       	sbrs	r25, 7
     ef0:	09 c0       	rjmp	.+18     	; 0xf04 <vfprintf+0x506>
     ef2:	90 95       	com	r25
     ef4:	80 95       	com	r24
     ef6:	70 95       	com	r23
     ef8:	61 95       	neg	r22
     efa:	7f 4f       	sbci	r23, 0xFF	; 255
     efc:	8f 4f       	sbci	r24, 0xFF	; 255
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	f0 68       	ori	r31, 0x80	; 128
     f02:	9f 2e       	mov	r9, r31
     f04:	2a e0       	ldi	r18, 0x0A	; 10
     f06:	30 e0       	ldi	r19, 0x00	; 0
     f08:	a3 01       	movw	r20, r6
     f0a:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <__ultoa_invert>
     f0e:	c8 2e       	mov	r12, r24
     f10:	c6 18       	sub	r12, r6
     f12:	3e c0       	rjmp	.+124    	; 0xf90 <vfprintf+0x592>
     f14:	09 2d       	mov	r16, r9
     f16:	85 37       	cpi	r24, 0x75	; 117
     f18:	21 f4       	brne	.+8      	; 0xf22 <vfprintf+0x524>
     f1a:	0f 7e       	andi	r16, 0xEF	; 239
     f1c:	2a e0       	ldi	r18, 0x0A	; 10
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	1d c0       	rjmp	.+58     	; 0xf5c <vfprintf+0x55e>
     f22:	09 7f       	andi	r16, 0xF9	; 249
     f24:	8f 36       	cpi	r24, 0x6F	; 111
     f26:	91 f0       	breq	.+36     	; 0xf4c <vfprintf+0x54e>
     f28:	18 f4       	brcc	.+6      	; 0xf30 <vfprintf+0x532>
     f2a:	88 35       	cpi	r24, 0x58	; 88
     f2c:	59 f0       	breq	.+22     	; 0xf44 <vfprintf+0x546>
     f2e:	bc c0       	rjmp	.+376    	; 0x10a8 <vfprintf+0x6aa>
     f30:	80 37       	cpi	r24, 0x70	; 112
     f32:	19 f0       	breq	.+6      	; 0xf3a <vfprintf+0x53c>
     f34:	88 37       	cpi	r24, 0x78	; 120
     f36:	11 f0       	breq	.+4      	; 0xf3c <vfprintf+0x53e>
     f38:	b7 c0       	rjmp	.+366    	; 0x10a8 <vfprintf+0x6aa>
     f3a:	00 61       	ori	r16, 0x10	; 16
     f3c:	04 ff       	sbrs	r16, 4
     f3e:	09 c0       	rjmp	.+18     	; 0xf52 <vfprintf+0x554>
     f40:	04 60       	ori	r16, 0x04	; 4
     f42:	07 c0       	rjmp	.+14     	; 0xf52 <vfprintf+0x554>
     f44:	94 fe       	sbrs	r9, 4
     f46:	08 c0       	rjmp	.+16     	; 0xf58 <vfprintf+0x55a>
     f48:	06 60       	ori	r16, 0x06	; 6
     f4a:	06 c0       	rjmp	.+12     	; 0xf58 <vfprintf+0x55a>
     f4c:	28 e0       	ldi	r18, 0x08	; 8
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	05 c0       	rjmp	.+10     	; 0xf5c <vfprintf+0x55e>
     f52:	20 e1       	ldi	r18, 0x10	; 16
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x55e>
     f58:	20 e1       	ldi	r18, 0x10	; 16
     f5a:	32 e0       	ldi	r19, 0x02	; 2
     f5c:	56 01       	movw	r10, r12
     f5e:	07 ff       	sbrs	r16, 7
     f60:	09 c0       	rjmp	.+18     	; 0xf74 <vfprintf+0x576>
     f62:	84 e0       	ldi	r24, 0x04	; 4
     f64:	a8 0e       	add	r10, r24
     f66:	b1 1c       	adc	r11, r1
     f68:	f6 01       	movw	r30, r12
     f6a:	60 81       	ld	r22, Z
     f6c:	71 81       	ldd	r23, Z+1	; 0x01
     f6e:	82 81       	ldd	r24, Z+2	; 0x02
     f70:	93 81       	ldd	r25, Z+3	; 0x03
     f72:	08 c0       	rjmp	.+16     	; 0xf84 <vfprintf+0x586>
     f74:	f2 e0       	ldi	r31, 0x02	; 2
     f76:	af 0e       	add	r10, r31
     f78:	b1 1c       	adc	r11, r1
     f7a:	f6 01       	movw	r30, r12
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	a3 01       	movw	r20, r6
     f86:	c9 d7       	rcall	.+3986   	; 0x1f1a <__ultoa_invert>
     f88:	c8 2e       	mov	r12, r24
     f8a:	c6 18       	sub	r12, r6
     f8c:	0f 77       	andi	r16, 0x7F	; 127
     f8e:	90 2e       	mov	r9, r16
     f90:	96 fe       	sbrs	r9, 6
     f92:	0b c0       	rjmp	.+22     	; 0xfaa <vfprintf+0x5ac>
     f94:	09 2d       	mov	r16, r9
     f96:	0e 7f       	andi	r16, 0xFE	; 254
     f98:	c1 16       	cp	r12, r17
     f9a:	50 f4       	brcc	.+20     	; 0xfb0 <vfprintf+0x5b2>
     f9c:	94 fe       	sbrs	r9, 4
     f9e:	0a c0       	rjmp	.+20     	; 0xfb4 <vfprintf+0x5b6>
     fa0:	92 fc       	sbrc	r9, 2
     fa2:	08 c0       	rjmp	.+16     	; 0xfb4 <vfprintf+0x5b6>
     fa4:	09 2d       	mov	r16, r9
     fa6:	0e 7e       	andi	r16, 0xEE	; 238
     fa8:	05 c0       	rjmp	.+10     	; 0xfb4 <vfprintf+0x5b6>
     faa:	dc 2c       	mov	r13, r12
     fac:	09 2d       	mov	r16, r9
     fae:	03 c0       	rjmp	.+6      	; 0xfb6 <vfprintf+0x5b8>
     fb0:	dc 2c       	mov	r13, r12
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <vfprintf+0x5b8>
     fb4:	d1 2e       	mov	r13, r17
     fb6:	04 ff       	sbrs	r16, 4
     fb8:	0d c0       	rjmp	.+26     	; 0xfd4 <vfprintf+0x5d6>
     fba:	fe 01       	movw	r30, r28
     fbc:	ec 0d       	add	r30, r12
     fbe:	f1 1d       	adc	r31, r1
     fc0:	80 81       	ld	r24, Z
     fc2:	80 33       	cpi	r24, 0x30	; 48
     fc4:	11 f4       	brne	.+4      	; 0xfca <vfprintf+0x5cc>
     fc6:	09 7e       	andi	r16, 0xE9	; 233
     fc8:	09 c0       	rjmp	.+18     	; 0xfdc <vfprintf+0x5de>
     fca:	02 ff       	sbrs	r16, 2
     fcc:	06 c0       	rjmp	.+12     	; 0xfda <vfprintf+0x5dc>
     fce:	d3 94       	inc	r13
     fd0:	d3 94       	inc	r13
     fd2:	04 c0       	rjmp	.+8      	; 0xfdc <vfprintf+0x5de>
     fd4:	80 2f       	mov	r24, r16
     fd6:	86 78       	andi	r24, 0x86	; 134
     fd8:	09 f0       	breq	.+2      	; 0xfdc <vfprintf+0x5de>
     fda:	d3 94       	inc	r13
     fdc:	03 fd       	sbrc	r16, 3
     fde:	10 c0       	rjmp	.+32     	; 0x1000 <vfprintf+0x602>
     fe0:	00 ff       	sbrs	r16, 0
     fe2:	06 c0       	rjmp	.+12     	; 0xff0 <vfprintf+0x5f2>
     fe4:	1c 2d       	mov	r17, r12
     fe6:	d5 14       	cp	r13, r5
     fe8:	78 f4       	brcc	.+30     	; 0x1008 <vfprintf+0x60a>
     fea:	15 0d       	add	r17, r5
     fec:	1d 19       	sub	r17, r13
     fee:	0c c0       	rjmp	.+24     	; 0x1008 <vfprintf+0x60a>
     ff0:	d5 14       	cp	r13, r5
     ff2:	50 f4       	brcc	.+20     	; 0x1008 <vfprintf+0x60a>
     ff4:	b7 01       	movw	r22, r14
     ff6:	80 e2       	ldi	r24, 0x20	; 32
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	f6 d6       	rcall	.+3564   	; 0x1de8 <fputc>
     ffc:	d3 94       	inc	r13
     ffe:	f8 cf       	rjmp	.-16     	; 0xff0 <vfprintf+0x5f2>
    1000:	d5 14       	cp	r13, r5
    1002:	10 f4       	brcc	.+4      	; 0x1008 <vfprintf+0x60a>
    1004:	5d 18       	sub	r5, r13
    1006:	01 c0       	rjmp	.+2      	; 0x100a <vfprintf+0x60c>
    1008:	51 2c       	mov	r5, r1
    100a:	04 ff       	sbrs	r16, 4
    100c:	0f c0       	rjmp	.+30     	; 0x102c <vfprintf+0x62e>
    100e:	b7 01       	movw	r22, r14
    1010:	80 e3       	ldi	r24, 0x30	; 48
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	e9 d6       	rcall	.+3538   	; 0x1de8 <fputc>
    1016:	02 ff       	sbrs	r16, 2
    1018:	16 c0       	rjmp	.+44     	; 0x1046 <vfprintf+0x648>
    101a:	01 fd       	sbrc	r16, 1
    101c:	03 c0       	rjmp	.+6      	; 0x1024 <vfprintf+0x626>
    101e:	88 e7       	ldi	r24, 0x78	; 120
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	02 c0       	rjmp	.+4      	; 0x1028 <vfprintf+0x62a>
    1024:	88 e5       	ldi	r24, 0x58	; 88
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	b7 01       	movw	r22, r14
    102a:	0c c0       	rjmp	.+24     	; 0x1044 <vfprintf+0x646>
    102c:	80 2f       	mov	r24, r16
    102e:	86 78       	andi	r24, 0x86	; 134
    1030:	51 f0       	breq	.+20     	; 0x1046 <vfprintf+0x648>
    1032:	01 ff       	sbrs	r16, 1
    1034:	02 c0       	rjmp	.+4      	; 0x103a <vfprintf+0x63c>
    1036:	8b e2       	ldi	r24, 0x2B	; 43
    1038:	01 c0       	rjmp	.+2      	; 0x103c <vfprintf+0x63e>
    103a:	80 e2       	ldi	r24, 0x20	; 32
    103c:	07 fd       	sbrc	r16, 7
    103e:	8d e2       	ldi	r24, 0x2D	; 45
    1040:	b7 01       	movw	r22, r14
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	d1 d6       	rcall	.+3490   	; 0x1de8 <fputc>
    1046:	c1 16       	cp	r12, r17
    1048:	30 f4       	brcc	.+12     	; 0x1056 <vfprintf+0x658>
    104a:	b7 01       	movw	r22, r14
    104c:	80 e3       	ldi	r24, 0x30	; 48
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	cb d6       	rcall	.+3478   	; 0x1de8 <fputc>
    1052:	11 50       	subi	r17, 0x01	; 1
    1054:	f8 cf       	rjmp	.-16     	; 0x1046 <vfprintf+0x648>
    1056:	ca 94       	dec	r12
    1058:	f3 01       	movw	r30, r6
    105a:	ec 0d       	add	r30, r12
    105c:	f1 1d       	adc	r31, r1
    105e:	80 81       	ld	r24, Z
    1060:	b7 01       	movw	r22, r14
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	c1 d6       	rcall	.+3458   	; 0x1de8 <fputc>
    1066:	c1 10       	cpse	r12, r1
    1068:	f6 cf       	rjmp	.-20     	; 0x1056 <vfprintf+0x658>
    106a:	15 c0       	rjmp	.+42     	; 0x1096 <vfprintf+0x698>
    106c:	f4 e0       	ldi	r31, 0x04	; 4
    106e:	f5 15       	cp	r31, r5
    1070:	50 f5       	brcc	.+84     	; 0x10c6 <vfprintf+0x6c8>
    1072:	84 e0       	ldi	r24, 0x04	; 4
    1074:	58 1a       	sub	r5, r24
    1076:	93 fe       	sbrs	r9, 3
    1078:	1e c0       	rjmp	.+60     	; 0x10b6 <vfprintf+0x6b8>
    107a:	01 11       	cpse	r16, r1
    107c:	25 c0       	rjmp	.+74     	; 0x10c8 <vfprintf+0x6ca>
    107e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1080:	23 ff       	sbrs	r18, 3
    1082:	27 c0       	rjmp	.+78     	; 0x10d2 <vfprintf+0x6d4>
    1084:	04 ee       	ldi	r16, 0xE4	; 228
    1086:	10 e0       	ldi	r17, 0x00	; 0
    1088:	39 2d       	mov	r19, r9
    108a:	30 71       	andi	r19, 0x10	; 16
    108c:	93 2e       	mov	r9, r19
    108e:	f8 01       	movw	r30, r16
    1090:	84 91       	lpm	r24, Z
    1092:	81 11       	cpse	r24, r1
    1094:	21 c0       	rjmp	.+66     	; 0x10d8 <vfprintf+0x6da>
    1096:	55 20       	and	r5, r5
    1098:	09 f4       	brne	.+2      	; 0x109c <vfprintf+0x69e>
    109a:	f1 cc       	rjmp	.-1566   	; 0xa7e <vfprintf+0x80>
    109c:	b7 01       	movw	r22, r14
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a2 d6       	rcall	.+3396   	; 0x1de8 <fputc>
    10a4:	5a 94       	dec	r5
    10a6:	f7 cf       	rjmp	.-18     	; 0x1096 <vfprintf+0x698>
    10a8:	f7 01       	movw	r30, r14
    10aa:	86 81       	ldd	r24, Z+6	; 0x06
    10ac:	97 81       	ldd	r25, Z+7	; 0x07
    10ae:	23 c0       	rjmp	.+70     	; 0x10f6 <vfprintf+0x6f8>
    10b0:	8f ef       	ldi	r24, 0xFF	; 255
    10b2:	9f ef       	ldi	r25, 0xFF	; 255
    10b4:	20 c0       	rjmp	.+64     	; 0x10f6 <vfprintf+0x6f8>
    10b6:	b7 01       	movw	r22, r14
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	95 d6       	rcall	.+3370   	; 0x1de8 <fputc>
    10be:	5a 94       	dec	r5
    10c0:	51 10       	cpse	r5, r1
    10c2:	f9 cf       	rjmp	.-14     	; 0x10b6 <vfprintf+0x6b8>
    10c4:	da cf       	rjmp	.-76     	; 0x107a <vfprintf+0x67c>
    10c6:	51 2c       	mov	r5, r1
    10c8:	b7 01       	movw	r22, r14
    10ca:	80 2f       	mov	r24, r16
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	8c d6       	rcall	.+3352   	; 0x1de8 <fputc>
    10d0:	d6 cf       	rjmp	.-84     	; 0x107e <vfprintf+0x680>
    10d2:	08 ee       	ldi	r16, 0xE8	; 232
    10d4:	10 e0       	ldi	r17, 0x00	; 0
    10d6:	d8 cf       	rjmp	.-80     	; 0x1088 <vfprintf+0x68a>
    10d8:	91 10       	cpse	r9, r1
    10da:	80 52       	subi	r24, 0x20	; 32
    10dc:	b7 01       	movw	r22, r14
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	83 d6       	rcall	.+3334   	; 0x1de8 <fputc>
    10e2:	0f 5f       	subi	r16, 0xFF	; 255
    10e4:	1f 4f       	sbci	r17, 0xFF	; 255
    10e6:	d3 cf       	rjmp	.-90     	; 0x108e <vfprintf+0x690>
    10e8:	23 e0       	ldi	r18, 0x03	; 3
    10ea:	25 15       	cp	r18, r5
    10ec:	10 f4       	brcc	.+4      	; 0x10f2 <vfprintf+0x6f4>
    10ee:	83 e0       	ldi	r24, 0x03	; 3
    10f0:	c1 cf       	rjmp	.-126    	; 0x1074 <vfprintf+0x676>
    10f2:	51 2c       	mov	r5, r1
    10f4:	c4 cf       	rjmp	.-120    	; 0x107e <vfprintf+0x680>
    10f6:	60 96       	adiw	r28, 0x10	; 16
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	f8 94       	cli
    10fc:	de bf       	out	0x3e, r29	; 62
    10fe:	0f be       	out	0x3f, r0	; 63
    1100:	cd bf       	out	0x3d, r28	; 61
    1102:	df 91       	pop	r29
    1104:	cf 91       	pop	r28
    1106:	1f 91       	pop	r17
    1108:	0f 91       	pop	r16
    110a:	ff 90       	pop	r15
    110c:	ef 90       	pop	r14
    110e:	df 90       	pop	r13
    1110:	cf 90       	pop	r12
    1112:	bf 90       	pop	r11
    1114:	af 90       	pop	r10
    1116:	9f 90       	pop	r9
    1118:	8f 90       	pop	r8
    111a:	7f 90       	pop	r7
    111c:	6f 90       	pop	r6
    111e:	5f 90       	pop	r5
    1120:	4f 90       	pop	r4
    1122:	3f 90       	pop	r3
    1124:	2f 90       	pop	r2
    1126:	08 95       	ret

00001128 <putval>:
    1128:	20 fd       	sbrc	r18, 0
    112a:	09 c0       	rjmp	.+18     	; 0x113e <putval+0x16>
    112c:	fc 01       	movw	r30, r24
    112e:	23 fd       	sbrc	r18, 3
    1130:	05 c0       	rjmp	.+10     	; 0x113c <putval+0x14>
    1132:	22 ff       	sbrs	r18, 2
    1134:	02 c0       	rjmp	.+4      	; 0x113a <putval+0x12>
    1136:	73 83       	std	Z+3, r23	; 0x03
    1138:	62 83       	std	Z+2, r22	; 0x02
    113a:	51 83       	std	Z+1, r21	; 0x01
    113c:	40 83       	st	Z, r20
    113e:	08 95       	ret

00001140 <mulacc>:
    1140:	44 fd       	sbrc	r20, 4
    1142:	17 c0       	rjmp	.+46     	; 0x1172 <mulacc+0x32>
    1144:	46 fd       	sbrc	r20, 6
    1146:	17 c0       	rjmp	.+46     	; 0x1176 <mulacc+0x36>
    1148:	ab 01       	movw	r20, r22
    114a:	bc 01       	movw	r22, r24
    114c:	da 01       	movw	r26, r20
    114e:	fb 01       	movw	r30, r22
    1150:	aa 0f       	add	r26, r26
    1152:	bb 1f       	adc	r27, r27
    1154:	ee 1f       	adc	r30, r30
    1156:	ff 1f       	adc	r31, r31
    1158:	10 94       	com	r1
    115a:	d1 f7       	brne	.-12     	; 0x1150 <mulacc+0x10>
    115c:	4a 0f       	add	r20, r26
    115e:	5b 1f       	adc	r21, r27
    1160:	6e 1f       	adc	r22, r30
    1162:	7f 1f       	adc	r23, r31
    1164:	cb 01       	movw	r24, r22
    1166:	ba 01       	movw	r22, r20
    1168:	66 0f       	add	r22, r22
    116a:	77 1f       	adc	r23, r23
    116c:	88 1f       	adc	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	09 c0       	rjmp	.+18     	; 0x1184 <mulacc+0x44>
    1172:	33 e0       	ldi	r19, 0x03	; 3
    1174:	01 c0       	rjmp	.+2      	; 0x1178 <mulacc+0x38>
    1176:	34 e0       	ldi	r19, 0x04	; 4
    1178:	66 0f       	add	r22, r22
    117a:	77 1f       	adc	r23, r23
    117c:	88 1f       	adc	r24, r24
    117e:	99 1f       	adc	r25, r25
    1180:	31 50       	subi	r19, 0x01	; 1
    1182:	d1 f7       	brne	.-12     	; 0x1178 <mulacc+0x38>
    1184:	62 0f       	add	r22, r18
    1186:	71 1d       	adc	r23, r1
    1188:	81 1d       	adc	r24, r1
    118a:	91 1d       	adc	r25, r1
    118c:	08 95       	ret

0000118e <skip_spaces>:
    118e:	0f 93       	push	r16
    1190:	1f 93       	push	r17
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	8c 01       	movw	r16, r24
    1198:	c8 01       	movw	r24, r16
    119a:	e8 d5       	rcall	.+3024   	; 0x1d6c <fgetc>
    119c:	ec 01       	movw	r28, r24
    119e:	97 fd       	sbrc	r25, 7
    11a0:	06 c0       	rjmp	.+12     	; 0x11ae <skip_spaces+0x20>
    11a2:	b3 d5       	rcall	.+2918   	; 0x1d0a <isspace>
    11a4:	89 2b       	or	r24, r25
    11a6:	c1 f7       	brne	.-16     	; 0x1198 <skip_spaces+0xa>
    11a8:	b8 01       	movw	r22, r16
    11aa:	ce 01       	movw	r24, r28
    11ac:	9d d6       	rcall	.+3386   	; 0x1ee8 <ungetc>
    11ae:	ce 01       	movw	r24, r28
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	1f 91       	pop	r17
    11b6:	0f 91       	pop	r16
    11b8:	08 95       	ret

000011ba <conv_int>:
    11ba:	8f 92       	push	r8
    11bc:	9f 92       	push	r9
    11be:	af 92       	push	r10
    11c0:	bf 92       	push	r11
    11c2:	cf 92       	push	r12
    11c4:	df 92       	push	r13
    11c6:	ef 92       	push	r14
    11c8:	ff 92       	push	r15
    11ca:	0f 93       	push	r16
    11cc:	1f 93       	push	r17
    11ce:	cf 93       	push	r28
    11d0:	df 93       	push	r29
    11d2:	7c 01       	movw	r14, r24
    11d4:	8b 01       	movw	r16, r22
    11d6:	6a 01       	movw	r12, r20
    11d8:	d2 2f       	mov	r29, r18
    11da:	c8 d5       	rcall	.+2960   	; 0x1d6c <fgetc>
    11dc:	9c 01       	movw	r18, r24
    11de:	33 27       	eor	r19, r19
    11e0:	2b 32       	cpi	r18, 0x2B	; 43
    11e2:	31 05       	cpc	r19, r1
    11e4:	21 f0       	breq	.+8      	; 0x11ee <conv_int+0x34>
    11e6:	2d 32       	cpi	r18, 0x2D	; 45
    11e8:	31 05       	cpc	r19, r1
    11ea:	51 f4       	brne	.+20     	; 0x1200 <conv_int+0x46>
    11ec:	d0 68       	ori	r29, 0x80	; 128
    11ee:	01 50       	subi	r16, 0x01	; 1
    11f0:	11 09       	sbc	r17, r1
    11f2:	11 f4       	brne	.+4      	; 0x11f8 <conv_int+0x3e>
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	64 c0       	rjmp	.+200    	; 0x12c0 <conv_int+0x106>
    11f8:	c7 01       	movw	r24, r14
    11fa:	b8 d5       	rcall	.+2928   	; 0x1d6c <fgetc>
    11fc:	97 fd       	sbrc	r25, 7
    11fe:	fa cf       	rjmp	.-12     	; 0x11f4 <conv_int+0x3a>
    1200:	cd 2f       	mov	r28, r29
    1202:	cd 7f       	andi	r28, 0xFD	; 253
    1204:	2d 2f       	mov	r18, r29
    1206:	20 73       	andi	r18, 0x30	; 48
    1208:	09 f5       	brne	.+66     	; 0x124c <conv_int+0x92>
    120a:	80 33       	cpi	r24, 0x30	; 48
    120c:	f9 f4       	brne	.+62     	; 0x124c <conv_int+0x92>
    120e:	58 01       	movw	r10, r16
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	a8 1a       	sub	r10, r24
    1214:	b1 08       	sbc	r11, r1
    1216:	09 f4       	brne	.+2      	; 0x121a <conv_int+0x60>
    1218:	40 c0       	rjmp	.+128    	; 0x129a <conv_int+0xe0>
    121a:	c7 01       	movw	r24, r14
    121c:	a7 d5       	rcall	.+2894   	; 0x1d6c <fgetc>
    121e:	97 fd       	sbrc	r25, 7
    1220:	3c c0       	rjmp	.+120    	; 0x129a <conv_int+0xe0>
    1222:	9c 01       	movw	r18, r24
    1224:	2f 7d       	andi	r18, 0xDF	; 223
    1226:	33 27       	eor	r19, r19
    1228:	28 35       	cpi	r18, 0x58	; 88
    122a:	31 05       	cpc	r19, r1
    122c:	49 f4       	brne	.+18     	; 0x1240 <conv_int+0x86>
    122e:	c2 64       	ori	r28, 0x42	; 66
    1230:	02 50       	subi	r16, 0x02	; 2
    1232:	11 09       	sbc	r17, r1
    1234:	91 f1       	breq	.+100    	; 0x129a <conv_int+0xe0>
    1236:	c7 01       	movw	r24, r14
    1238:	99 d5       	rcall	.+2866   	; 0x1d6c <fgetc>
    123a:	97 ff       	sbrs	r25, 7
    123c:	07 c0       	rjmp	.+14     	; 0x124c <conv_int+0x92>
    123e:	2d c0       	rjmp	.+90     	; 0x129a <conv_int+0xe0>
    1240:	d6 ff       	sbrs	r29, 6
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <conv_int+0x8e>
    1244:	c2 60       	ori	r28, 0x02	; 2
    1246:	01 c0       	rjmp	.+2      	; 0x124a <conv_int+0x90>
    1248:	c2 61       	ori	r28, 0x12	; 18
    124a:	85 01       	movw	r16, r10
    124c:	81 2c       	mov	r8, r1
    124e:	91 2c       	mov	r9, r1
    1250:	54 01       	movw	r10, r8
    1252:	20 ed       	ldi	r18, 0xD0	; 208
    1254:	28 0f       	add	r18, r24
    1256:	28 30       	cpi	r18, 0x08	; 8
    1258:	78 f0       	brcs	.+30     	; 0x1278 <conv_int+0xbe>
    125a:	c4 ff       	sbrs	r28, 4
    125c:	03 c0       	rjmp	.+6      	; 0x1264 <conv_int+0xaa>
    125e:	b7 01       	movw	r22, r14
    1260:	43 d6       	rcall	.+3206   	; 0x1ee8 <ungetc>
    1262:	18 c0       	rjmp	.+48     	; 0x1294 <conv_int+0xda>
    1264:	2a 30       	cpi	r18, 0x0A	; 10
    1266:	40 f0       	brcs	.+16     	; 0x1278 <conv_int+0xbe>
    1268:	c6 ff       	sbrs	r28, 6
    126a:	f9 cf       	rjmp	.-14     	; 0x125e <conv_int+0xa4>
    126c:	2f 7d       	andi	r18, 0xDF	; 223
    126e:	3f ee       	ldi	r19, 0xEF	; 239
    1270:	32 0f       	add	r19, r18
    1272:	36 30       	cpi	r19, 0x06	; 6
    1274:	a0 f7       	brcc	.-24     	; 0x125e <conv_int+0xa4>
    1276:	27 50       	subi	r18, 0x07	; 7
    1278:	4c 2f       	mov	r20, r28
    127a:	c5 01       	movw	r24, r10
    127c:	b4 01       	movw	r22, r8
    127e:	60 df       	rcall	.-320    	; 0x1140 <mulacc>
    1280:	4b 01       	movw	r8, r22
    1282:	5c 01       	movw	r10, r24
    1284:	c2 60       	ori	r28, 0x02	; 2
    1286:	01 50       	subi	r16, 0x01	; 1
    1288:	11 09       	sbc	r17, r1
    128a:	51 f0       	breq	.+20     	; 0x12a0 <conv_int+0xe6>
    128c:	c7 01       	movw	r24, r14
    128e:	6e d5       	rcall	.+2780   	; 0x1d6c <fgetc>
    1290:	97 ff       	sbrs	r25, 7
    1292:	df cf       	rjmp	.-66     	; 0x1252 <conv_int+0x98>
    1294:	c1 fd       	sbrc	r28, 1
    1296:	04 c0       	rjmp	.+8      	; 0x12a0 <conv_int+0xe6>
    1298:	ad cf       	rjmp	.-166    	; 0x11f4 <conv_int+0x3a>
    129a:	81 2c       	mov	r8, r1
    129c:	91 2c       	mov	r9, r1
    129e:	54 01       	movw	r10, r8
    12a0:	c7 ff       	sbrs	r28, 7
    12a2:	08 c0       	rjmp	.+16     	; 0x12b4 <conv_int+0xfa>
    12a4:	b0 94       	com	r11
    12a6:	a0 94       	com	r10
    12a8:	90 94       	com	r9
    12aa:	80 94       	com	r8
    12ac:	81 1c       	adc	r8, r1
    12ae:	91 1c       	adc	r9, r1
    12b0:	a1 1c       	adc	r10, r1
    12b2:	b1 1c       	adc	r11, r1
    12b4:	2c 2f       	mov	r18, r28
    12b6:	b5 01       	movw	r22, r10
    12b8:	a4 01       	movw	r20, r8
    12ba:	c6 01       	movw	r24, r12
    12bc:	35 df       	rcall	.-406    	; 0x1128 <putval>
    12be:	81 e0       	ldi	r24, 0x01	; 1
    12c0:	df 91       	pop	r29
    12c2:	cf 91       	pop	r28
    12c4:	1f 91       	pop	r17
    12c6:	0f 91       	pop	r16
    12c8:	ff 90       	pop	r15
    12ca:	ef 90       	pop	r14
    12cc:	df 90       	pop	r13
    12ce:	cf 90       	pop	r12
    12d0:	bf 90       	pop	r11
    12d2:	af 90       	pop	r10
    12d4:	9f 90       	pop	r9
    12d6:	8f 90       	pop	r8
    12d8:	08 95       	ret

000012da <conv_brk>:
    12da:	4f 92       	push	r4
    12dc:	5f 92       	push	r5
    12de:	6f 92       	push	r6
    12e0:	7f 92       	push	r7
    12e2:	8f 92       	push	r8
    12e4:	9f 92       	push	r9
    12e6:	af 92       	push	r10
    12e8:	bf 92       	push	r11
    12ea:	cf 92       	push	r12
    12ec:	df 92       	push	r13
    12ee:	ef 92       	push	r14
    12f0:	ff 92       	push	r15
    12f2:	0f 93       	push	r16
    12f4:	1f 93       	push	r17
    12f6:	cf 93       	push	r28
    12f8:	df 93       	push	r29
    12fa:	cd b7       	in	r28, 0x3d	; 61
    12fc:	de b7       	in	r29, 0x3e	; 62
    12fe:	a0 97       	sbiw	r28, 0x20	; 32
    1300:	0f b6       	in	r0, 0x3f	; 63
    1302:	f8 94       	cli
    1304:	de bf       	out	0x3e, r29	; 62
    1306:	0f be       	out	0x3f, r0	; 63
    1308:	cd bf       	out	0x3d, r28	; 61
    130a:	5c 01       	movw	r10, r24
    130c:	4b 01       	movw	r8, r22
    130e:	7a 01       	movw	r14, r20
    1310:	8e 01       	movw	r16, r28
    1312:	0f 5f       	subi	r16, 0xFF	; 255
    1314:	1f 4f       	sbci	r17, 0xFF	; 255
    1316:	68 01       	movw	r12, r16
    1318:	80 e2       	ldi	r24, 0x20	; 32
    131a:	f8 01       	movw	r30, r16
    131c:	11 92       	st	Z+, r1
    131e:	8a 95       	dec	r24
    1320:	e9 f7       	brne	.-6      	; 0x131c <conv_brk+0x42>
    1322:	f5 01       	movw	r30, r10
    1324:	53 80       	ldd	r5, Z+3	; 0x03
    1326:	40 e0       	ldi	r20, 0x00	; 0
    1328:	50 e0       	ldi	r21, 0x00	; 0
    132a:	61 2c       	mov	r6, r1
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	71 2c       	mov	r7, r1
    1330:	a1 e0       	ldi	r26, 0x01	; 1
    1332:	b0 e0       	ldi	r27, 0x00	; 0
    1334:	f9 01       	movw	r30, r18
    1336:	53 fc       	sbrc	r5, 3
    1338:	85 91       	lpm	r24, Z+
    133a:	53 fe       	sbrs	r5, 3
    133c:	81 91       	ld	r24, Z+
    133e:	8f 01       	movw	r16, r30
    1340:	48 2e       	mov	r4, r24
    1342:	9f 01       	movw	r18, r30
    1344:	81 11       	cpse	r24, r1
    1346:	03 c0       	rjmp	.+6      	; 0x134e <conv_brk+0x74>
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	94 c0       	rjmp	.+296    	; 0x1476 <conv_brk+0x19c>
    134e:	8e 35       	cpi	r24, 0x5E	; 94
    1350:	19 f4       	brne	.+6      	; 0x1358 <conv_brk+0x7e>
    1352:	41 15       	cp	r20, r1
    1354:	51 05       	cpc	r21, r1
    1356:	51 f1       	breq	.+84     	; 0x13ac <conv_brk+0xd2>
    1358:	67 2d       	mov	r22, r7
    135a:	70 e0       	ldi	r23, 0x00	; 0
    135c:	64 17       	cp	r22, r20
    135e:	75 07       	cpc	r23, r21
    1360:	3c f4       	brge	.+14     	; 0x1370 <conv_brk+0x96>
    1362:	8d 35       	cpi	r24, 0x5D	; 93
    1364:	61 f1       	breq	.+88     	; 0x13be <conv_brk+0xe4>
    1366:	8d 32       	cpi	r24, 0x2D	; 45
    1368:	19 f4       	brne	.+6      	; 0x1370 <conv_brk+0x96>
    136a:	99 23       	and	r25, r25
    136c:	11 f1       	breq	.+68     	; 0x13b2 <conv_brk+0xd8>
    136e:	03 c0       	rjmp	.+6      	; 0x1376 <conv_brk+0x9c>
    1370:	99 23       	and	r25, r25
    1372:	09 f4       	brne	.+2      	; 0x1376 <conv_brk+0x9c>
    1374:	6b c0       	rjmp	.+214    	; 0x144c <conv_brk+0x172>
    1376:	84 2d       	mov	r24, r4
    1378:	86 95       	lsr	r24
    137a:	86 95       	lsr	r24
    137c:	86 95       	lsr	r24
    137e:	f6 01       	movw	r30, r12
    1380:	e8 0f       	add	r30, r24
    1382:	f1 1d       	adc	r31, r1
    1384:	84 2d       	mov	r24, r4
    1386:	87 70       	andi	r24, 0x07	; 7
    1388:	8d 01       	movw	r16, r26
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <conv_brk+0xb6>
    138c:	00 0f       	add	r16, r16
    138e:	11 1f       	adc	r17, r17
    1390:	8a 95       	dec	r24
    1392:	e2 f7       	brpl	.-8      	; 0x138c <conv_brk+0xb2>
    1394:	c8 01       	movw	r24, r16
    1396:	90 81       	ld	r25, Z
    1398:	89 2b       	or	r24, r25
    139a:	80 83       	st	Z, r24
    139c:	64 14       	cp	r6, r4
    139e:	59 f0       	breq	.+22     	; 0x13b6 <conv_brk+0xdc>
    13a0:	46 14       	cp	r4, r6
    13a2:	10 f4       	brcc	.+4      	; 0x13a8 <conv_brk+0xce>
    13a4:	43 94       	inc	r4
    13a6:	e7 cf       	rjmp	.-50     	; 0x1376 <conv_brk+0x9c>
    13a8:	4a 94       	dec	r4
    13aa:	e5 cf       	rjmp	.-54     	; 0x1376 <conv_brk+0x9c>
    13ac:	77 24       	eor	r7, r7
    13ae:	73 94       	inc	r7
    13b0:	03 c0       	rjmp	.+6      	; 0x13b8 <conv_brk+0xde>
    13b2:	91 e0       	ldi	r25, 0x01	; 1
    13b4:	01 c0       	rjmp	.+2      	; 0x13b8 <conv_brk+0xde>
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	4f 5f       	subi	r20, 0xFF	; 255
    13ba:	5f 4f       	sbci	r21, 0xFF	; 255
    13bc:	bb cf       	rjmp	.-138    	; 0x1334 <conv_brk+0x5a>
    13be:	99 23       	and	r25, r25
    13c0:	19 f0       	breq	.+6      	; 0x13c8 <conv_brk+0xee>
    13c2:	8e 81       	ldd	r24, Y+6	; 0x06
    13c4:	80 62       	ori	r24, 0x20	; 32
    13c6:	8e 83       	std	Y+6, r24	; 0x06
    13c8:	71 10       	cpse	r7, r1
    13ca:	03 c0       	rjmp	.+6      	; 0x13d2 <conv_brk+0xf8>
    13cc:	77 24       	eor	r7, r7
    13ce:	73 94       	inc	r7
    13d0:	19 c0       	rjmp	.+50     	; 0x1404 <conv_brk+0x12a>
    13d2:	f6 01       	movw	r30, r12
    13d4:	9e 01       	movw	r18, r28
    13d6:	2f 5d       	subi	r18, 0xDF	; 223
    13d8:	3f 4f       	sbci	r19, 0xFF	; 255
    13da:	80 81       	ld	r24, Z
    13dc:	80 95       	com	r24
    13de:	81 93       	st	Z+, r24
    13e0:	2e 17       	cp	r18, r30
    13e2:	3f 07       	cpc	r19, r31
    13e4:	d1 f7       	brne	.-12     	; 0x13da <conv_brk+0x100>
    13e6:	f2 cf       	rjmp	.-28     	; 0x13cc <conv_brk+0xf2>
    13e8:	e1 14       	cp	r14, r1
    13ea:	f1 04       	cpc	r15, r1
    13ec:	31 f0       	breq	.+12     	; 0x13fa <conv_brk+0x120>
    13ee:	f7 01       	movw	r30, r14
    13f0:	80 83       	st	Z, r24
    13f2:	b7 01       	movw	r22, r14
    13f4:	6f 5f       	subi	r22, 0xFF	; 255
    13f6:	7f 4f       	sbci	r23, 0xFF	; 255
    13f8:	7b 01       	movw	r14, r22
    13fa:	71 e0       	ldi	r23, 0x01	; 1
    13fc:	87 1a       	sub	r8, r23
    13fe:	91 08       	sbc	r9, r1
    1400:	71 2c       	mov	r7, r1
    1402:	e9 f0       	breq	.+58     	; 0x143e <conv_brk+0x164>
    1404:	c5 01       	movw	r24, r10
    1406:	b2 d4       	rcall	.+2404   	; 0x1d6c <fgetc>
    1408:	97 fd       	sbrc	r25, 7
    140a:	17 c0       	rjmp	.+46     	; 0x143a <conv_brk+0x160>
    140c:	fc 01       	movw	r30, r24
    140e:	ff 27       	eor	r31, r31
    1410:	23 e0       	ldi	r18, 0x03	; 3
    1412:	f5 95       	asr	r31
    1414:	e7 95       	ror	r30
    1416:	2a 95       	dec	r18
    1418:	e1 f7       	brne	.-8      	; 0x1412 <conv_brk+0x138>
    141a:	ec 0d       	add	r30, r12
    141c:	fd 1d       	adc	r31, r13
    141e:	20 81       	ld	r18, Z
    1420:	30 e0       	ldi	r19, 0x00	; 0
    1422:	ac 01       	movw	r20, r24
    1424:	47 70       	andi	r20, 0x07	; 7
    1426:	55 27       	eor	r21, r21
    1428:	02 c0       	rjmp	.+4      	; 0x142e <conv_brk+0x154>
    142a:	35 95       	asr	r19
    142c:	27 95       	ror	r18
    142e:	4a 95       	dec	r20
    1430:	e2 f7       	brpl	.-8      	; 0x142a <conv_brk+0x150>
    1432:	20 fd       	sbrc	r18, 0
    1434:	d9 cf       	rjmp	.-78     	; 0x13e8 <conv_brk+0x10e>
    1436:	b5 01       	movw	r22, r10
    1438:	57 d5       	rcall	.+2734   	; 0x1ee8 <ungetc>
    143a:	71 10       	cpse	r7, r1
    143c:	85 cf       	rjmp	.-246    	; 0x1348 <conv_brk+0x6e>
    143e:	e1 14       	cp	r14, r1
    1440:	f1 04       	cpc	r15, r1
    1442:	11 f0       	breq	.+4      	; 0x1448 <conv_brk+0x16e>
    1444:	f7 01       	movw	r30, r14
    1446:	10 82       	st	Z, r1
    1448:	c8 01       	movw	r24, r16
    144a:	15 c0       	rjmp	.+42     	; 0x1476 <conv_brk+0x19c>
    144c:	68 2f       	mov	r22, r24
    144e:	66 95       	lsr	r22
    1450:	66 95       	lsr	r22
    1452:	66 95       	lsr	r22
    1454:	f6 01       	movw	r30, r12
    1456:	e6 0f       	add	r30, r22
    1458:	f1 1d       	adc	r31, r1
    145a:	68 2f       	mov	r22, r24
    145c:	67 70       	andi	r22, 0x07	; 7
    145e:	8d 01       	movw	r16, r26
    1460:	02 c0       	rjmp	.+4      	; 0x1466 <conv_brk+0x18c>
    1462:	00 0f       	add	r16, r16
    1464:	11 1f       	adc	r17, r17
    1466:	6a 95       	dec	r22
    1468:	e2 f7       	brpl	.-8      	; 0x1462 <conv_brk+0x188>
    146a:	b8 01       	movw	r22, r16
    146c:	70 81       	ld	r23, Z
    146e:	67 2b       	or	r22, r23
    1470:	60 83       	st	Z, r22
    1472:	68 2e       	mov	r6, r24
    1474:	a1 cf       	rjmp	.-190    	; 0x13b8 <conv_brk+0xde>
    1476:	a0 96       	adiw	r28, 0x20	; 32
    1478:	0f b6       	in	r0, 0x3f	; 63
    147a:	f8 94       	cli
    147c:	de bf       	out	0x3e, r29	; 62
    147e:	0f be       	out	0x3f, r0	; 63
    1480:	cd bf       	out	0x3d, r28	; 61
    1482:	df 91       	pop	r29
    1484:	cf 91       	pop	r28
    1486:	1f 91       	pop	r17
    1488:	0f 91       	pop	r16
    148a:	ff 90       	pop	r15
    148c:	ef 90       	pop	r14
    148e:	df 90       	pop	r13
    1490:	cf 90       	pop	r12
    1492:	bf 90       	pop	r11
    1494:	af 90       	pop	r10
    1496:	9f 90       	pop	r9
    1498:	8f 90       	pop	r8
    149a:	7f 90       	pop	r7
    149c:	6f 90       	pop	r6
    149e:	5f 90       	pop	r5
    14a0:	4f 90       	pop	r4
    14a2:	08 95       	ret

000014a4 <conv_flt>:
    14a4:	2f 92       	push	r2
    14a6:	3f 92       	push	r3
    14a8:	4f 92       	push	r4
    14aa:	5f 92       	push	r5
    14ac:	6f 92       	push	r6
    14ae:	7f 92       	push	r7
    14b0:	9f 92       	push	r9
    14b2:	af 92       	push	r10
    14b4:	bf 92       	push	r11
    14b6:	cf 92       	push	r12
    14b8:	df 92       	push	r13
    14ba:	ef 92       	push	r14
    14bc:	ff 92       	push	r15
    14be:	0f 93       	push	r16
    14c0:	1f 93       	push	r17
    14c2:	cf 93       	push	r28
    14c4:	df 93       	push	r29
    14c6:	6c 01       	movw	r12, r24
    14c8:	8b 01       	movw	r16, r22
    14ca:	1a 01       	movw	r2, r20
    14cc:	4f d4       	rcall	.+2206   	; 0x1d6c <fgetc>
    14ce:	ec 01       	movw	r28, r24
    14d0:	99 27       	eor	r25, r25
    14d2:	8b 32       	cpi	r24, 0x2B	; 43
    14d4:	91 05       	cpc	r25, r1
    14d6:	29 f0       	breq	.+10     	; 0x14e2 <conv_flt+0x3e>
    14d8:	8d 97       	sbiw	r24, 0x2d	; 45
    14da:	79 f4       	brne	.+30     	; 0x14fa <conv_flt+0x56>
    14dc:	30 e8       	ldi	r19, 0x80	; 128
    14de:	93 2e       	mov	r9, r19
    14e0:	01 c0       	rjmp	.+2      	; 0x14e4 <conv_flt+0x40>
    14e2:	91 2c       	mov	r9, r1
    14e4:	01 50       	subi	r16, 0x01	; 1
    14e6:	11 09       	sbc	r17, r1
    14e8:	11 f4       	brne	.+4      	; 0x14ee <conv_flt+0x4a>
    14ea:	80 e0       	ldi	r24, 0x00	; 0
    14ec:	fe c0       	rjmp	.+508    	; 0x16ea <conv_flt+0x246>
    14ee:	c6 01       	movw	r24, r12
    14f0:	3d d4       	rcall	.+2170   	; 0x1d6c <fgetc>
    14f2:	ec 01       	movw	r28, r24
    14f4:	97 ff       	sbrs	r25, 7
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <conv_flt+0x58>
    14f8:	f8 cf       	rjmp	.-16     	; 0x14ea <conv_flt+0x46>
    14fa:	91 2c       	mov	r9, r1
    14fc:	ce 01       	movw	r24, r28
    14fe:	0d d4       	rcall	.+2074   	; 0x1d1a <tolower>
    1500:	89 36       	cpi	r24, 0x69	; 105
    1502:	91 05       	cpc	r25, r1
    1504:	31 f0       	breq	.+12     	; 0x1512 <conv_flt+0x6e>
    1506:	8e 36       	cpi	r24, 0x6E	; 110
    1508:	91 05       	cpc	r25, r1
    150a:	81 f5       	brne	.+96     	; 0x156c <conv_flt+0xc8>
    150c:	c8 ef       	ldi	r28, 0xF8	; 248
    150e:	d1 e0       	ldi	r29, 0x01	; 1
    1510:	02 c0       	rjmp	.+4      	; 0x1516 <conv_flt+0x72>
    1512:	cb ef       	ldi	r28, 0xFB	; 251
    1514:	d1 e0       	ldi	r29, 0x01	; 1
    1516:	21 96       	adiw	r28, 0x01	; 1
    1518:	fe 01       	movw	r30, r28
    151a:	31 97       	sbiw	r30, 0x01	; 1
    151c:	b4 90       	lpm	r11, Z
    151e:	bb 20       	and	r11, r11
    1520:	b1 f0       	breq	.+44     	; 0x154e <conv_flt+0xaa>
    1522:	01 50       	subi	r16, 0x01	; 1
    1524:	11 09       	sbc	r17, r1
    1526:	79 f0       	breq	.+30     	; 0x1546 <conv_flt+0xa2>
    1528:	c6 01       	movw	r24, r12
    152a:	20 d4       	rcall	.+2112   	; 0x1d6c <fgetc>
    152c:	7c 01       	movw	r14, r24
    152e:	97 fd       	sbrc	r25, 7
    1530:	0a c0       	rjmp	.+20     	; 0x1546 <conv_flt+0xa2>
    1532:	f3 d3       	rcall	.+2022   	; 0x1d1a <tolower>
    1534:	99 27       	eor	r25, r25
    1536:	eb 2d       	mov	r30, r11
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	8e 17       	cp	r24, r30
    153c:	9f 07       	cpc	r25, r31
    153e:	59 f3       	breq	.-42     	; 0x1516 <conv_flt+0x72>
    1540:	b6 01       	movw	r22, r12
    1542:	c7 01       	movw	r24, r14
    1544:	d1 d4       	rcall	.+2466   	; 0x1ee8 <ungetc>
    1546:	ce 5f       	subi	r28, 0xFE	; 254
    1548:	d1 40       	sbci	r29, 0x01	; 1
    154a:	79 f6       	brne	.-98     	; 0x14ea <conv_flt+0x46>
    154c:	03 c0       	rjmp	.+6      	; 0x1554 <conv_flt+0xb0>
    154e:	cb 5f       	subi	r28, 0xFB	; 251
    1550:	d1 40       	sbci	r29, 0x01	; 1
    1552:	29 f0       	breq	.+10     	; 0x155e <conv_flt+0xba>
    1554:	80 e0       	ldi	r24, 0x00	; 0
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	a0 e8       	ldi	r26, 0x80	; 128
    155a:	bf e7       	ldi	r27, 0x7F	; 127
    155c:	04 c0       	rjmp	.+8      	; 0x1566 <conv_flt+0xc2>
    155e:	80 e0       	ldi	r24, 0x00	; 0
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	a0 ec       	ldi	r26, 0xC0	; 192
    1564:	bf e7       	ldi	r27, 0x7F	; 127
    1566:	bc 01       	movw	r22, r24
    1568:	cd 01       	movw	r24, r26
    156a:	af c0       	rjmp	.+350    	; 0x16ca <conv_flt+0x226>
    156c:	41 2c       	mov	r4, r1
    156e:	51 2c       	mov	r5, r1
    1570:	32 01       	movw	r6, r4
    1572:	e1 2c       	mov	r14, r1
    1574:	f1 2c       	mov	r15, r1
    1576:	2c 2f       	mov	r18, r28
    1578:	20 53       	subi	r18, 0x30	; 48
    157a:	2a 30       	cpi	r18, 0x0A	; 10
    157c:	08 f5       	brcc	.+66     	; 0x15c0 <conv_flt+0x11c>
    157e:	e9 2d       	mov	r30, r9
    1580:	e2 60       	ori	r30, 0x02	; 2
    1582:	be 2e       	mov	r11, r30
    1584:	89 2d       	mov	r24, r9
    1586:	88 70       	andi	r24, 0x08	; 8
    1588:	92 fe       	sbrs	r9, 2
    158a:	06 c0       	rjmp	.+12     	; 0x1598 <conv_flt+0xf4>
    158c:	81 11       	cpse	r24, r1
    158e:	1f c0       	rjmp	.+62     	; 0x15ce <conv_flt+0x12a>
    1590:	ff ef       	ldi	r31, 0xFF	; 255
    1592:	ef 1a       	sub	r14, r31
    1594:	ff 0a       	sbc	r15, r31
    1596:	1b c0       	rjmp	.+54     	; 0x15ce <conv_flt+0x12a>
    1598:	88 23       	and	r24, r24
    159a:	19 f0       	breq	.+6      	; 0x15a2 <conv_flt+0xfe>
    159c:	81 e0       	ldi	r24, 0x01	; 1
    159e:	e8 1a       	sub	r14, r24
    15a0:	f1 08       	sbc	r15, r1
    15a2:	40 e2       	ldi	r20, 0x20	; 32
    15a4:	c3 01       	movw	r24, r6
    15a6:	b2 01       	movw	r22, r4
    15a8:	cb dd       	rcall	.-1130   	; 0x1140 <mulacc>
    15aa:	2b 01       	movw	r4, r22
    15ac:	3c 01       	movw	r6, r24
    15ae:	68 39       	cpi	r22, 0x98	; 152
    15b0:	79 49       	sbci	r23, 0x99	; 153
    15b2:	89 49       	sbci	r24, 0x99	; 153
    15b4:	99 41       	sbci	r25, 0x19	; 25
    15b6:	58 f0       	brcs	.+22     	; 0x15ce <conv_flt+0x12a>
    15b8:	f9 2d       	mov	r31, r9
    15ba:	f6 60       	ori	r31, 0x06	; 6
    15bc:	bf 2e       	mov	r11, r31
    15be:	07 c0       	rjmp	.+14     	; 0x15ce <conv_flt+0x12a>
    15c0:	2e 3f       	cpi	r18, 0xFE	; 254
    15c2:	81 f4       	brne	.+32     	; 0x15e4 <conv_flt+0x140>
    15c4:	93 fc       	sbrc	r9, 3
    15c6:	0e c0       	rjmp	.+28     	; 0x15e4 <conv_flt+0x140>
    15c8:	29 2d       	mov	r18, r9
    15ca:	28 60       	ori	r18, 0x08	; 8
    15cc:	b2 2e       	mov	r11, r18
    15ce:	01 50       	subi	r16, 0x01	; 1
    15d0:	11 09       	sbc	r17, r1
    15d2:	39 f0       	breq	.+14     	; 0x15e2 <conv_flt+0x13e>
    15d4:	c6 01       	movw	r24, r12
    15d6:	ca d3       	rcall	.+1940   	; 0x1d6c <fgetc>
    15d8:	ec 01       	movw	r28, r24
    15da:	9b 2c       	mov	r9, r11
    15dc:	97 ff       	sbrs	r25, 7
    15de:	cb cf       	rjmp	.-106    	; 0x1576 <conv_flt+0xd2>
    15e0:	01 c0       	rjmp	.+2      	; 0x15e4 <conv_flt+0x140>
    15e2:	9b 2c       	mov	r9, r11
    15e4:	91 fe       	sbrs	r9, 1
    15e6:	81 cf       	rjmp	.-254    	; 0x14ea <conv_flt+0x46>
    15e8:	ce 01       	movw	r24, r28
    15ea:	8f 7d       	andi	r24, 0xDF	; 223
    15ec:	99 27       	eor	r25, r25
    15ee:	85 34       	cpi	r24, 0x45	; 69
    15f0:	91 05       	cpc	r25, r1
    15f2:	09 f0       	breq	.+2      	; 0x15f6 <conv_flt+0x152>
    15f4:	3e c0       	rjmp	.+124    	; 0x1672 <conv_flt+0x1ce>
    15f6:	58 01       	movw	r10, r16
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	a8 1a       	sub	r10, r24
    15fc:	b1 08       	sbc	r11, r1
    15fe:	09 f4       	brne	.+2      	; 0x1602 <conv_flt+0x15e>
    1600:	74 cf       	rjmp	.-280    	; 0x14ea <conv_flt+0x46>
    1602:	c6 01       	movw	r24, r12
    1604:	b3 d3       	rcall	.+1894   	; 0x1d6c <fgetc>
    1606:	ec 01       	movw	r28, r24
    1608:	97 fd       	sbrc	r25, 7
    160a:	6f cf       	rjmp	.-290    	; 0x14ea <conv_flt+0x46>
    160c:	99 27       	eor	r25, r25
    160e:	8b 32       	cpi	r24, 0x2B	; 43
    1610:	91 05       	cpc	r25, r1
    1612:	29 f0       	breq	.+10     	; 0x161e <conv_flt+0x17a>
    1614:	8d 97       	sbiw	r24, 0x2d	; 45
    1616:	61 f4       	brne	.+24     	; 0x1630 <conv_flt+0x18c>
    1618:	e9 2d       	mov	r30, r9
    161a:	e0 61       	ori	r30, 0x10	; 16
    161c:	9e 2e       	mov	r9, r30
    161e:	58 01       	movw	r10, r16
    1620:	f2 e0       	ldi	r31, 0x02	; 2
    1622:	af 1a       	sub	r10, r31
    1624:	b1 08       	sbc	r11, r1
    1626:	09 f4       	brne	.+2      	; 0x162a <conv_flt+0x186>
    1628:	60 cf       	rjmp	.-320    	; 0x14ea <conv_flt+0x46>
    162a:	c6 01       	movw	r24, r12
    162c:	9f d3       	rcall	.+1854   	; 0x1d6c <fgetc>
    162e:	ec 01       	movw	r28, r24
    1630:	ce 01       	movw	r24, r28
    1632:	c0 97       	sbiw	r24, 0x30	; 48
    1634:	0a 97       	sbiw	r24, 0x0a	; 10
    1636:	08 f0       	brcs	.+2      	; 0x163a <conv_flt+0x196>
    1638:	58 cf       	rjmp	.-336    	; 0x14ea <conv_flt+0x46>
    163a:	85 01       	movw	r16, r10
    163c:	a1 2c       	mov	r10, r1
    163e:	b1 2c       	mov	r11, r1
    1640:	b5 01       	movw	r22, r10
    1642:	bb 0c       	add	r11, r11
    1644:	88 0b       	sbc	r24, r24
    1646:	99 0b       	sbc	r25, r25
    1648:	2c 2f       	mov	r18, r28
    164a:	20 53       	subi	r18, 0x30	; 48
    164c:	40 e2       	ldi	r20, 0x20	; 32
    164e:	78 dd       	rcall	.-1296   	; 0x1140 <mulacc>
    1650:	5b 01       	movw	r10, r22
    1652:	01 50       	subi	r16, 0x01	; 1
    1654:	11 09       	sbc	r17, r1
    1656:	31 f0       	breq	.+12     	; 0x1664 <conv_flt+0x1c0>
    1658:	c6 01       	movw	r24, r12
    165a:	88 d3       	rcall	.+1808   	; 0x1d6c <fgetc>
    165c:	ec 01       	movw	r28, r24
    165e:	c0 97       	sbiw	r24, 0x30	; 48
    1660:	0a 97       	sbiw	r24, 0x0a	; 10
    1662:	70 f3       	brcs	.-36     	; 0x1640 <conv_flt+0x19c>
    1664:	94 fe       	sbrs	r9, 4
    1666:	03 c0       	rjmp	.+6      	; 0x166e <conv_flt+0x1ca>
    1668:	b1 94       	neg	r11
    166a:	a1 94       	neg	r10
    166c:	b1 08       	sbc	r11, r1
    166e:	ea 0c       	add	r14, r10
    1670:	fb 1c       	adc	r15, r11
    1672:	01 2b       	or	r16, r17
    1674:	29 f0       	breq	.+10     	; 0x1680 <conv_flt+0x1dc>
    1676:	d7 fd       	sbrc	r29, 7
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <conv_flt+0x1dc>
    167a:	b6 01       	movw	r22, r12
    167c:	ce 01       	movw	r24, r28
    167e:	34 d4       	rcall	.+2152   	; 0x1ee8 <ungetc>
    1680:	c3 01       	movw	r24, r6
    1682:	b2 01       	movw	r22, r4
    1684:	79 d1       	rcall	.+754    	; 0x1978 <__floatunsisf>
    1686:	f7 fe       	sbrs	r15, 7
    1688:	06 c0       	rjmp	.+12     	; 0x1696 <conv_flt+0x1f2>
    168a:	f1 94       	neg	r15
    168c:	e1 94       	neg	r14
    168e:	f1 08       	sbc	r15, r1
    1690:	c7 e1       	ldi	r28, 0x17	; 23
    1692:	d2 e0       	ldi	r29, 0x02	; 2
    1694:	02 c0       	rjmp	.+4      	; 0x169a <conv_flt+0x1f6>
    1696:	cf e2       	ldi	r28, 0x2F	; 47
    1698:	d2 e0       	ldi	r29, 0x02	; 2
    169a:	6e 01       	movw	r12, r28
    169c:	28 e1       	ldi	r18, 0x18	; 24
    169e:	c2 1a       	sub	r12, r18
    16a0:	d1 08       	sbc	r13, r1
    16a2:	00 e2       	ldi	r16, 0x20	; 32
    16a4:	10 e0       	ldi	r17, 0x00	; 0
    16a6:	e0 16       	cp	r14, r16
    16a8:	f1 06       	cpc	r15, r17
    16aa:	48 f0       	brcs	.+18     	; 0x16be <conv_flt+0x21a>
    16ac:	fe 01       	movw	r30, r28
    16ae:	25 91       	lpm	r18, Z+
    16b0:	35 91       	lpm	r19, Z+
    16b2:	45 91       	lpm	r20, Z+
    16b4:	54 91       	lpm	r21, Z
    16b6:	9d d1       	rcall	.+826    	; 0x19f2 <__mulsf3>
    16b8:	e0 1a       	sub	r14, r16
    16ba:	f1 0a       	sbc	r15, r17
    16bc:	f4 cf       	rjmp	.-24     	; 0x16a6 <conv_flt+0x202>
    16be:	24 97       	sbiw	r28, 0x04	; 4
    16c0:	16 95       	lsr	r17
    16c2:	07 95       	ror	r16
    16c4:	cc 16       	cp	r12, r28
    16c6:	dd 06       	cpc	r13, r29
    16c8:	71 f7       	brne	.-36     	; 0x16a6 <conv_flt+0x202>
    16ca:	97 fe       	sbrs	r9, 7
    16cc:	05 c0       	rjmp	.+10     	; 0x16d8 <conv_flt+0x234>
    16ce:	dc 01       	movw	r26, r24
    16d0:	cb 01       	movw	r24, r22
    16d2:	b0 58       	subi	r27, 0x80	; 128
    16d4:	bc 01       	movw	r22, r24
    16d6:	cd 01       	movw	r24, r26
    16d8:	21 14       	cp	r2, r1
    16da:	31 04       	cpc	r3, r1
    16dc:	29 f0       	breq	.+10     	; 0x16e8 <conv_flt+0x244>
    16de:	f1 01       	movw	r30, r2
    16e0:	60 83       	st	Z, r22
    16e2:	71 83       	std	Z+1, r23	; 0x01
    16e4:	82 83       	std	Z+2, r24	; 0x02
    16e6:	93 83       	std	Z+3, r25	; 0x03
    16e8:	81 e0       	ldi	r24, 0x01	; 1
    16ea:	df 91       	pop	r29
    16ec:	cf 91       	pop	r28
    16ee:	1f 91       	pop	r17
    16f0:	0f 91       	pop	r16
    16f2:	ff 90       	pop	r15
    16f4:	ef 90       	pop	r14
    16f6:	df 90       	pop	r13
    16f8:	cf 90       	pop	r12
    16fa:	bf 90       	pop	r11
    16fc:	af 90       	pop	r10
    16fe:	9f 90       	pop	r9
    1700:	7f 90       	pop	r7
    1702:	6f 90       	pop	r6
    1704:	5f 90       	pop	r5
    1706:	4f 90       	pop	r4
    1708:	3f 90       	pop	r3
    170a:	2f 90       	pop	r2
    170c:	08 95       	ret

0000170e <vfscanf>:
    170e:	6f 92       	push	r6
    1710:	7f 92       	push	r7
    1712:	8f 92       	push	r8
    1714:	9f 92       	push	r9
    1716:	af 92       	push	r10
    1718:	bf 92       	push	r11
    171a:	cf 92       	push	r12
    171c:	df 92       	push	r13
    171e:	ef 92       	push	r14
    1720:	ff 92       	push	r15
    1722:	0f 93       	push	r16
    1724:	1f 93       	push	r17
    1726:	cf 93       	push	r28
    1728:	df 93       	push	r29
    172a:	5c 01       	movw	r10, r24
    172c:	eb 01       	movw	r28, r22
    172e:	4a 01       	movw	r8, r20
    1730:	fc 01       	movw	r30, r24
    1732:	17 82       	std	Z+7, r1	; 0x07
    1734:	16 82       	std	Z+6, r1	; 0x06
    1736:	61 2c       	mov	r6, r1
    1738:	f5 01       	movw	r30, r10
    173a:	03 81       	ldd	r16, Z+3	; 0x03
    173c:	fe 01       	movw	r30, r28
    173e:	03 fd       	sbrc	r16, 3
    1740:	85 91       	lpm	r24, Z+
    1742:	03 ff       	sbrs	r16, 3
    1744:	81 91       	ld	r24, Z+
    1746:	18 2f       	mov	r17, r24
    1748:	ef 01       	movw	r28, r30
    174a:	88 23       	and	r24, r24
    174c:	09 f4       	brne	.+2      	; 0x1750 <vfscanf+0x42>
    174e:	00 c1       	rjmp	.+512    	; 0x1950 <vfscanf+0x242>
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	db d2       	rcall	.+1462   	; 0x1d0a <isspace>
    1754:	89 2b       	or	r24, r25
    1756:	19 f0       	breq	.+6      	; 0x175e <vfscanf+0x50>
    1758:	c5 01       	movw	r24, r10
    175a:	19 dd       	rcall	.-1486   	; 0x118e <skip_spaces>
    175c:	ed cf       	rjmp	.-38     	; 0x1738 <vfscanf+0x2a>
    175e:	15 32       	cpi	r17, 0x25	; 37
    1760:	41 f4       	brne	.+16     	; 0x1772 <vfscanf+0x64>
    1762:	fe 01       	movw	r30, r28
    1764:	03 fd       	sbrc	r16, 3
    1766:	15 91       	lpm	r17, Z+
    1768:	03 ff       	sbrs	r16, 3
    176a:	11 91       	ld	r17, Z+
    176c:	ef 01       	movw	r28, r30
    176e:	15 32       	cpi	r17, 0x25	; 37
    1770:	71 f4       	brne	.+28     	; 0x178e <vfscanf+0x80>
    1772:	c5 01       	movw	r24, r10
    1774:	fb d2       	rcall	.+1526   	; 0x1d6c <fgetc>
    1776:	97 fd       	sbrc	r25, 7
    1778:	e9 c0       	rjmp	.+466    	; 0x194c <vfscanf+0x23e>
    177a:	41 2f       	mov	r20, r17
    177c:	50 e0       	ldi	r21, 0x00	; 0
    177e:	9c 01       	movw	r18, r24
    1780:	33 27       	eor	r19, r19
    1782:	24 17       	cp	r18, r20
    1784:	35 07       	cpc	r19, r21
    1786:	c1 f2       	breq	.-80     	; 0x1738 <vfscanf+0x2a>
    1788:	b5 01       	movw	r22, r10
    178a:	ae d3       	rcall	.+1884   	; 0x1ee8 <ungetc>
    178c:	e1 c0       	rjmp	.+450    	; 0x1950 <vfscanf+0x242>
    178e:	1a 32       	cpi	r17, 0x2A	; 42
    1790:	41 f4       	brne	.+16     	; 0x17a2 <vfscanf+0x94>
    1792:	03 fd       	sbrc	r16, 3
    1794:	15 91       	lpm	r17, Z+
    1796:	03 ff       	sbrs	r16, 3
    1798:	11 91       	ld	r17, Z+
    179a:	ef 01       	movw	r28, r30
    179c:	77 24       	eor	r7, r7
    179e:	73 94       	inc	r7
    17a0:	01 c0       	rjmp	.+2      	; 0x17a4 <vfscanf+0x96>
    17a2:	71 2c       	mov	r7, r1
    17a4:	e1 2c       	mov	r14, r1
    17a6:	f1 2c       	mov	r15, r1
    17a8:	20 ed       	ldi	r18, 0xD0	; 208
    17aa:	21 0f       	add	r18, r17
    17ac:	2a 30       	cpi	r18, 0x0A	; 10
    17ae:	80 f4       	brcc	.+32     	; 0x17d0 <vfscanf+0xc2>
    17b0:	f7 2d       	mov	r31, r7
    17b2:	f2 60       	ori	r31, 0x02	; 2
    17b4:	7f 2e       	mov	r7, r31
    17b6:	b7 01       	movw	r22, r14
    17b8:	80 e0       	ldi	r24, 0x00	; 0
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	40 e2       	ldi	r20, 0x20	; 32
    17be:	c0 dc       	rcall	.-1664   	; 0x1140 <mulacc>
    17c0:	7b 01       	movw	r14, r22
    17c2:	fe 01       	movw	r30, r28
    17c4:	03 fd       	sbrc	r16, 3
    17c6:	15 91       	lpm	r17, Z+
    17c8:	03 ff       	sbrs	r16, 3
    17ca:	11 91       	ld	r17, Z+
    17cc:	ef 01       	movw	r28, r30
    17ce:	ec cf       	rjmp	.-40     	; 0x17a8 <vfscanf+0x9a>
    17d0:	71 fe       	sbrs	r7, 1
    17d2:	04 c0       	rjmp	.+8      	; 0x17dc <vfscanf+0xce>
    17d4:	e1 14       	cp	r14, r1
    17d6:	f1 04       	cpc	r15, r1
    17d8:	21 f4       	brne	.+8      	; 0x17e2 <vfscanf+0xd4>
    17da:	ba c0       	rjmp	.+372    	; 0x1950 <vfscanf+0x242>
    17dc:	ee 24       	eor	r14, r14
    17de:	ea 94       	dec	r14
    17e0:	fe 2c       	mov	r15, r14
    17e2:	18 36       	cpi	r17, 0x68	; 104
    17e4:	19 f0       	breq	.+6      	; 0x17ec <vfscanf+0xde>
    17e6:	1c 36       	cpi	r17, 0x6C	; 108
    17e8:	61 f0       	breq	.+24     	; 0x1802 <vfscanf+0xf4>
    17ea:	14 c0       	rjmp	.+40     	; 0x1814 <vfscanf+0x106>
    17ec:	fe 01       	movw	r30, r28
    17ee:	03 fd       	sbrc	r16, 3
    17f0:	15 91       	lpm	r17, Z+
    17f2:	03 ff       	sbrs	r16, 3
    17f4:	11 91       	ld	r17, Z+
    17f6:	ef 01       	movw	r28, r30
    17f8:	18 36       	cpi	r17, 0x68	; 104
    17fa:	61 f4       	brne	.+24     	; 0x1814 <vfscanf+0x106>
    17fc:	87 2d       	mov	r24, r7
    17fe:	88 60       	ori	r24, 0x08	; 8
    1800:	78 2e       	mov	r7, r24
    1802:	97 2d       	mov	r25, r7
    1804:	94 60       	ori	r25, 0x04	; 4
    1806:	79 2e       	mov	r7, r25
    1808:	fe 01       	movw	r30, r28
    180a:	03 fd       	sbrc	r16, 3
    180c:	15 91       	lpm	r17, Z+
    180e:	03 ff       	sbrs	r16, 3
    1810:	11 91       	ld	r17, Z+
    1812:	ef 01       	movw	r28, r30
    1814:	11 23       	and	r17, r17
    1816:	09 f4       	brne	.+2      	; 0x181a <vfscanf+0x10c>
    1818:	9b c0       	rjmp	.+310    	; 0x1950 <vfscanf+0x242>
    181a:	61 2f       	mov	r22, r17
    181c:	70 e0       	ldi	r23, 0x00	; 0
    181e:	86 ee       	ldi	r24, 0xE6	; 230
    1820:	91 e0       	ldi	r25, 0x01	; 1
    1822:	83 d2       	rcall	.+1286   	; 0x1d2a <strchr_P>
    1824:	89 2b       	or	r24, r25
    1826:	09 f4       	brne	.+2      	; 0x182a <vfscanf+0x11c>
    1828:	93 c0       	rjmp	.+294    	; 0x1950 <vfscanf+0x242>
    182a:	70 fc       	sbrc	r7, 0
    182c:	07 c0       	rjmp	.+14     	; 0x183c <vfscanf+0x12e>
    182e:	f4 01       	movw	r30, r8
    1830:	c0 80       	ld	r12, Z
    1832:	d1 80       	ldd	r13, Z+1	; 0x01
    1834:	c4 01       	movw	r24, r8
    1836:	02 96       	adiw	r24, 0x02	; 2
    1838:	4c 01       	movw	r8, r24
    183a:	02 c0       	rjmp	.+4      	; 0x1840 <vfscanf+0x132>
    183c:	c1 2c       	mov	r12, r1
    183e:	d1 2c       	mov	r13, r1
    1840:	1e 36       	cpi	r17, 0x6E	; 110
    1842:	49 f4       	brne	.+18     	; 0x1856 <vfscanf+0x148>
    1844:	f5 01       	movw	r30, r10
    1846:	46 81       	ldd	r20, Z+6	; 0x06
    1848:	57 81       	ldd	r21, Z+7	; 0x07
    184a:	60 e0       	ldi	r22, 0x00	; 0
    184c:	70 e0       	ldi	r23, 0x00	; 0
    184e:	27 2d       	mov	r18, r7
    1850:	c6 01       	movw	r24, r12
    1852:	6a dc       	rcall	.-1836   	; 0x1128 <putval>
    1854:	71 cf       	rjmp	.-286    	; 0x1738 <vfscanf+0x2a>
    1856:	13 36       	cpi	r17, 0x63	; 99
    1858:	b1 f4       	brne	.+44     	; 0x1886 <vfscanf+0x178>
    185a:	71 fc       	sbrc	r7, 1
    185c:	03 c0       	rjmp	.+6      	; 0x1864 <vfscanf+0x156>
    185e:	ee 24       	eor	r14, r14
    1860:	e3 94       	inc	r14
    1862:	f1 2c       	mov	r15, r1
    1864:	c5 01       	movw	r24, r10
    1866:	82 d2       	rcall	.+1284   	; 0x1d6c <fgetc>
    1868:	97 fd       	sbrc	r25, 7
    186a:	70 c0       	rjmp	.+224    	; 0x194c <vfscanf+0x23e>
    186c:	c1 14       	cp	r12, r1
    186e:	d1 04       	cpc	r13, r1
    1870:	29 f0       	breq	.+10     	; 0x187c <vfscanf+0x16e>
    1872:	f6 01       	movw	r30, r12
    1874:	80 83       	st	Z, r24
    1876:	c6 01       	movw	r24, r12
    1878:	01 96       	adiw	r24, 0x01	; 1
    187a:	6c 01       	movw	r12, r24
    187c:	91 e0       	ldi	r25, 0x01	; 1
    187e:	e9 1a       	sub	r14, r25
    1880:	f1 08       	sbc	r15, r1
    1882:	81 f7       	brne	.-32     	; 0x1864 <vfscanf+0x156>
    1884:	5f c0       	rjmp	.+190    	; 0x1944 <vfscanf+0x236>
    1886:	1b 35       	cpi	r17, 0x5B	; 91
    1888:	51 f4       	brne	.+20     	; 0x189e <vfscanf+0x190>
    188a:	9e 01       	movw	r18, r28
    188c:	a6 01       	movw	r20, r12
    188e:	b7 01       	movw	r22, r14
    1890:	c5 01       	movw	r24, r10
    1892:	23 dd       	rcall	.-1466   	; 0x12da <conv_brk>
    1894:	ec 01       	movw	r28, r24
    1896:	89 2b       	or	r24, r25
    1898:	09 f0       	breq	.+2      	; 0x189c <vfscanf+0x18e>
    189a:	54 c0       	rjmp	.+168    	; 0x1944 <vfscanf+0x236>
    189c:	4e c0       	rjmp	.+156    	; 0x193a <vfscanf+0x22c>
    189e:	c5 01       	movw	r24, r10
    18a0:	76 dc       	rcall	.-1812   	; 0x118e <skip_spaces>
    18a2:	97 fd       	sbrc	r25, 7
    18a4:	53 c0       	rjmp	.+166    	; 0x194c <vfscanf+0x23e>
    18a6:	1f 36       	cpi	r17, 0x6F	; 111
    18a8:	c9 f1       	breq	.+114    	; 0x191c <vfscanf+0x20e>
    18aa:	40 f4       	brcc	.+16     	; 0x18bc <vfscanf+0x1ae>
    18ac:	14 36       	cpi	r17, 0x64	; 100
    18ae:	91 f1       	breq	.+100    	; 0x1914 <vfscanf+0x206>
    18b0:	19 36       	cpi	r17, 0x69	; 105
    18b2:	b9 f1       	breq	.+110    	; 0x1922 <vfscanf+0x214>
    18b4:	18 35       	cpi	r17, 0x58	; 88
    18b6:	09 f0       	breq	.+2      	; 0x18ba <vfscanf+0x1ac>
    18b8:	3a c0       	rjmp	.+116    	; 0x192e <vfscanf+0x220>
    18ba:	28 c0       	rjmp	.+80     	; 0x190c <vfscanf+0x1fe>
    18bc:	13 37       	cpi	r17, 0x73	; 115
    18be:	a9 f0       	breq	.+42     	; 0x18ea <vfscanf+0x1dc>
    18c0:	18 f4       	brcc	.+6      	; 0x18c8 <vfscanf+0x1ba>
    18c2:	10 37       	cpi	r17, 0x70	; 112
    18c4:	19 f1       	breq	.+70     	; 0x190c <vfscanf+0x1fe>
    18c6:	33 c0       	rjmp	.+102    	; 0x192e <vfscanf+0x220>
    18c8:	15 37       	cpi	r17, 0x75	; 117
    18ca:	21 f1       	breq	.+72     	; 0x1914 <vfscanf+0x206>
    18cc:	18 37       	cpi	r17, 0x78	; 120
    18ce:	f1 f0       	breq	.+60     	; 0x190c <vfscanf+0x1fe>
    18d0:	2e c0       	rjmp	.+92     	; 0x192e <vfscanf+0x220>
    18d2:	c1 14       	cp	r12, r1
    18d4:	d1 04       	cpc	r13, r1
    18d6:	29 f0       	breq	.+10     	; 0x18e2 <vfscanf+0x1d4>
    18d8:	f6 01       	movw	r30, r12
    18da:	00 83       	st	Z, r16
    18dc:	c6 01       	movw	r24, r12
    18de:	01 96       	adiw	r24, 0x01	; 1
    18e0:	6c 01       	movw	r12, r24
    18e2:	91 e0       	ldi	r25, 0x01	; 1
    18e4:	e9 1a       	sub	r14, r25
    18e6:	f1 08       	sbc	r15, r1
    18e8:	59 f0       	breq	.+22     	; 0x1900 <vfscanf+0x1f2>
    18ea:	c5 01       	movw	r24, r10
    18ec:	3f d2       	rcall	.+1150   	; 0x1d6c <fgetc>
    18ee:	8c 01       	movw	r16, r24
    18f0:	97 fd       	sbrc	r25, 7
    18f2:	06 c0       	rjmp	.+12     	; 0x1900 <vfscanf+0x1f2>
    18f4:	0a d2       	rcall	.+1044   	; 0x1d0a <isspace>
    18f6:	89 2b       	or	r24, r25
    18f8:	61 f3       	breq	.-40     	; 0x18d2 <vfscanf+0x1c4>
    18fa:	b5 01       	movw	r22, r10
    18fc:	c8 01       	movw	r24, r16
    18fe:	f4 d2       	rcall	.+1512   	; 0x1ee8 <ungetc>
    1900:	c1 14       	cp	r12, r1
    1902:	d1 04       	cpc	r13, r1
    1904:	f9 f0       	breq	.+62     	; 0x1944 <vfscanf+0x236>
    1906:	f6 01       	movw	r30, r12
    1908:	10 82       	st	Z, r1
    190a:	1c c0       	rjmp	.+56     	; 0x1944 <vfscanf+0x236>
    190c:	f7 2d       	mov	r31, r7
    190e:	f0 64       	ori	r31, 0x40	; 64
    1910:	7f 2e       	mov	r7, r31
    1912:	07 c0       	rjmp	.+14     	; 0x1922 <vfscanf+0x214>
    1914:	87 2d       	mov	r24, r7
    1916:	80 62       	ori	r24, 0x20	; 32
    1918:	78 2e       	mov	r7, r24
    191a:	03 c0       	rjmp	.+6      	; 0x1922 <vfscanf+0x214>
    191c:	97 2d       	mov	r25, r7
    191e:	90 61       	ori	r25, 0x10	; 16
    1920:	79 2e       	mov	r7, r25
    1922:	27 2d       	mov	r18, r7
    1924:	a6 01       	movw	r20, r12
    1926:	b7 01       	movw	r22, r14
    1928:	c5 01       	movw	r24, r10
    192a:	47 dc       	rcall	.-1906   	; 0x11ba <conv_int>
    192c:	04 c0       	rjmp	.+8      	; 0x1936 <vfscanf+0x228>
    192e:	a6 01       	movw	r20, r12
    1930:	b7 01       	movw	r22, r14
    1932:	c5 01       	movw	r24, r10
    1934:	b7 dd       	rcall	.-1170   	; 0x14a4 <conv_flt>
    1936:	81 11       	cpse	r24, r1
    1938:	05 c0       	rjmp	.+10     	; 0x1944 <vfscanf+0x236>
    193a:	f5 01       	movw	r30, r10
    193c:	83 81       	ldd	r24, Z+3	; 0x03
    193e:	80 73       	andi	r24, 0x30	; 48
    1940:	29 f4       	brne	.+10     	; 0x194c <vfscanf+0x23e>
    1942:	06 c0       	rjmp	.+12     	; 0x1950 <vfscanf+0x242>
    1944:	70 fc       	sbrc	r7, 0
    1946:	f8 ce       	rjmp	.-528    	; 0x1738 <vfscanf+0x2a>
    1948:	63 94       	inc	r6
    194a:	f6 ce       	rjmp	.-532    	; 0x1738 <vfscanf+0x2a>
    194c:	66 20       	and	r6, r6
    194e:	19 f0       	breq	.+6      	; 0x1956 <vfscanf+0x248>
    1950:	86 2d       	mov	r24, r6
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	02 c0       	rjmp	.+4      	; 0x195a <vfscanf+0x24c>
    1956:	8f ef       	ldi	r24, 0xFF	; 255
    1958:	9f ef       	ldi	r25, 0xFF	; 255
    195a:	df 91       	pop	r29
    195c:	cf 91       	pop	r28
    195e:	1f 91       	pop	r17
    1960:	0f 91       	pop	r16
    1962:	ff 90       	pop	r15
    1964:	ef 90       	pop	r14
    1966:	df 90       	pop	r13
    1968:	cf 90       	pop	r12
    196a:	bf 90       	pop	r11
    196c:	af 90       	pop	r10
    196e:	9f 90       	pop	r9
    1970:	8f 90       	pop	r8
    1972:	7f 90       	pop	r7
    1974:	6f 90       	pop	r6
    1976:	08 95       	ret

00001978 <__floatunsisf>:
    1978:	e8 94       	clt
    197a:	09 c0       	rjmp	.+18     	; 0x198e <__floatsisf+0x12>

0000197c <__floatsisf>:
    197c:	97 fb       	bst	r25, 7
    197e:	3e f4       	brtc	.+14     	; 0x198e <__floatsisf+0x12>
    1980:	90 95       	com	r25
    1982:	80 95       	com	r24
    1984:	70 95       	com	r23
    1986:	61 95       	neg	r22
    1988:	7f 4f       	sbci	r23, 0xFF	; 255
    198a:	8f 4f       	sbci	r24, 0xFF	; 255
    198c:	9f 4f       	sbci	r25, 0xFF	; 255
    198e:	99 23       	and	r25, r25
    1990:	a9 f0       	breq	.+42     	; 0x19bc <__floatsisf+0x40>
    1992:	f9 2f       	mov	r31, r25
    1994:	96 e9       	ldi	r25, 0x96	; 150
    1996:	bb 27       	eor	r27, r27
    1998:	93 95       	inc	r25
    199a:	f6 95       	lsr	r31
    199c:	87 95       	ror	r24
    199e:	77 95       	ror	r23
    19a0:	67 95       	ror	r22
    19a2:	b7 95       	ror	r27
    19a4:	f1 11       	cpse	r31, r1
    19a6:	f8 cf       	rjmp	.-16     	; 0x1998 <__floatsisf+0x1c>
    19a8:	fa f4       	brpl	.+62     	; 0x19e8 <__floatsisf+0x6c>
    19aa:	bb 0f       	add	r27, r27
    19ac:	11 f4       	brne	.+4      	; 0x19b2 <__floatsisf+0x36>
    19ae:	60 ff       	sbrs	r22, 0
    19b0:	1b c0       	rjmp	.+54     	; 0x19e8 <__floatsisf+0x6c>
    19b2:	6f 5f       	subi	r22, 0xFF	; 255
    19b4:	7f 4f       	sbci	r23, 0xFF	; 255
    19b6:	8f 4f       	sbci	r24, 0xFF	; 255
    19b8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ba:	16 c0       	rjmp	.+44     	; 0x19e8 <__floatsisf+0x6c>
    19bc:	88 23       	and	r24, r24
    19be:	11 f0       	breq	.+4      	; 0x19c4 <__floatsisf+0x48>
    19c0:	96 e9       	ldi	r25, 0x96	; 150
    19c2:	11 c0       	rjmp	.+34     	; 0x19e6 <__floatsisf+0x6a>
    19c4:	77 23       	and	r23, r23
    19c6:	21 f0       	breq	.+8      	; 0x19d0 <__floatsisf+0x54>
    19c8:	9e e8       	ldi	r25, 0x8E	; 142
    19ca:	87 2f       	mov	r24, r23
    19cc:	76 2f       	mov	r23, r22
    19ce:	05 c0       	rjmp	.+10     	; 0x19da <__floatsisf+0x5e>
    19d0:	66 23       	and	r22, r22
    19d2:	71 f0       	breq	.+28     	; 0x19f0 <__floatsisf+0x74>
    19d4:	96 e8       	ldi	r25, 0x86	; 134
    19d6:	86 2f       	mov	r24, r22
    19d8:	70 e0       	ldi	r23, 0x00	; 0
    19da:	60 e0       	ldi	r22, 0x00	; 0
    19dc:	2a f0       	brmi	.+10     	; 0x19e8 <__floatsisf+0x6c>
    19de:	9a 95       	dec	r25
    19e0:	66 0f       	add	r22, r22
    19e2:	77 1f       	adc	r23, r23
    19e4:	88 1f       	adc	r24, r24
    19e6:	da f7       	brpl	.-10     	; 0x19de <__floatsisf+0x62>
    19e8:	88 0f       	add	r24, r24
    19ea:	96 95       	lsr	r25
    19ec:	87 95       	ror	r24
    19ee:	97 f9       	bld	r25, 7
    19f0:	08 95       	ret

000019f2 <__mulsf3>:
    19f2:	0b d0       	rcall	.+22     	; 0x1a0a <__mulsf3x>
    19f4:	78 c0       	rjmp	.+240    	; 0x1ae6 <__fp_round>
    19f6:	69 d0       	rcall	.+210    	; 0x1aca <__fp_pscA>
    19f8:	28 f0       	brcs	.+10     	; 0x1a04 <__mulsf3+0x12>
    19fa:	6e d0       	rcall	.+220    	; 0x1ad8 <__fp_pscB>
    19fc:	18 f0       	brcs	.+6      	; 0x1a04 <__mulsf3+0x12>
    19fe:	95 23       	and	r25, r21
    1a00:	09 f0       	breq	.+2      	; 0x1a04 <__mulsf3+0x12>
    1a02:	5a c0       	rjmp	.+180    	; 0x1ab8 <__fp_inf>
    1a04:	5f c0       	rjmp	.+190    	; 0x1ac4 <__fp_nan>
    1a06:	11 24       	eor	r1, r1
    1a08:	a2 c0       	rjmp	.+324    	; 0x1b4e <__fp_szero>

00001a0a <__mulsf3x>:
    1a0a:	7e d0       	rcall	.+252    	; 0x1b08 <__fp_split3>
    1a0c:	a0 f3       	brcs	.-24     	; 0x19f6 <__mulsf3+0x4>

00001a0e <__mulsf3_pse>:
    1a0e:	95 9f       	mul	r25, r21
    1a10:	d1 f3       	breq	.-12     	; 0x1a06 <__mulsf3+0x14>
    1a12:	95 0f       	add	r25, r21
    1a14:	50 e0       	ldi	r21, 0x00	; 0
    1a16:	55 1f       	adc	r21, r21
    1a18:	62 9f       	mul	r22, r18
    1a1a:	f0 01       	movw	r30, r0
    1a1c:	72 9f       	mul	r23, r18
    1a1e:	bb 27       	eor	r27, r27
    1a20:	f0 0d       	add	r31, r0
    1a22:	b1 1d       	adc	r27, r1
    1a24:	63 9f       	mul	r22, r19
    1a26:	aa 27       	eor	r26, r26
    1a28:	f0 0d       	add	r31, r0
    1a2a:	b1 1d       	adc	r27, r1
    1a2c:	aa 1f       	adc	r26, r26
    1a2e:	64 9f       	mul	r22, r20
    1a30:	66 27       	eor	r22, r22
    1a32:	b0 0d       	add	r27, r0
    1a34:	a1 1d       	adc	r26, r1
    1a36:	66 1f       	adc	r22, r22
    1a38:	82 9f       	mul	r24, r18
    1a3a:	22 27       	eor	r18, r18
    1a3c:	b0 0d       	add	r27, r0
    1a3e:	a1 1d       	adc	r26, r1
    1a40:	62 1f       	adc	r22, r18
    1a42:	73 9f       	mul	r23, r19
    1a44:	b0 0d       	add	r27, r0
    1a46:	a1 1d       	adc	r26, r1
    1a48:	62 1f       	adc	r22, r18
    1a4a:	83 9f       	mul	r24, r19
    1a4c:	a0 0d       	add	r26, r0
    1a4e:	61 1d       	adc	r22, r1
    1a50:	22 1f       	adc	r18, r18
    1a52:	74 9f       	mul	r23, r20
    1a54:	33 27       	eor	r19, r19
    1a56:	a0 0d       	add	r26, r0
    1a58:	61 1d       	adc	r22, r1
    1a5a:	23 1f       	adc	r18, r19
    1a5c:	84 9f       	mul	r24, r20
    1a5e:	60 0d       	add	r22, r0
    1a60:	21 1d       	adc	r18, r1
    1a62:	82 2f       	mov	r24, r18
    1a64:	76 2f       	mov	r23, r22
    1a66:	6a 2f       	mov	r22, r26
    1a68:	11 24       	eor	r1, r1
    1a6a:	9f 57       	subi	r25, 0x7F	; 127
    1a6c:	50 40       	sbci	r21, 0x00	; 0
    1a6e:	8a f0       	brmi	.+34     	; 0x1a92 <__mulsf3_pse+0x84>
    1a70:	e1 f0       	breq	.+56     	; 0x1aaa <__mulsf3_pse+0x9c>
    1a72:	88 23       	and	r24, r24
    1a74:	4a f0       	brmi	.+18     	; 0x1a88 <__mulsf3_pse+0x7a>
    1a76:	ee 0f       	add	r30, r30
    1a78:	ff 1f       	adc	r31, r31
    1a7a:	bb 1f       	adc	r27, r27
    1a7c:	66 1f       	adc	r22, r22
    1a7e:	77 1f       	adc	r23, r23
    1a80:	88 1f       	adc	r24, r24
    1a82:	91 50       	subi	r25, 0x01	; 1
    1a84:	50 40       	sbci	r21, 0x00	; 0
    1a86:	a9 f7       	brne	.-22     	; 0x1a72 <__mulsf3_pse+0x64>
    1a88:	9e 3f       	cpi	r25, 0xFE	; 254
    1a8a:	51 05       	cpc	r21, r1
    1a8c:	70 f0       	brcs	.+28     	; 0x1aaa <__mulsf3_pse+0x9c>
    1a8e:	14 c0       	rjmp	.+40     	; 0x1ab8 <__fp_inf>
    1a90:	5e c0       	rjmp	.+188    	; 0x1b4e <__fp_szero>
    1a92:	5f 3f       	cpi	r21, 0xFF	; 255
    1a94:	ec f3       	brlt	.-6      	; 0x1a90 <__mulsf3_pse+0x82>
    1a96:	98 3e       	cpi	r25, 0xE8	; 232
    1a98:	dc f3       	brlt	.-10     	; 0x1a90 <__mulsf3_pse+0x82>
    1a9a:	86 95       	lsr	r24
    1a9c:	77 95       	ror	r23
    1a9e:	67 95       	ror	r22
    1aa0:	b7 95       	ror	r27
    1aa2:	f7 95       	ror	r31
    1aa4:	e7 95       	ror	r30
    1aa6:	9f 5f       	subi	r25, 0xFF	; 255
    1aa8:	c1 f7       	brne	.-16     	; 0x1a9a <__mulsf3_pse+0x8c>
    1aaa:	fe 2b       	or	r31, r30
    1aac:	88 0f       	add	r24, r24
    1aae:	91 1d       	adc	r25, r1
    1ab0:	96 95       	lsr	r25
    1ab2:	87 95       	ror	r24
    1ab4:	97 f9       	bld	r25, 7
    1ab6:	08 95       	ret

00001ab8 <__fp_inf>:
    1ab8:	97 f9       	bld	r25, 7
    1aba:	9f 67       	ori	r25, 0x7F	; 127
    1abc:	80 e8       	ldi	r24, 0x80	; 128
    1abe:	70 e0       	ldi	r23, 0x00	; 0
    1ac0:	60 e0       	ldi	r22, 0x00	; 0
    1ac2:	08 95       	ret

00001ac4 <__fp_nan>:
    1ac4:	9f ef       	ldi	r25, 0xFF	; 255
    1ac6:	80 ec       	ldi	r24, 0xC0	; 192
    1ac8:	08 95       	ret

00001aca <__fp_pscA>:
    1aca:	00 24       	eor	r0, r0
    1acc:	0a 94       	dec	r0
    1ace:	16 16       	cp	r1, r22
    1ad0:	17 06       	cpc	r1, r23
    1ad2:	18 06       	cpc	r1, r24
    1ad4:	09 06       	cpc	r0, r25
    1ad6:	08 95       	ret

00001ad8 <__fp_pscB>:
    1ad8:	00 24       	eor	r0, r0
    1ada:	0a 94       	dec	r0
    1adc:	12 16       	cp	r1, r18
    1ade:	13 06       	cpc	r1, r19
    1ae0:	14 06       	cpc	r1, r20
    1ae2:	05 06       	cpc	r0, r21
    1ae4:	08 95       	ret

00001ae6 <__fp_round>:
    1ae6:	09 2e       	mov	r0, r25
    1ae8:	03 94       	inc	r0
    1aea:	00 0c       	add	r0, r0
    1aec:	11 f4       	brne	.+4      	; 0x1af2 <__fp_round+0xc>
    1aee:	88 23       	and	r24, r24
    1af0:	52 f0       	brmi	.+20     	; 0x1b06 <__fp_round+0x20>
    1af2:	bb 0f       	add	r27, r27
    1af4:	40 f4       	brcc	.+16     	; 0x1b06 <__fp_round+0x20>
    1af6:	bf 2b       	or	r27, r31
    1af8:	11 f4       	brne	.+4      	; 0x1afe <__fp_round+0x18>
    1afa:	60 ff       	sbrs	r22, 0
    1afc:	04 c0       	rjmp	.+8      	; 0x1b06 <__fp_round+0x20>
    1afe:	6f 5f       	subi	r22, 0xFF	; 255
    1b00:	7f 4f       	sbci	r23, 0xFF	; 255
    1b02:	8f 4f       	sbci	r24, 0xFF	; 255
    1b04:	9f 4f       	sbci	r25, 0xFF	; 255
    1b06:	08 95       	ret

00001b08 <__fp_split3>:
    1b08:	57 fd       	sbrc	r21, 7
    1b0a:	90 58       	subi	r25, 0x80	; 128
    1b0c:	44 0f       	add	r20, r20
    1b0e:	55 1f       	adc	r21, r21
    1b10:	59 f0       	breq	.+22     	; 0x1b28 <__fp_splitA+0x10>
    1b12:	5f 3f       	cpi	r21, 0xFF	; 255
    1b14:	71 f0       	breq	.+28     	; 0x1b32 <__fp_splitA+0x1a>
    1b16:	47 95       	ror	r20

00001b18 <__fp_splitA>:
    1b18:	88 0f       	add	r24, r24
    1b1a:	97 fb       	bst	r25, 7
    1b1c:	99 1f       	adc	r25, r25
    1b1e:	61 f0       	breq	.+24     	; 0x1b38 <__fp_splitA+0x20>
    1b20:	9f 3f       	cpi	r25, 0xFF	; 255
    1b22:	79 f0       	breq	.+30     	; 0x1b42 <__fp_splitA+0x2a>
    1b24:	87 95       	ror	r24
    1b26:	08 95       	ret
    1b28:	12 16       	cp	r1, r18
    1b2a:	13 06       	cpc	r1, r19
    1b2c:	14 06       	cpc	r1, r20
    1b2e:	55 1f       	adc	r21, r21
    1b30:	f2 cf       	rjmp	.-28     	; 0x1b16 <__fp_split3+0xe>
    1b32:	46 95       	lsr	r20
    1b34:	f1 df       	rcall	.-30     	; 0x1b18 <__fp_splitA>
    1b36:	08 c0       	rjmp	.+16     	; 0x1b48 <__fp_splitA+0x30>
    1b38:	16 16       	cp	r1, r22
    1b3a:	17 06       	cpc	r1, r23
    1b3c:	18 06       	cpc	r1, r24
    1b3e:	99 1f       	adc	r25, r25
    1b40:	f1 cf       	rjmp	.-30     	; 0x1b24 <__fp_splitA+0xc>
    1b42:	86 95       	lsr	r24
    1b44:	71 05       	cpc	r23, r1
    1b46:	61 05       	cpc	r22, r1
    1b48:	08 94       	sec
    1b4a:	08 95       	ret

00001b4c <__fp_zero>:
    1b4c:	e8 94       	clt

00001b4e <__fp_szero>:
    1b4e:	bb 27       	eor	r27, r27
    1b50:	66 27       	eor	r22, r22
    1b52:	77 27       	eor	r23, r23
    1b54:	cb 01       	movw	r24, r22
    1b56:	97 f9       	bld	r25, 7
    1b58:	08 95       	ret

00001b5a <__ftoa_engine>:
    1b5a:	28 30       	cpi	r18, 0x08	; 8
    1b5c:	08 f0       	brcs	.+2      	; 0x1b60 <__ftoa_engine+0x6>
    1b5e:	27 e0       	ldi	r18, 0x07	; 7
    1b60:	33 27       	eor	r19, r19
    1b62:	da 01       	movw	r26, r20
    1b64:	99 0f       	add	r25, r25
    1b66:	31 1d       	adc	r19, r1
    1b68:	87 fd       	sbrc	r24, 7
    1b6a:	91 60       	ori	r25, 0x01	; 1
    1b6c:	00 96       	adiw	r24, 0x00	; 0
    1b6e:	61 05       	cpc	r22, r1
    1b70:	71 05       	cpc	r23, r1
    1b72:	39 f4       	brne	.+14     	; 0x1b82 <__ftoa_engine+0x28>
    1b74:	32 60       	ori	r19, 0x02	; 2
    1b76:	2e 5f       	subi	r18, 0xFE	; 254
    1b78:	3d 93       	st	X+, r19
    1b7a:	30 e3       	ldi	r19, 0x30	; 48
    1b7c:	2a 95       	dec	r18
    1b7e:	e1 f7       	brne	.-8      	; 0x1b78 <__ftoa_engine+0x1e>
    1b80:	08 95       	ret
    1b82:	9f 3f       	cpi	r25, 0xFF	; 255
    1b84:	30 f0       	brcs	.+12     	; 0x1b92 <__ftoa_engine+0x38>
    1b86:	80 38       	cpi	r24, 0x80	; 128
    1b88:	71 05       	cpc	r23, r1
    1b8a:	61 05       	cpc	r22, r1
    1b8c:	09 f0       	breq	.+2      	; 0x1b90 <__ftoa_engine+0x36>
    1b8e:	3c 5f       	subi	r19, 0xFC	; 252
    1b90:	3c 5f       	subi	r19, 0xFC	; 252
    1b92:	3d 93       	st	X+, r19
    1b94:	91 30       	cpi	r25, 0x01	; 1
    1b96:	08 f0       	brcs	.+2      	; 0x1b9a <__ftoa_engine+0x40>
    1b98:	80 68       	ori	r24, 0x80	; 128
    1b9a:	91 1d       	adc	r25, r1
    1b9c:	df 93       	push	r29
    1b9e:	cf 93       	push	r28
    1ba0:	1f 93       	push	r17
    1ba2:	0f 93       	push	r16
    1ba4:	ff 92       	push	r15
    1ba6:	ef 92       	push	r14
    1ba8:	19 2f       	mov	r17, r25
    1baa:	98 7f       	andi	r25, 0xF8	; 248
    1bac:	96 95       	lsr	r25
    1bae:	e9 2f       	mov	r30, r25
    1bb0:	96 95       	lsr	r25
    1bb2:	96 95       	lsr	r25
    1bb4:	e9 0f       	add	r30, r25
    1bb6:	ff 27       	eor	r31, r31
    1bb8:	ea 5b       	subi	r30, 0xBA	; 186
    1bba:	fe 4f       	sbci	r31, 0xFE	; 254
    1bbc:	99 27       	eor	r25, r25
    1bbe:	33 27       	eor	r19, r19
    1bc0:	ee 24       	eor	r14, r14
    1bc2:	ff 24       	eor	r15, r15
    1bc4:	a7 01       	movw	r20, r14
    1bc6:	e7 01       	movw	r28, r14
    1bc8:	05 90       	lpm	r0, Z+
    1bca:	08 94       	sec
    1bcc:	07 94       	ror	r0
    1bce:	28 f4       	brcc	.+10     	; 0x1bda <__ftoa_engine+0x80>
    1bd0:	36 0f       	add	r19, r22
    1bd2:	e7 1e       	adc	r14, r23
    1bd4:	f8 1e       	adc	r15, r24
    1bd6:	49 1f       	adc	r20, r25
    1bd8:	51 1d       	adc	r21, r1
    1bda:	66 0f       	add	r22, r22
    1bdc:	77 1f       	adc	r23, r23
    1bde:	88 1f       	adc	r24, r24
    1be0:	99 1f       	adc	r25, r25
    1be2:	06 94       	lsr	r0
    1be4:	a1 f7       	brne	.-24     	; 0x1bce <__ftoa_engine+0x74>
    1be6:	05 90       	lpm	r0, Z+
    1be8:	07 94       	ror	r0
    1bea:	28 f4       	brcc	.+10     	; 0x1bf6 <__ftoa_engine+0x9c>
    1bec:	e7 0e       	add	r14, r23
    1bee:	f8 1e       	adc	r15, r24
    1bf0:	49 1f       	adc	r20, r25
    1bf2:	56 1f       	adc	r21, r22
    1bf4:	c1 1d       	adc	r28, r1
    1bf6:	77 0f       	add	r23, r23
    1bf8:	88 1f       	adc	r24, r24
    1bfa:	99 1f       	adc	r25, r25
    1bfc:	66 1f       	adc	r22, r22
    1bfe:	06 94       	lsr	r0
    1c00:	a1 f7       	brne	.-24     	; 0x1bea <__ftoa_engine+0x90>
    1c02:	05 90       	lpm	r0, Z+
    1c04:	07 94       	ror	r0
    1c06:	28 f4       	brcc	.+10     	; 0x1c12 <__ftoa_engine+0xb8>
    1c08:	f8 0e       	add	r15, r24
    1c0a:	49 1f       	adc	r20, r25
    1c0c:	56 1f       	adc	r21, r22
    1c0e:	c7 1f       	adc	r28, r23
    1c10:	d1 1d       	adc	r29, r1
    1c12:	88 0f       	add	r24, r24
    1c14:	99 1f       	adc	r25, r25
    1c16:	66 1f       	adc	r22, r22
    1c18:	77 1f       	adc	r23, r23
    1c1a:	06 94       	lsr	r0
    1c1c:	a1 f7       	brne	.-24     	; 0x1c06 <__ftoa_engine+0xac>
    1c1e:	05 90       	lpm	r0, Z+
    1c20:	07 94       	ror	r0
    1c22:	20 f4       	brcc	.+8      	; 0x1c2c <__ftoa_engine+0xd2>
    1c24:	49 0f       	add	r20, r25
    1c26:	56 1f       	adc	r21, r22
    1c28:	c7 1f       	adc	r28, r23
    1c2a:	d8 1f       	adc	r29, r24
    1c2c:	99 0f       	add	r25, r25
    1c2e:	66 1f       	adc	r22, r22
    1c30:	77 1f       	adc	r23, r23
    1c32:	88 1f       	adc	r24, r24
    1c34:	06 94       	lsr	r0
    1c36:	a9 f7       	brne	.-22     	; 0x1c22 <__ftoa_engine+0xc8>
    1c38:	84 91       	lpm	r24, Z
    1c3a:	10 95       	com	r17
    1c3c:	17 70       	andi	r17, 0x07	; 7
    1c3e:	41 f0       	breq	.+16     	; 0x1c50 <__ftoa_engine+0xf6>
    1c40:	d6 95       	lsr	r29
    1c42:	c7 95       	ror	r28
    1c44:	57 95       	ror	r21
    1c46:	47 95       	ror	r20
    1c48:	f7 94       	ror	r15
    1c4a:	e7 94       	ror	r14
    1c4c:	1a 95       	dec	r17
    1c4e:	c1 f7       	brne	.-16     	; 0x1c40 <__ftoa_engine+0xe6>
    1c50:	ec ee       	ldi	r30, 0xEC	; 236
    1c52:	f0 e0       	ldi	r31, 0x00	; 0
    1c54:	68 94       	set
    1c56:	15 90       	lpm	r1, Z+
    1c58:	15 91       	lpm	r17, Z+
    1c5a:	35 91       	lpm	r19, Z+
    1c5c:	65 91       	lpm	r22, Z+
    1c5e:	95 91       	lpm	r25, Z+
    1c60:	05 90       	lpm	r0, Z+
    1c62:	7f e2       	ldi	r23, 0x2F	; 47
    1c64:	73 95       	inc	r23
    1c66:	e1 18       	sub	r14, r1
    1c68:	f1 0a       	sbc	r15, r17
    1c6a:	43 0b       	sbc	r20, r19
    1c6c:	56 0b       	sbc	r21, r22
    1c6e:	c9 0b       	sbc	r28, r25
    1c70:	d0 09       	sbc	r29, r0
    1c72:	c0 f7       	brcc	.-16     	; 0x1c64 <__ftoa_engine+0x10a>
    1c74:	e1 0c       	add	r14, r1
    1c76:	f1 1e       	adc	r15, r17
    1c78:	43 1f       	adc	r20, r19
    1c7a:	56 1f       	adc	r21, r22
    1c7c:	c9 1f       	adc	r28, r25
    1c7e:	d0 1d       	adc	r29, r0
    1c80:	7e f4       	brtc	.+30     	; 0x1ca0 <__ftoa_engine+0x146>
    1c82:	70 33       	cpi	r23, 0x30	; 48
    1c84:	11 f4       	brne	.+4      	; 0x1c8a <__ftoa_engine+0x130>
    1c86:	8a 95       	dec	r24
    1c88:	e6 cf       	rjmp	.-52     	; 0x1c56 <__ftoa_engine+0xfc>
    1c8a:	e8 94       	clt
    1c8c:	01 50       	subi	r16, 0x01	; 1
    1c8e:	30 f0       	brcs	.+12     	; 0x1c9c <__ftoa_engine+0x142>
    1c90:	08 0f       	add	r16, r24
    1c92:	0a f4       	brpl	.+2      	; 0x1c96 <__ftoa_engine+0x13c>
    1c94:	00 27       	eor	r16, r16
    1c96:	02 17       	cp	r16, r18
    1c98:	08 f4       	brcc	.+2      	; 0x1c9c <__ftoa_engine+0x142>
    1c9a:	20 2f       	mov	r18, r16
    1c9c:	23 95       	inc	r18
    1c9e:	02 2f       	mov	r16, r18
    1ca0:	7a 33       	cpi	r23, 0x3A	; 58
    1ca2:	28 f0       	brcs	.+10     	; 0x1cae <__ftoa_engine+0x154>
    1ca4:	79 e3       	ldi	r23, 0x39	; 57
    1ca6:	7d 93       	st	X+, r23
    1ca8:	2a 95       	dec	r18
    1caa:	e9 f7       	brne	.-6      	; 0x1ca6 <__ftoa_engine+0x14c>
    1cac:	10 c0       	rjmp	.+32     	; 0x1cce <__ftoa_engine+0x174>
    1cae:	7d 93       	st	X+, r23
    1cb0:	2a 95       	dec	r18
    1cb2:	89 f6       	brne	.-94     	; 0x1c56 <__ftoa_engine+0xfc>
    1cb4:	06 94       	lsr	r0
    1cb6:	97 95       	ror	r25
    1cb8:	67 95       	ror	r22
    1cba:	37 95       	ror	r19
    1cbc:	17 95       	ror	r17
    1cbe:	17 94       	ror	r1
    1cc0:	e1 18       	sub	r14, r1
    1cc2:	f1 0a       	sbc	r15, r17
    1cc4:	43 0b       	sbc	r20, r19
    1cc6:	56 0b       	sbc	r21, r22
    1cc8:	c9 0b       	sbc	r28, r25
    1cca:	d0 09       	sbc	r29, r0
    1ccc:	98 f0       	brcs	.+38     	; 0x1cf4 <__ftoa_engine+0x19a>
    1cce:	23 95       	inc	r18
    1cd0:	7e 91       	ld	r23, -X
    1cd2:	73 95       	inc	r23
    1cd4:	7a 33       	cpi	r23, 0x3A	; 58
    1cd6:	08 f0       	brcs	.+2      	; 0x1cda <__ftoa_engine+0x180>
    1cd8:	70 e3       	ldi	r23, 0x30	; 48
    1cda:	7c 93       	st	X, r23
    1cdc:	20 13       	cpse	r18, r16
    1cde:	b8 f7       	brcc	.-18     	; 0x1cce <__ftoa_engine+0x174>
    1ce0:	7e 91       	ld	r23, -X
    1ce2:	70 61       	ori	r23, 0x10	; 16
    1ce4:	7d 93       	st	X+, r23
    1ce6:	30 f0       	brcs	.+12     	; 0x1cf4 <__ftoa_engine+0x19a>
    1ce8:	83 95       	inc	r24
    1cea:	71 e3       	ldi	r23, 0x31	; 49
    1cec:	7d 93       	st	X+, r23
    1cee:	70 e3       	ldi	r23, 0x30	; 48
    1cf0:	2a 95       	dec	r18
    1cf2:	e1 f7       	brne	.-8      	; 0x1cec <__ftoa_engine+0x192>
    1cf4:	11 24       	eor	r1, r1
    1cf6:	ef 90       	pop	r14
    1cf8:	ff 90       	pop	r15
    1cfa:	0f 91       	pop	r16
    1cfc:	1f 91       	pop	r17
    1cfe:	cf 91       	pop	r28
    1d00:	df 91       	pop	r29
    1d02:	99 27       	eor	r25, r25
    1d04:	87 fd       	sbrc	r24, 7
    1d06:	90 95       	com	r25
    1d08:	08 95       	ret

00001d0a <isspace>:
    1d0a:	91 11       	cpse	r25, r1
    1d0c:	64 c1       	rjmp	.+712    	; 0x1fd6 <__ctype_isfalse>
    1d0e:	80 32       	cpi	r24, 0x20	; 32
    1d10:	19 f0       	breq	.+6      	; 0x1d18 <isspace+0xe>
    1d12:	89 50       	subi	r24, 0x09	; 9
    1d14:	85 50       	subi	r24, 0x05	; 5
    1d16:	d0 f7       	brcc	.-12     	; 0x1d0c <isspace+0x2>
    1d18:	08 95       	ret

00001d1a <tolower>:
    1d1a:	91 11       	cpse	r25, r1
    1d1c:	08 95       	ret
    1d1e:	81 54       	subi	r24, 0x41	; 65
    1d20:	8a 51       	subi	r24, 0x1A	; 26
    1d22:	08 f4       	brcc	.+2      	; 0x1d26 <tolower+0xc>
    1d24:	80 5e       	subi	r24, 0xE0	; 224
    1d26:	85 5a       	subi	r24, 0xA5	; 165
    1d28:	08 95       	ret

00001d2a <strchr_P>:
    1d2a:	fc 01       	movw	r30, r24
    1d2c:	05 90       	lpm	r0, Z+
    1d2e:	06 16       	cp	r0, r22
    1d30:	21 f0       	breq	.+8      	; 0x1d3a <strchr_P+0x10>
    1d32:	00 20       	and	r0, r0
    1d34:	d9 f7       	brne	.-10     	; 0x1d2c <strchr_P+0x2>
    1d36:	c0 01       	movw	r24, r0
    1d38:	08 95       	ret
    1d3a:	31 97       	sbiw	r30, 0x01	; 1
    1d3c:	cf 01       	movw	r24, r30
    1d3e:	08 95       	ret

00001d40 <strnlen_P>:
    1d40:	fc 01       	movw	r30, r24
    1d42:	05 90       	lpm	r0, Z+
    1d44:	61 50       	subi	r22, 0x01	; 1
    1d46:	70 40       	sbci	r23, 0x00	; 0
    1d48:	01 10       	cpse	r0, r1
    1d4a:	d8 f7       	brcc	.-10     	; 0x1d42 <strnlen_P+0x2>
    1d4c:	80 95       	com	r24
    1d4e:	90 95       	com	r25
    1d50:	8e 0f       	add	r24, r30
    1d52:	9f 1f       	adc	r25, r31
    1d54:	08 95       	ret

00001d56 <strnlen>:
    1d56:	fc 01       	movw	r30, r24
    1d58:	61 50       	subi	r22, 0x01	; 1
    1d5a:	70 40       	sbci	r23, 0x00	; 0
    1d5c:	01 90       	ld	r0, Z+
    1d5e:	01 10       	cpse	r0, r1
    1d60:	d8 f7       	brcc	.-10     	; 0x1d58 <strnlen+0x2>
    1d62:	80 95       	com	r24
    1d64:	90 95       	com	r25
    1d66:	8e 0f       	add	r24, r30
    1d68:	9f 1f       	adc	r25, r31
    1d6a:	08 95       	ret

00001d6c <fgetc>:
    1d6c:	cf 93       	push	r28
    1d6e:	df 93       	push	r29
    1d70:	ec 01       	movw	r28, r24
    1d72:	2b 81       	ldd	r18, Y+3	; 0x03
    1d74:	20 ff       	sbrs	r18, 0
    1d76:	33 c0       	rjmp	.+102    	; 0x1dde <fgetc+0x72>
    1d78:	26 ff       	sbrs	r18, 6
    1d7a:	0a c0       	rjmp	.+20     	; 0x1d90 <fgetc+0x24>
    1d7c:	2f 7b       	andi	r18, 0xBF	; 191
    1d7e:	2b 83       	std	Y+3, r18	; 0x03
    1d80:	8e 81       	ldd	r24, Y+6	; 0x06
    1d82:	9f 81       	ldd	r25, Y+7	; 0x07
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	9f 83       	std	Y+7, r25	; 0x07
    1d88:	8e 83       	std	Y+6, r24	; 0x06
    1d8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d8c:	90 e0       	ldi	r25, 0x00	; 0
    1d8e:	29 c0       	rjmp	.+82     	; 0x1de2 <fgetc+0x76>
    1d90:	22 ff       	sbrs	r18, 2
    1d92:	0f c0       	rjmp	.+30     	; 0x1db2 <fgetc+0x46>
    1d94:	e8 81       	ld	r30, Y
    1d96:	f9 81       	ldd	r31, Y+1	; 0x01
    1d98:	80 81       	ld	r24, Z
    1d9a:	08 2e       	mov	r0, r24
    1d9c:	00 0c       	add	r0, r0
    1d9e:	99 0b       	sbc	r25, r25
    1da0:	00 97       	sbiw	r24, 0x00	; 0
    1da2:	19 f4       	brne	.+6      	; 0x1daa <fgetc+0x3e>
    1da4:	20 62       	ori	r18, 0x20	; 32
    1da6:	2b 83       	std	Y+3, r18	; 0x03
    1da8:	1a c0       	rjmp	.+52     	; 0x1dde <fgetc+0x72>
    1daa:	31 96       	adiw	r30, 0x01	; 1
    1dac:	f9 83       	std	Y+1, r31	; 0x01
    1dae:	e8 83       	st	Y, r30
    1db0:	0e c0       	rjmp	.+28     	; 0x1dce <fgetc+0x62>
    1db2:	ea 85       	ldd	r30, Y+10	; 0x0a
    1db4:	fb 85       	ldd	r31, Y+11	; 0x0b
    1db6:	19 95       	eicall
    1db8:	97 ff       	sbrs	r25, 7
    1dba:	09 c0       	rjmp	.+18     	; 0x1dce <fgetc+0x62>
    1dbc:	2b 81       	ldd	r18, Y+3	; 0x03
    1dbe:	01 96       	adiw	r24, 0x01	; 1
    1dc0:	11 f0       	breq	.+4      	; 0x1dc6 <fgetc+0x5a>
    1dc2:	80 e2       	ldi	r24, 0x20	; 32
    1dc4:	01 c0       	rjmp	.+2      	; 0x1dc8 <fgetc+0x5c>
    1dc6:	80 e1       	ldi	r24, 0x10	; 16
    1dc8:	82 2b       	or	r24, r18
    1dca:	8b 83       	std	Y+3, r24	; 0x03
    1dcc:	08 c0       	rjmp	.+16     	; 0x1dde <fgetc+0x72>
    1dce:	2e 81       	ldd	r18, Y+6	; 0x06
    1dd0:	3f 81       	ldd	r19, Y+7	; 0x07
    1dd2:	2f 5f       	subi	r18, 0xFF	; 255
    1dd4:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd6:	3f 83       	std	Y+7, r19	; 0x07
    1dd8:	2e 83       	std	Y+6, r18	; 0x06
    1dda:	99 27       	eor	r25, r25
    1ddc:	02 c0       	rjmp	.+4      	; 0x1de2 <fgetc+0x76>
    1dde:	8f ef       	ldi	r24, 0xFF	; 255
    1de0:	9f ef       	ldi	r25, 0xFF	; 255
    1de2:	df 91       	pop	r29
    1de4:	cf 91       	pop	r28
    1de6:	08 95       	ret

00001de8 <fputc>:
    1de8:	0f 93       	push	r16
    1dea:	1f 93       	push	r17
    1dec:	cf 93       	push	r28
    1dee:	df 93       	push	r29
    1df0:	fb 01       	movw	r30, r22
    1df2:	23 81       	ldd	r18, Z+3	; 0x03
    1df4:	21 fd       	sbrc	r18, 1
    1df6:	03 c0       	rjmp	.+6      	; 0x1dfe <fputc+0x16>
    1df8:	8f ef       	ldi	r24, 0xFF	; 255
    1dfa:	9f ef       	ldi	r25, 0xFF	; 255
    1dfc:	2c c0       	rjmp	.+88     	; 0x1e56 <fputc+0x6e>
    1dfe:	22 ff       	sbrs	r18, 2
    1e00:	16 c0       	rjmp	.+44     	; 0x1e2e <fputc+0x46>
    1e02:	46 81       	ldd	r20, Z+6	; 0x06
    1e04:	57 81       	ldd	r21, Z+7	; 0x07
    1e06:	24 81       	ldd	r18, Z+4	; 0x04
    1e08:	35 81       	ldd	r19, Z+5	; 0x05
    1e0a:	42 17       	cp	r20, r18
    1e0c:	53 07       	cpc	r21, r19
    1e0e:	44 f4       	brge	.+16     	; 0x1e20 <fputc+0x38>
    1e10:	a0 81       	ld	r26, Z
    1e12:	b1 81       	ldd	r27, Z+1	; 0x01
    1e14:	9d 01       	movw	r18, r26
    1e16:	2f 5f       	subi	r18, 0xFF	; 255
    1e18:	3f 4f       	sbci	r19, 0xFF	; 255
    1e1a:	31 83       	std	Z+1, r19	; 0x01
    1e1c:	20 83       	st	Z, r18
    1e1e:	8c 93       	st	X, r24
    1e20:	26 81       	ldd	r18, Z+6	; 0x06
    1e22:	37 81       	ldd	r19, Z+7	; 0x07
    1e24:	2f 5f       	subi	r18, 0xFF	; 255
    1e26:	3f 4f       	sbci	r19, 0xFF	; 255
    1e28:	37 83       	std	Z+7, r19	; 0x07
    1e2a:	26 83       	std	Z+6, r18	; 0x06
    1e2c:	14 c0       	rjmp	.+40     	; 0x1e56 <fputc+0x6e>
    1e2e:	8b 01       	movw	r16, r22
    1e30:	ec 01       	movw	r28, r24
    1e32:	fb 01       	movw	r30, r22
    1e34:	00 84       	ldd	r0, Z+8	; 0x08
    1e36:	f1 85       	ldd	r31, Z+9	; 0x09
    1e38:	e0 2d       	mov	r30, r0
    1e3a:	19 95       	eicall
    1e3c:	89 2b       	or	r24, r25
    1e3e:	e1 f6       	brne	.-72     	; 0x1df8 <fputc+0x10>
    1e40:	d8 01       	movw	r26, r16
    1e42:	16 96       	adiw	r26, 0x06	; 6
    1e44:	8d 91       	ld	r24, X+
    1e46:	9c 91       	ld	r25, X
    1e48:	17 97       	sbiw	r26, 0x07	; 7
    1e4a:	01 96       	adiw	r24, 0x01	; 1
    1e4c:	17 96       	adiw	r26, 0x07	; 7
    1e4e:	9c 93       	st	X, r25
    1e50:	8e 93       	st	-X, r24
    1e52:	16 97       	sbiw	r26, 0x06	; 6
    1e54:	ce 01       	movw	r24, r28
    1e56:	df 91       	pop	r29
    1e58:	cf 91       	pop	r28
    1e5a:	1f 91       	pop	r17
    1e5c:	0f 91       	pop	r16
    1e5e:	08 95       	ret

00001e60 <printf>:
    1e60:	cf 93       	push	r28
    1e62:	df 93       	push	r29
    1e64:	cd b7       	in	r28, 0x3d	; 61
    1e66:	de b7       	in	r29, 0x3e	; 62
    1e68:	ae 01       	movw	r20, r28
    1e6a:	4a 5f       	subi	r20, 0xFA	; 250
    1e6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e6e:	fa 01       	movw	r30, r20
    1e70:	61 91       	ld	r22, Z+
    1e72:	71 91       	ld	r23, Z+
    1e74:	af 01       	movw	r20, r30
    1e76:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <__data_end+0x2>
    1e7a:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <__data_end+0x3>
    1e7e:	0e 94 ff 04 	call	0x9fe	; 0x9fe <vfprintf>
    1e82:	df 91       	pop	r29
    1e84:	cf 91       	pop	r28
    1e86:	08 95       	ret

00001e88 <puts>:
    1e88:	0f 93       	push	r16
    1e8a:	1f 93       	push	r17
    1e8c:	cf 93       	push	r28
    1e8e:	df 93       	push	r29
    1e90:	e0 91 6c 02 	lds	r30, 0x026C	; 0x80026c <__data_end+0x2>
    1e94:	f0 91 6d 02 	lds	r31, 0x026D	; 0x80026d <__data_end+0x3>
    1e98:	23 81       	ldd	r18, Z+3	; 0x03
    1e9a:	21 ff       	sbrs	r18, 1
    1e9c:	1b c0       	rjmp	.+54     	; 0x1ed4 <puts+0x4c>
    1e9e:	8c 01       	movw	r16, r24
    1ea0:	d0 e0       	ldi	r29, 0x00	; 0
    1ea2:	c0 e0       	ldi	r28, 0x00	; 0
    1ea4:	f8 01       	movw	r30, r16
    1ea6:	81 91       	ld	r24, Z+
    1ea8:	8f 01       	movw	r16, r30
    1eaa:	60 91 6c 02 	lds	r22, 0x026C	; 0x80026c <__data_end+0x2>
    1eae:	70 91 6d 02 	lds	r23, 0x026D	; 0x80026d <__data_end+0x3>
    1eb2:	db 01       	movw	r26, r22
    1eb4:	18 96       	adiw	r26, 0x08	; 8
    1eb6:	ed 91       	ld	r30, X+
    1eb8:	fc 91       	ld	r31, X
    1eba:	19 97       	sbiw	r26, 0x09	; 9
    1ebc:	88 23       	and	r24, r24
    1ebe:	31 f0       	breq	.+12     	; 0x1ecc <puts+0x44>
    1ec0:	19 95       	eicall
    1ec2:	89 2b       	or	r24, r25
    1ec4:	79 f3       	breq	.-34     	; 0x1ea4 <puts+0x1c>
    1ec6:	df ef       	ldi	r29, 0xFF	; 255
    1ec8:	cf ef       	ldi	r28, 0xFF	; 255
    1eca:	ec cf       	rjmp	.-40     	; 0x1ea4 <puts+0x1c>
    1ecc:	8a e0       	ldi	r24, 0x0A	; 10
    1ece:	19 95       	eicall
    1ed0:	89 2b       	or	r24, r25
    1ed2:	19 f0       	breq	.+6      	; 0x1eda <puts+0x52>
    1ed4:	8f ef       	ldi	r24, 0xFF	; 255
    1ed6:	9f ef       	ldi	r25, 0xFF	; 255
    1ed8:	02 c0       	rjmp	.+4      	; 0x1ede <puts+0x56>
    1eda:	8d 2f       	mov	r24, r29
    1edc:	9c 2f       	mov	r25, r28
    1ede:	df 91       	pop	r29
    1ee0:	cf 91       	pop	r28
    1ee2:	1f 91       	pop	r17
    1ee4:	0f 91       	pop	r16
    1ee6:	08 95       	ret

00001ee8 <ungetc>:
    1ee8:	fb 01       	movw	r30, r22
    1eea:	23 81       	ldd	r18, Z+3	; 0x03
    1eec:	20 ff       	sbrs	r18, 0
    1eee:	12 c0       	rjmp	.+36     	; 0x1f14 <ungetc+0x2c>
    1ef0:	26 fd       	sbrc	r18, 6
    1ef2:	10 c0       	rjmp	.+32     	; 0x1f14 <ungetc+0x2c>
    1ef4:	8f 3f       	cpi	r24, 0xFF	; 255
    1ef6:	3f ef       	ldi	r19, 0xFF	; 255
    1ef8:	93 07       	cpc	r25, r19
    1efa:	61 f0       	breq	.+24     	; 0x1f14 <ungetc+0x2c>
    1efc:	82 83       	std	Z+2, r24	; 0x02
    1efe:	2f 7d       	andi	r18, 0xDF	; 223
    1f00:	20 64       	ori	r18, 0x40	; 64
    1f02:	23 83       	std	Z+3, r18	; 0x03
    1f04:	26 81       	ldd	r18, Z+6	; 0x06
    1f06:	37 81       	ldd	r19, Z+7	; 0x07
    1f08:	21 50       	subi	r18, 0x01	; 1
    1f0a:	31 09       	sbc	r19, r1
    1f0c:	37 83       	std	Z+7, r19	; 0x07
    1f0e:	26 83       	std	Z+6, r18	; 0x06
    1f10:	99 27       	eor	r25, r25
    1f12:	08 95       	ret
    1f14:	8f ef       	ldi	r24, 0xFF	; 255
    1f16:	9f ef       	ldi	r25, 0xFF	; 255
    1f18:	08 95       	ret

00001f1a <__ultoa_invert>:
    1f1a:	fa 01       	movw	r30, r20
    1f1c:	aa 27       	eor	r26, r26
    1f1e:	28 30       	cpi	r18, 0x08	; 8
    1f20:	51 f1       	breq	.+84     	; 0x1f76 <__ultoa_invert+0x5c>
    1f22:	20 31       	cpi	r18, 0x10	; 16
    1f24:	81 f1       	breq	.+96     	; 0x1f86 <__ultoa_invert+0x6c>
    1f26:	e8 94       	clt
    1f28:	6f 93       	push	r22
    1f2a:	6e 7f       	andi	r22, 0xFE	; 254
    1f2c:	6e 5f       	subi	r22, 0xFE	; 254
    1f2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f30:	8f 4f       	sbci	r24, 0xFF	; 255
    1f32:	9f 4f       	sbci	r25, 0xFF	; 255
    1f34:	af 4f       	sbci	r26, 0xFF	; 255
    1f36:	b1 e0       	ldi	r27, 0x01	; 1
    1f38:	3e d0       	rcall	.+124    	; 0x1fb6 <__ultoa_invert+0x9c>
    1f3a:	b4 e0       	ldi	r27, 0x04	; 4
    1f3c:	3c d0       	rcall	.+120    	; 0x1fb6 <__ultoa_invert+0x9c>
    1f3e:	67 0f       	add	r22, r23
    1f40:	78 1f       	adc	r23, r24
    1f42:	89 1f       	adc	r24, r25
    1f44:	9a 1f       	adc	r25, r26
    1f46:	a1 1d       	adc	r26, r1
    1f48:	68 0f       	add	r22, r24
    1f4a:	79 1f       	adc	r23, r25
    1f4c:	8a 1f       	adc	r24, r26
    1f4e:	91 1d       	adc	r25, r1
    1f50:	a1 1d       	adc	r26, r1
    1f52:	6a 0f       	add	r22, r26
    1f54:	71 1d       	adc	r23, r1
    1f56:	81 1d       	adc	r24, r1
    1f58:	91 1d       	adc	r25, r1
    1f5a:	a1 1d       	adc	r26, r1
    1f5c:	20 d0       	rcall	.+64     	; 0x1f9e <__ultoa_invert+0x84>
    1f5e:	09 f4       	brne	.+2      	; 0x1f62 <__ultoa_invert+0x48>
    1f60:	68 94       	set
    1f62:	3f 91       	pop	r19
    1f64:	2a e0       	ldi	r18, 0x0A	; 10
    1f66:	26 9f       	mul	r18, r22
    1f68:	11 24       	eor	r1, r1
    1f6a:	30 19       	sub	r19, r0
    1f6c:	30 5d       	subi	r19, 0xD0	; 208
    1f6e:	31 93       	st	Z+, r19
    1f70:	de f6       	brtc	.-74     	; 0x1f28 <__ultoa_invert+0xe>
    1f72:	cf 01       	movw	r24, r30
    1f74:	08 95       	ret
    1f76:	46 2f       	mov	r20, r22
    1f78:	47 70       	andi	r20, 0x07	; 7
    1f7a:	40 5d       	subi	r20, 0xD0	; 208
    1f7c:	41 93       	st	Z+, r20
    1f7e:	b3 e0       	ldi	r27, 0x03	; 3
    1f80:	0f d0       	rcall	.+30     	; 0x1fa0 <__ultoa_invert+0x86>
    1f82:	c9 f7       	brne	.-14     	; 0x1f76 <__ultoa_invert+0x5c>
    1f84:	f6 cf       	rjmp	.-20     	; 0x1f72 <__ultoa_invert+0x58>
    1f86:	46 2f       	mov	r20, r22
    1f88:	4f 70       	andi	r20, 0x0F	; 15
    1f8a:	40 5d       	subi	r20, 0xD0	; 208
    1f8c:	4a 33       	cpi	r20, 0x3A	; 58
    1f8e:	18 f0       	brcs	.+6      	; 0x1f96 <__ultoa_invert+0x7c>
    1f90:	49 5d       	subi	r20, 0xD9	; 217
    1f92:	31 fd       	sbrc	r19, 1
    1f94:	40 52       	subi	r20, 0x20	; 32
    1f96:	41 93       	st	Z+, r20
    1f98:	02 d0       	rcall	.+4      	; 0x1f9e <__ultoa_invert+0x84>
    1f9a:	a9 f7       	brne	.-22     	; 0x1f86 <__ultoa_invert+0x6c>
    1f9c:	ea cf       	rjmp	.-44     	; 0x1f72 <__ultoa_invert+0x58>
    1f9e:	b4 e0       	ldi	r27, 0x04	; 4
    1fa0:	a6 95       	lsr	r26
    1fa2:	97 95       	ror	r25
    1fa4:	87 95       	ror	r24
    1fa6:	77 95       	ror	r23
    1fa8:	67 95       	ror	r22
    1faa:	ba 95       	dec	r27
    1fac:	c9 f7       	brne	.-14     	; 0x1fa0 <__ultoa_invert+0x86>
    1fae:	00 97       	sbiw	r24, 0x00	; 0
    1fb0:	61 05       	cpc	r22, r1
    1fb2:	71 05       	cpc	r23, r1
    1fb4:	08 95       	ret
    1fb6:	9b 01       	movw	r18, r22
    1fb8:	ac 01       	movw	r20, r24
    1fba:	0a 2e       	mov	r0, r26
    1fbc:	06 94       	lsr	r0
    1fbe:	57 95       	ror	r21
    1fc0:	47 95       	ror	r20
    1fc2:	37 95       	ror	r19
    1fc4:	27 95       	ror	r18
    1fc6:	ba 95       	dec	r27
    1fc8:	c9 f7       	brne	.-14     	; 0x1fbc <__ultoa_invert+0xa2>
    1fca:	62 0f       	add	r22, r18
    1fcc:	73 1f       	adc	r23, r19
    1fce:	84 1f       	adc	r24, r20
    1fd0:	95 1f       	adc	r25, r21
    1fd2:	a0 1d       	adc	r26, r0
    1fd4:	08 95       	ret

00001fd6 <__ctype_isfalse>:
    1fd6:	99 27       	eor	r25, r25
    1fd8:	88 27       	eor	r24, r24

00001fda <__ctype_istrue>:
    1fda:	08 95       	ret

00001fdc <_exit>:
    1fdc:	f8 94       	cli

00001fde <__stop_program>:
    1fde:	ff cf       	rjmp	.-2      	; 0x1fde <__stop_program>
