
RFID.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fa  00800200  0000213a  000021ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000213a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008002fa  008002fa  000022c8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000022c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002324  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022f2  00000000  00000000  000024bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000122d  00000000  00000000  000047ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001043  00000000  00000000  000059db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000330  00000000  00000000  00006a20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000854  00000000  00000000  00006d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f80  00000000  00000000  000075a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00008524  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c1       	rjmp	.+562    	; 0x234 <__ctors_end>
       2:	00 00       	nop
       4:	37 c1       	rjmp	.+622    	; 0x274 <__bad_interrupt>
       6:	00 00       	nop
       8:	35 c1       	rjmp	.+618    	; 0x274 <__bad_interrupt>
       a:	00 00       	nop
       c:	33 c1       	rjmp	.+614    	; 0x274 <__bad_interrupt>
       e:	00 00       	nop
      10:	31 c1       	rjmp	.+610    	; 0x274 <__bad_interrupt>
      12:	00 00       	nop
      14:	2f c1       	rjmp	.+606    	; 0x274 <__bad_interrupt>
      16:	00 00       	nop
      18:	2d c1       	rjmp	.+602    	; 0x274 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	2b c1       	rjmp	.+598    	; 0x274 <__bad_interrupt>
      1e:	00 00       	nop
      20:	29 c1       	rjmp	.+594    	; 0x274 <__bad_interrupt>
      22:	00 00       	nop
      24:	27 c1       	rjmp	.+590    	; 0x274 <__bad_interrupt>
      26:	00 00       	nop
      28:	25 c1       	rjmp	.+586    	; 0x274 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	23 c1       	rjmp	.+582    	; 0x274 <__bad_interrupt>
      2e:	00 00       	nop
      30:	21 c1       	rjmp	.+578    	; 0x274 <__bad_interrupt>
      32:	00 00       	nop
      34:	1f c1       	rjmp	.+574    	; 0x274 <__bad_interrupt>
      36:	00 00       	nop
      38:	1d c1       	rjmp	.+570    	; 0x274 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	1b c1       	rjmp	.+566    	; 0x274 <__bad_interrupt>
      3e:	00 00       	nop
      40:	19 c1       	rjmp	.+562    	; 0x274 <__bad_interrupt>
      42:	00 00       	nop
      44:	17 c1       	rjmp	.+558    	; 0x274 <__bad_interrupt>
      46:	00 00       	nop
      48:	15 c1       	rjmp	.+554    	; 0x274 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	13 c1       	rjmp	.+550    	; 0x274 <__bad_interrupt>
      4e:	00 00       	nop
      50:	11 c1       	rjmp	.+546    	; 0x274 <__bad_interrupt>
      52:	00 00       	nop
      54:	0f c1       	rjmp	.+542    	; 0x274 <__bad_interrupt>
      56:	00 00       	nop
      58:	0d c1       	rjmp	.+538    	; 0x274 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0b c1       	rjmp	.+534    	; 0x274 <__bad_interrupt>
      5e:	00 00       	nop
      60:	09 c1       	rjmp	.+530    	; 0x274 <__bad_interrupt>
      62:	00 00       	nop
      64:	07 c1       	rjmp	.+526    	; 0x274 <__bad_interrupt>
      66:	00 00       	nop
      68:	05 c1       	rjmp	.+522    	; 0x274 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	03 c1       	rjmp	.+518    	; 0x274 <__bad_interrupt>
      6e:	00 00       	nop
      70:	01 c1       	rjmp	.+514    	; 0x274 <__bad_interrupt>
      72:	00 00       	nop
      74:	ff c0       	rjmp	.+510    	; 0x274 <__bad_interrupt>
      76:	00 00       	nop
      78:	fd c0       	rjmp	.+506    	; 0x274 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	fb c0       	rjmp	.+502    	; 0x274 <__bad_interrupt>
      7e:	00 00       	nop
      80:	f9 c0       	rjmp	.+498    	; 0x274 <__bad_interrupt>
      82:	00 00       	nop
      84:	f7 c0       	rjmp	.+494    	; 0x274 <__bad_interrupt>
      86:	00 00       	nop
      88:	f5 c0       	rjmp	.+490    	; 0x274 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f3 c0       	rjmp	.+486    	; 0x274 <__bad_interrupt>
      8e:	00 00       	nop
      90:	f1 c0       	rjmp	.+482    	; 0x274 <__bad_interrupt>
      92:	00 00       	nop
      94:	ef c0       	rjmp	.+478    	; 0x274 <__bad_interrupt>
      96:	00 00       	nop
      98:	ed c0       	rjmp	.+474    	; 0x274 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	eb c0       	rjmp	.+470    	; 0x274 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	e9 c0       	rjmp	.+466    	; 0x274 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	e7 c0       	rjmp	.+462    	; 0x274 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	e5 c0       	rjmp	.+458    	; 0x274 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	e3 c0       	rjmp	.+454    	; 0x274 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	e1 c0       	rjmp	.+450    	; 0x274 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	df c0       	rjmp	.+446    	; 0x274 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	dd c0       	rjmp	.+442    	; 0x274 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	db c0       	rjmp	.+438    	; 0x274 <__bad_interrupt>
      be:	00 00       	nop
      c0:	d9 c0       	rjmp	.+434    	; 0x274 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	d7 c0       	rjmp	.+430    	; 0x274 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	d5 c0       	rjmp	.+426    	; 0x274 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	d3 c0       	rjmp	.+422    	; 0x274 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	d1 c0       	rjmp	.+418    	; 0x274 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	cf c0       	rjmp	.+414    	; 0x274 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	cd c0       	rjmp	.+410    	; 0x274 <__bad_interrupt>
      da:	00 00       	nop
      dc:	cb c0       	rjmp	.+406    	; 0x274 <__bad_interrupt>
      de:	00 00       	nop
      e0:	c9 c0       	rjmp	.+402    	; 0x274 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__c.2529>:
     1e6:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     1f6:	47 00                                               G.

000001f8 <pstr_an>:
     1f8:	61 6e 00                                            an.

000001fb <pstr_nfinity>:
     1fb:	6e 66 69 6e 69 74 79 00                             nfinity.

00000203 <pwr_m10>:
     203:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     213:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000021b <pwr_p10>:
     21b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     22b:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d1 e2       	ldi	r29, 0x21	; 33
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	00 e0       	ldi	r16, 0x00	; 0
     242:	0c bf       	out	0x3c, r16	; 60

00000244 <__do_copy_data>:
     244:	12 e0       	ldi	r17, 0x02	; 2
     246:	a0 e0       	ldi	r26, 0x00	; 0
     248:	b2 e0       	ldi	r27, 0x02	; 2
     24a:	ea e3       	ldi	r30, 0x3A	; 58
     24c:	f1 e2       	ldi	r31, 0x21	; 33
     24e:	00 e0       	ldi	r16, 0x00	; 0
     250:	0b bf       	out	0x3b, r16	; 59
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x14>
     254:	07 90       	elpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	aa 3f       	cpi	r26, 0xFA	; 250
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0x10>

0000025e <__do_clear_bss>:
     25e:	23 e0       	ldi	r18, 0x03	; 3
     260:	aa ef       	ldi	r26, 0xFA	; 250
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	a0 30       	cpi	r26, 0x00	; 0
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	27 d1       	rcall	.+590    	; 0x4be <main>
     270:	0c 94 9b 10 	jmp	0x2136	; 0x2136 <_exit>

00000274 <__bad_interrupt>:
     274:	c5 ce       	rjmp	.-630    	; 0x0 <__vectors>

00000276 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     276:	e2 e0       	ldi	r30, 0x02	; 2
     278:	f1 e0       	ldi	r31, 0x01	; 1
     27a:	80 81       	ld	r24, Z
     27c:	80 62       	ori	r24, 0x20	; 32
     27e:	80 83       	st	Z, r24
     280:	00 00       	nop
     282:	80 81       	ld	r24, Z
     284:	8f 7d       	andi	r24, 0xDF	; 223
     286:	80 83       	st	Z, r24
     288:	08 95       	ret

0000028a <lcd_write>:
     28a:	cf 93       	push	r28
     28c:	c8 2f       	mov	r28, r24
     28e:	66 23       	and	r22, r22
     290:	31 f0       	breq	.+12     	; 0x29e <lcd_write+0x14>
     292:	e2 e0       	ldi	r30, 0x02	; 2
     294:	f1 e0       	ldi	r31, 0x01	; 1
     296:	80 81       	ld	r24, Z
     298:	80 61       	ori	r24, 0x10	; 16
     29a:	80 83       	st	Z, r24
     29c:	05 c0       	rjmp	.+10     	; 0x2a8 <lcd_write+0x1e>
     29e:	e2 e0       	ldi	r30, 0x02	; 2
     2a0:	f1 e0       	ldi	r31, 0x01	; 1
     2a2:	80 81       	ld	r24, Z
     2a4:	8f 7e       	andi	r24, 0xEF	; 239
     2a6:	80 83       	st	Z, r24
     2a8:	e2 e0       	ldi	r30, 0x02	; 2
     2aa:	f1 e0       	ldi	r31, 0x01	; 1
     2ac:	80 81       	ld	r24, Z
     2ae:	87 7f       	andi	r24, 0xF7	; 247
     2b0:	80 83       	st	Z, r24
     2b2:	a1 e0       	ldi	r26, 0x01	; 1
     2b4:	b1 e0       	ldi	r27, 0x01	; 1
     2b6:	8c 91       	ld	r24, X
     2b8:	80 64       	ori	r24, 0x40	; 64
     2ba:	8c 93       	st	X, r24
     2bc:	24 9a       	sbi	0x04, 4	; 4
     2be:	25 9a       	sbi	0x04, 5	; 4
     2c0:	26 9a       	sbi	0x04, 6	; 4
     2c2:	2e 98       	cbi	0x05, 6	; 5
     2c4:	2d 98       	cbi	0x05, 5	; 5
     2c6:	2c 98       	cbi	0x05, 4	; 5
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7b       	andi	r24, 0xBF	; 191
     2cc:	80 83       	st	Z, r24
     2ce:	cc 23       	and	r28, r28
     2d0:	0c f4       	brge	.+2      	; 0x2d4 <lcd_write+0x4a>
     2d2:	2e 9a       	sbi	0x05, 6	; 5
     2d4:	c6 fd       	sbrc	r28, 6
     2d6:	2d 9a       	sbi	0x05, 5	; 5
     2d8:	c5 fd       	sbrc	r28, 5
     2da:	2c 9a       	sbi	0x05, 4	; 5
     2dc:	c4 ff       	sbrs	r28, 4
     2de:	05 c0       	rjmp	.+10     	; 0x2ea <lcd_write+0x60>
     2e0:	e2 e0       	ldi	r30, 0x02	; 2
     2e2:	f1 e0       	ldi	r31, 0x01	; 1
     2e4:	80 81       	ld	r24, Z
     2e6:	80 64       	ori	r24, 0x40	; 64
     2e8:	80 83       	st	Z, r24
     2ea:	c5 df       	rcall	.-118    	; 0x276 <toggle_e>
     2ec:	2e 98       	cbi	0x05, 6	; 5
     2ee:	2d 98       	cbi	0x05, 5	; 5
     2f0:	2c 98       	cbi	0x05, 4	; 5
     2f2:	e2 e0       	ldi	r30, 0x02	; 2
     2f4:	f1 e0       	ldi	r31, 0x01	; 1
     2f6:	80 81       	ld	r24, Z
     2f8:	8f 7b       	andi	r24, 0xBF	; 191
     2fa:	80 83       	st	Z, r24
     2fc:	c3 fd       	sbrc	r28, 3
     2fe:	2e 9a       	sbi	0x05, 6	; 5
     300:	c2 fd       	sbrc	r28, 2
     302:	2d 9a       	sbi	0x05, 5	; 5
     304:	c1 fd       	sbrc	r28, 1
     306:	2c 9a       	sbi	0x05, 4	; 5
     308:	c0 ff       	sbrs	r28, 0
     30a:	05 c0       	rjmp	.+10     	; 0x316 <lcd_write+0x8c>
     30c:	e2 e0       	ldi	r30, 0x02	; 2
     30e:	f1 e0       	ldi	r31, 0x01	; 1
     310:	80 81       	ld	r24, Z
     312:	80 64       	ori	r24, 0x40	; 64
     314:	80 83       	st	Z, r24
     316:	af df       	rcall	.-162    	; 0x276 <toggle_e>
     318:	e2 e0       	ldi	r30, 0x02	; 2
     31a:	f1 e0       	ldi	r31, 0x01	; 1
     31c:	80 81       	ld	r24, Z
     31e:	80 64       	ori	r24, 0x40	; 64
     320:	80 83       	st	Z, r24
     322:	2c 9a       	sbi	0x05, 4	; 5
     324:	2d 9a       	sbi	0x05, 5	; 5
     326:	2e 9a       	sbi	0x05, 6	; 5
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <lcd_read>:
     32c:	88 23       	and	r24, r24
     32e:	31 f0       	breq	.+12     	; 0x33c <lcd_read+0x10>
     330:	e2 e0       	ldi	r30, 0x02	; 2
     332:	f1 e0       	ldi	r31, 0x01	; 1
     334:	80 81       	ld	r24, Z
     336:	80 61       	ori	r24, 0x10	; 16
     338:	80 83       	st	Z, r24
     33a:	05 c0       	rjmp	.+10     	; 0x346 <lcd_read+0x1a>
     33c:	e2 e0       	ldi	r30, 0x02	; 2
     33e:	f1 e0       	ldi	r31, 0x01	; 1
     340:	80 81       	ld	r24, Z
     342:	8f 7e       	andi	r24, 0xEF	; 239
     344:	80 83       	st	Z, r24
     346:	e2 e0       	ldi	r30, 0x02	; 2
     348:	f1 e0       	ldi	r31, 0x01	; 1
     34a:	80 81       	ld	r24, Z
     34c:	88 60       	ori	r24, 0x08	; 8
     34e:	80 83       	st	Z, r24
     350:	a1 e0       	ldi	r26, 0x01	; 1
     352:	b1 e0       	ldi	r27, 0x01	; 1
     354:	8c 91       	ld	r24, X
     356:	8f 7b       	andi	r24, 0xBF	; 191
     358:	8c 93       	st	X, r24
     35a:	24 98       	cbi	0x04, 4	; 4
     35c:	25 98       	cbi	0x04, 5	; 4
     35e:	26 98       	cbi	0x04, 6	; 4
     360:	80 81       	ld	r24, Z
     362:	80 62       	ori	r24, 0x20	; 32
     364:	80 83       	st	Z, r24
     366:	00 00       	nop
     368:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     36c:	86 ff       	sbrs	r24, 6
     36e:	02 c0       	rjmp	.+4      	; 0x374 <lcd_read+0x48>
     370:	80 e1       	ldi	r24, 0x10	; 16
     372:	01 c0       	rjmp	.+2      	; 0x376 <lcd_read+0x4a>
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	1c 99       	sbic	0x03, 4	; 3
     378:	80 62       	ori	r24, 0x20	; 32
     37a:	1d 99       	sbic	0x03, 5	; 3
     37c:	80 64       	ori	r24, 0x40	; 64
     37e:	1e 99       	sbic	0x03, 6	; 3
     380:	80 68       	ori	r24, 0x80	; 128
     382:	e2 e0       	ldi	r30, 0x02	; 2
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	90 81       	ld	r25, Z
     388:	9f 7d       	andi	r25, 0xDF	; 223
     38a:	90 83       	st	Z, r25
     38c:	00 00       	nop
     38e:	90 81       	ld	r25, Z
     390:	90 62       	ori	r25, 0x20	; 32
     392:	90 83       	st	Z, r25
     394:	00 00       	nop
     396:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     39a:	96 fd       	sbrc	r25, 6
     39c:	81 60       	ori	r24, 0x01	; 1
     39e:	1c 99       	sbic	0x03, 4	; 3
     3a0:	82 60       	ori	r24, 0x02	; 2
     3a2:	1d 99       	sbic	0x03, 5	; 3
     3a4:	84 60       	ori	r24, 0x04	; 4
     3a6:	1e 99       	sbic	0x03, 6	; 3
     3a8:	88 60       	ori	r24, 0x08	; 8
     3aa:	e2 e0       	ldi	r30, 0x02	; 2
     3ac:	f1 e0       	ldi	r31, 0x01	; 1
     3ae:	90 81       	ld	r25, Z
     3b0:	9f 7d       	andi	r25, 0xDF	; 223
     3b2:	90 83       	st	Z, r25
     3b4:	08 95       	ret

000003b6 <lcd_waitbusy>:
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	b9 df       	rcall	.-142    	; 0x32c <lcd_read>
     3ba:	88 23       	and	r24, r24
     3bc:	e4 f3       	brlt	.-8      	; 0x3b6 <lcd_waitbusy>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <lcd_waitbusy+0xa>
     3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <lcd_waitbusy+0xc>
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	b3 cf       	rjmp	.-154    	; 0x32c <lcd_read>
     3c6:	08 95       	ret

000003c8 <lcd_command>:
     3c8:	cf 93       	push	r28
     3ca:	c8 2f       	mov	r28, r24
     3cc:	f4 df       	rcall	.-24     	; 0x3b6 <lcd_waitbusy>
     3ce:	60 e0       	ldi	r22, 0x00	; 0
     3d0:	8c 2f       	mov	r24, r28
     3d2:	5b df       	rcall	.-330    	; 0x28a <lcd_write>
     3d4:	cf 91       	pop	r28
     3d6:	08 95       	ret

000003d8 <lcd_gotoxy>:
     3d8:	61 11       	cpse	r22, r1
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <lcd_gotoxy+0xa>
     3dc:	80 58       	subi	r24, 0x80	; 128
     3de:	f4 cf       	rjmp	.-24     	; 0x3c8 <lcd_command>
     3e0:	08 95       	ret
     3e2:	80 54       	subi	r24, 0x40	; 64
     3e4:	f1 cf       	rjmp	.-30     	; 0x3c8 <lcd_command>
     3e6:	08 95       	ret

000003e8 <lcd_clrscr>:
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	ee cf       	rjmp	.-36     	; 0x3c8 <lcd_command>
     3ec:	08 95       	ret

000003ee <lcd_putc>:
     3ee:	cf 93       	push	r28
     3f0:	c8 2f       	mov	r28, r24
     3f2:	e1 df       	rcall	.-62     	; 0x3b6 <lcd_waitbusy>
     3f4:	ca 30       	cpi	r28, 0x0A	; 10
     3f6:	41 f4       	brne	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3f8:	80 34       	cpi	r24, 0x40	; 64
     3fa:	10 f0       	brcs	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	01 c0       	rjmp	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     400:	80 e4       	ldi	r24, 0x40	; 64
     402:	80 58       	subi	r24, 0x80	; 128
     404:	e1 df       	rcall	.-62     	; 0x3c8 <lcd_command>
     406:	03 c0       	rjmp	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     408:	61 e0       	ldi	r22, 0x01	; 1
     40a:	8c 2f       	mov	r24, r28
     40c:	3e df       	rcall	.-388    	; 0x28a <lcd_write>
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <lcd_puts>:
     412:	cf 93       	push	r28
     414:	df 93       	push	r29
     416:	ec 01       	movw	r28, r24
     418:	21 96       	adiw	r28, 0x01	; 1
     41a:	fc 01       	movw	r30, r24
     41c:	80 81       	ld	r24, Z
     41e:	88 23       	and	r24, r24
     420:	21 f0       	breq	.+8      	; 0x42a <lcd_puts+0x18>
     422:	e5 df       	rcall	.-54     	; 0x3ee <lcd_putc>
     424:	89 91       	ld	r24, Y+
     426:	81 11       	cpse	r24, r1
     428:	fc cf       	rjmp	.-8      	; 0x422 <lcd_puts+0x10>
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     430:	1f 93       	push	r17
     432:	cf 93       	push	r28
     434:	df 93       	push	r29
     436:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     438:	e1 e0       	ldi	r30, 0x01	; 1
     43a:	f1 e0       	ldi	r31, 0x01	; 1
     43c:	80 81       	ld	r24, Z
     43e:	80 61       	ori	r24, 0x10	; 16
     440:	80 83       	st	Z, r24
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     442:	80 81       	ld	r24, Z
     444:	88 60       	ori	r24, 0x08	; 8
     446:	80 83       	st	Z, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     448:	80 81       	ld	r24, Z
     44a:	80 62       	ori	r24, 0x20	; 32
     44c:	80 83       	st	Z, r24
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     44e:	80 81       	ld	r24, Z
     450:	80 64       	ori	r24, 0x40	; 64
     452:	80 83       	st	Z, r24
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     454:	24 9a       	sbi	0x04, 4	; 4
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     456:	25 9a       	sbi	0x04, 5	; 4
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     458:	26 9a       	sbi	0x04, 6	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     45a:	8f e9       	ldi	r24, 0x9F	; 159
     45c:	9f e0       	ldi	r25, 0x0F	; 15
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <lcd_init+0x2e>
     462:	00 c0       	rjmp	.+0      	; 0x464 <lcd_init+0x34>
     464:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     466:	2c 9a       	sbi	0x05, 4	; 5
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     468:	c2 e0       	ldi	r28, 0x02	; 2
     46a:	d1 e0       	ldi	r29, 0x01	; 1
     46c:	88 81       	ld	r24, Y
     46e:	80 64       	ori	r24, 0x40	; 64
     470:	88 83       	st	Y, r24
    lcd_e_toggle();
     472:	01 df       	rcall	.-510    	; 0x276 <toggle_e>
     474:	81 ee       	ldi	r24, 0xE1	; 225
     476:	94 e0       	ldi	r25, 0x04	; 4
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <lcd_init+0x48>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <lcd_init+0x4e>
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     47e:	00 00       	nop
     480:	fa de       	rcall	.-524    	; 0x276 <toggle_e>
     482:	95 e1       	ldi	r25, 0x15	; 21
     484:	9a 95       	dec	r25
     486:	f1 f7       	brne	.-4      	; 0x484 <lcd_init+0x54>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     488:	00 00       	nop
     48a:	f5 de       	rcall	.-534    	; 0x276 <toggle_e>
     48c:	85 e1       	ldi	r24, 0x15	; 21
     48e:	8a 95       	dec	r24
     490:	f1 f7       	brne	.-4      	; 0x48e <lcd_init+0x5e>
     492:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     494:	88 81       	ld	r24, Y
     496:	8f 7b       	andi	r24, 0xBF	; 191
    lcd_e_toggle();
     498:	88 83       	st	Y, r24
     49a:	ed de       	rcall	.-550    	; 0x276 <toggle_e>
     49c:	95 e1       	ldi	r25, 0x15	; 21
     49e:	9a 95       	dec	r25
     4a0:	f1 f7       	brne	.-4      	; 0x49e <lcd_init+0x6e>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     4a2:	00 00       	nop
     4a4:	88 e2       	ldi	r24, 0x28	; 40
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     4a6:	90 df       	rcall	.-224    	; 0x3c8 <lcd_command>
     4a8:	88 e0       	ldi	r24, 0x08	; 8
    lcd_clrscr();                           /* display clear                */ 
     4aa:	8e df       	rcall	.-228    	; 0x3c8 <lcd_command>
     4ac:	9d df       	rcall	.-198    	; 0x3e8 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     4ae:	86 e0       	ldi	r24, 0x06	; 6
     4b0:	8b df       	rcall	.-234    	; 0x3c8 <lcd_command>
     4b2:	81 2f       	mov	r24, r17
    lcd_command(dispAttr);                  /* display/cursor control       */
     4b4:	89 df       	rcall	.-238    	; 0x3c8 <lcd_command>
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28

}/* lcd_init */
     4ba:	1f 91       	pop	r17
     4bc:	08 95       	ret

000004be <main>:
#include "mfrc522/mfrc522.h"
#include "lcd/lcd.h"


int main()
{
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	cd b7       	in	r28, 0x3d	; 61
     4c4:	de b7       	in	r29, 0x3e	; 62
     4c6:	c0 5b       	subi	r28, 0xB0	; 176
     4c8:	d1 09       	sbc	r29, r1
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de bf       	out	0x3e, r29	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd bf       	out	0x3d, r28	; 61
	//Saved card
	uint8_t card[8] = {208, 166, 96, 37, 51, 0, 0, 0};
     4d4:	88 e0       	ldi	r24, 0x08	; 8
     4d6:	ee e0       	ldi	r30, 0x0E	; 14
     4d8:	f2 e0       	ldi	r31, 0x02	; 2
     4da:	de 01       	movw	r26, r28
     4dc:	11 96       	adiw	r26, 0x01	; 1
     4de:	01 90       	ld	r0, Z+
     4e0:	0d 92       	st	X+, r0
     4e2:	8a 95       	dec	r24
     4e4:	e1 f7       	brne	.-8      	; 0x4de <main+0x20>
	UartInit();
     4e6:	e8 d2       	rcall	.+1488   	; 0xab8 <UartInit>
	char buffer[150];
	uint8_t byte;
	uint8_t str[MAX_LEN];
	
	//Initialize the SPI configuration
	spi_init();
     4e8:	fb d2       	rcall	.+1526   	; 0xae0 <spi_init>
	
	//Initialize display, cursor on
	lcd_init(LCD_DISP_ON);
     4ea:	8c e0       	ldi	r24, 0x0C	; 12

	//Clear display and home cursor
	lcd_clrscr();
     4ec:	a1 df       	rcall	.-190    	; 0x430 <lcd_init>
	
	//Initialize the RFID reader
	mfrc522_init();
     4ee:	7c df       	rcall	.-264    	; 0x3e8 <lcd_clrscr>
     4f0:	10 d1       	rcall	.+544    	; 0x712 <mfrc522_init>
	
	//check version of the reader
	//Version numbers can be found in the Readme.
	byte = mfrc522_read(VersionReg);
     4f2:	87 e3       	ldi	r24, 0x37	; 55
     4f4:	01 d1       	rcall	.+514    	; 0x6f8 <mfrc522_read>
     4f6:	80 39       	cpi	r24, 0x90	; 144
		
	//Version number is read from the Version register as shown above.
	switch (byte)
     4f8:	89 f1       	breq	.+98     	; 0x55c <main+0x9e>
     4fa:	20 f4       	brcc	.+8      	; 0x504 <main+0x46>
     4fc:	88 38       	cpi	r24, 0x88	; 136
     4fe:	09 f4       	brne	.+2      	; 0x502 <main+0x44>
     500:	5f c0       	rjmp	.+190    	; 0x5c0 <main+0x102>
     502:	70 c0       	rjmp	.+224    	; 0x5e4 <main+0x126>
     504:	81 39       	cpi	r24, 0x91	; 145
     506:	c1 f0       	breq	.+48     	; 0x538 <main+0x7a>
     508:	82 39       	cpi	r24, 0x92	; 146
     50a:	09 f0       	breq	.+2      	; 0x50e <main+0x50>
     50c:	6b c0       	rjmp	.+214    	; 0x5e4 <main+0x126>
     50e:	86 e1       	ldi	r24, 0x16	; 22
	{
		case 0x92:
			printf("MIFARE RC522v2\r\n");
     510:	92 e0       	ldi	r25, 0x02	; 2
     512:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     516:	86 e2       	ldi	r24, 0x26	; 38
			printf("Detected\r\n");
     518:	92 e0       	ldi	r25, 0x02	; 2
     51a:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
			lcd_gotoxy(0,0);
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	5a df       	rcall	.-332    	; 0x3d8 <lcd_gotoxy>
			lcd_puts("MIFARE RC522v2");
     524:	80 e3       	ldi	r24, 0x30	; 48
     526:	92 e0       	ldi	r25, 0x02	; 2
     528:	74 df       	rcall	.-280    	; 0x412 <lcd_puts>
			lcd_gotoxy(0,1);
     52a:	61 e0       	ldi	r22, 0x01	; 1
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	54 df       	rcall	.-344    	; 0x3d8 <lcd_gotoxy>
     530:	8f e3       	ldi	r24, 0x3F	; 63
			lcd_puts("Detected");
     532:	92 e0       	ldi	r25, 0x02	; 2
     534:	6e df       	rcall	.-292    	; 0x412 <lcd_puts>
     536:	23 c0       	rjmp	.+70     	; 0x57e <main+0xc0>
     538:	88 e4       	ldi	r24, 0x48	; 72
			break;
     53a:	92 e0       	ldi	r25, 0x02	; 2
		case 0x91:
			printf("MIFARE RC522v1\r\n");
     53c:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     540:	86 e2       	ldi	r24, 0x26	; 38
			printf("Detected\r\n");
     542:	92 e0       	ldi	r25, 0x02	; 2
     544:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
			lcd_puts("MIFARE RC522v1");
     548:	88 e5       	ldi	r24, 0x58	; 88
     54a:	92 e0       	ldi	r25, 0x02	; 2
     54c:	62 df       	rcall	.-316    	; 0x412 <lcd_puts>
     54e:	61 e0       	ldi	r22, 0x01	; 1
			lcd_gotoxy(0,1);
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	42 df       	rcall	.-380    	; 0x3d8 <lcd_gotoxy>
     554:	8f e3       	ldi	r24, 0x3F	; 63
     556:	92 e0       	ldi	r25, 0x02	; 2
			lcd_puts("Detected");
     558:	5c df       	rcall	.-328    	; 0x412 <lcd_puts>
     55a:	11 c0       	rjmp	.+34     	; 0x57e <main+0xc0>
     55c:	87 e6       	ldi	r24, 0x67	; 103
			break;
     55e:	92 e0       	ldi	r25, 0x02	; 2
		case 0x90:
			printf("MIFARE RC522v0\r\n");
     560:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     564:	86 e2       	ldi	r24, 0x26	; 38
			printf("Detected\r\n");
     566:	92 e0       	ldi	r25, 0x02	; 2
     568:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     56c:	87 e7       	ldi	r24, 0x77	; 119
			lcd_puts("MIFARE RC522v0");
     56e:	92 e0       	ldi	r25, 0x02	; 2
     570:	50 df       	rcall	.-352    	; 0x412 <lcd_puts>
     572:	61 e0       	ldi	r22, 0x01	; 1
     574:	80 e0       	ldi	r24, 0x00	; 0
			lcd_gotoxy(0,1);
     576:	30 df       	rcall	.-416    	; 0x3d8 <lcd_gotoxy>
     578:	8f e3       	ldi	r24, 0x3F	; 63
     57a:	92 e0       	ldi	r25, 0x02	; 2
     57c:	4a df       	rcall	.-364    	; 0x412 <lcd_puts>
			lcd_puts("Detected");
     57e:	0f 2e       	mov	r0, r31
     580:	f3 ef       	ldi	r31, 0xF3	; 243
     582:	4f 2e       	mov	r4, r31
     584:	f2 e0       	ldi	r31, 0x02	; 2
					lcd_puts("Unauthorized");
				}						
			}
			else
			{
				printf("Error");
     586:	5f 2e       	mov	r5, r31
     588:	f0 2d       	mov	r31, r0
     58a:	0f 2e       	mov	r0, r31
     58c:	fa eb       	ldi	r31, 0xBA	; 186
     58e:	2f 2e       	mov	r2, r31
     590:	f2 e0       	ldi	r31, 0x02	; 2
			byte = mfrc522_get_card_serial(str);
			if(byte == CARD_FOUND) //The mcu checks again after getting more information about the card.
			{	
				if (Validate_Card(&card, &str)) //Validates the card read to the card saved.
				{					
					printf("Authorized\r\nID:");
     592:	3f 2e       	mov	r3, r31
     594:	f0 2d       	mov	r31, r0
     596:	0f 2e       	mov	r0, r31
     598:	fa ec       	ldi	r31, 0xCA	; 202
     59a:	ef 2e       	mov	r14, r31
     59c:	f2 e0       	ldi	r31, 0x02	; 2
					for(byte=0;byte<8;byte++) //Convertes the value of the card to a char array so it can be printed to the LCD/Terminal.
					{
						//Takes the last position of where the char array and saves it in the position variable.
						position += sprintf(&buffer[position], "%i", str[byte]);
     59e:	ff 2e       	mov	r15, r31
     5a0:	f0 2d       	mov	r31, r0
     5a2:	4e 01       	movw	r8, r28
     5a4:	29 e0       	ldi	r18, 0x09	; 9
     5a6:	82 0e       	add	r8, r18
     5a8:	91 1c       	adc	r9, r1
     5aa:	c1 55       	subi	r28, 0x51	; 81
     5ac:	df 4f       	sbci	r29, 0xFF	; 255
     5ae:	88 82       	st	Y, r8
     5b0:	cf 5a       	subi	r28, 0xAF	; 175
     5b2:	d0 40       	sbci	r29, 0x00	; 0
     5b4:	c0 55       	subi	r28, 0x50	; 80
     5b6:	df 4f       	sbci	r29, 0xFF	; 255
     5b8:	98 82       	st	Y, r9
     5ba:	c0 5b       	subi	r28, 0xB0	; 176
     5bc:	d0 40       	sbci	r29, 0x00	; 0
     5be:	17 c0       	rjmp	.+46     	; 0x5ee <main+0x130>
     5c0:	86 e8       	ldi	r24, 0x86	; 134
     5c2:	92 e0       	ldi	r25, 0x02	; 2
			lcd_puts("MIFARE RC522v0");
			lcd_gotoxy(0,1);
			lcd_puts("Detected");
			break;
		case 0x88:
			printf("RFID-RC522 Clone\r\n");
     5c4:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     5c8:	86 e2       	ldi	r24, 0x26	; 38
			printf("Detected\r\n");
     5ca:	92 e0       	ldi	r25, 0x02	; 2
     5cc:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     5d0:	88 e9       	ldi	r24, 0x98	; 152
			lcd_puts("RFID-RC522 Clone");
     5d2:	92 e0       	ldi	r25, 0x02	; 2
     5d4:	1e df       	rcall	.-452    	; 0x412 <lcd_puts>
     5d6:	61 e0       	ldi	r22, 0x01	; 1
			lcd_gotoxy(0,1);
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	fe de       	rcall	.-516    	; 0x3d8 <lcd_gotoxy>
     5dc:	8f e3       	ldi	r24, 0x3F	; 63
     5de:	92 e0       	ldi	r25, 0x02	; 2
			lcd_puts("Detected");
     5e0:	18 df       	rcall	.-464    	; 0x412 <lcd_puts>
     5e2:	cd cf       	rjmp	.-102    	; 0x57e <main+0xc0>
     5e4:	89 ea       	ldi	r24, 0xA9	; 169
			break;
     5e6:	92 e0       	ldi	r25, 0x02	; 2
		default:
			printf("No reader found\r\n");
     5e8:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     5ec:	c8 cf       	rjmp	.-112    	; 0x57e <main+0xc0>
     5ee:	be 01       	movw	r22, r28
			break;
     5f0:	61 56       	subi	r22, 0x61	; 97
	}
	
	while(1){
		//The mcu checks to se if a card is found.
		byte = mfrc522_request(PICC_REQALL,str);		
     5f2:	7f 4f       	sbci	r23, 0xFF	; 255
     5f4:	82 e5       	ldi	r24, 0x52	; 82
     5f6:	c0 d1       	rcall	.+896    	; 0x978 <mfrc522_request>
     5f8:	81 30       	cpi	r24, 0x01	; 1
     5fa:	09 f0       	breq	.+2      	; 0x5fe <main+0x140>
		if(byte == CARD_FOUND)
     5fc:	68 c0       	rjmp	.+208    	; 0x6ce <main+0x210>
     5fe:	ce 01       	movw	r24, r28
     600:	81 56       	subi	r24, 0x61	; 97
		{			
			int position = 0; //Defines the position in the char array that the byte will be writen to.			
			byte = mfrc522_get_card_serial(str);
     602:	9f 4f       	sbci	r25, 0xFF	; 255
     604:	eb d1       	rcall	.+982    	; 0x9dc <mfrc522_get_card_serial>
     606:	81 30       	cpi	r24, 0x01	; 1
     608:	09 f0       	breq	.+2      	; 0x60c <main+0x14e>
     60a:	5b c0       	rjmp	.+182    	; 0x6c2 <main+0x204>
			if(byte == CARD_FOUND) //The mcu checks again after getting more information about the card.
     60c:	be 01       	movw	r22, r28
     60e:	61 56       	subi	r22, 0x61	; 97
     610:	7f 4f       	sbci	r23, 0xFF	; 255
			{	
				if (Validate_Card(&card, &str)) //Validates the card read to the card saved.
     612:	ce 01       	movw	r24, r28
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	18 d2       	rcall	.+1072   	; 0xa48 <Validate_Card>
     618:	89 2b       	or	r24, r25
     61a:	09 f4       	brne	.+2      	; 0x61e <main+0x160>
     61c:	46 c0       	rjmp	.+140    	; 0x6aa <main+0x1ec>
     61e:	3f 92       	push	r3
     620:	2f 92       	push	r2
     622:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <printf>
				{					
					printf("Authorized\r\nID:");
     626:	8e 01       	movw	r16, r28
     628:	01 56       	subi	r16, 0x61	; 97
     62a:	1f 4f       	sbci	r17, 0xFF	; 255
     62c:	58 01       	movw	r10, r16
     62e:	88 e0       	ldi	r24, 0x08	; 8
     630:	a8 0e       	add	r10, r24
     632:	b1 1c       	adc	r11, r1
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	c1 2c       	mov	r12, r1
     63a:	d1 2c       	mov	r13, r1
     63c:	38 01       	movw	r6, r16
     63e:	f8 01       	movw	r30, r16
	while(1){
		//The mcu checks to se if a card is found.
		byte = mfrc522_request(PICC_REQALL,str);		
		if(byte == CARD_FOUND)
		{			
			int position = 0; //Defines the position in the char array that the byte will be writen to.			
     640:	81 91       	ld	r24, Z+
     642:	8f 01       	movw	r16, r30
     644:	1f 92       	push	r1
				{					
					printf("Authorized\r\nID:");
					for(byte=0;byte<8;byte++) //Convertes the value of the card to a char array so it can be printed to the LCD/Terminal.
					{
						//Takes the last position of where the char array and saves it in the position variable.
						position += sprintf(&buffer[position], "%i", str[byte]);
     646:	8f 93       	push	r24
     648:	ff 92       	push	r15
     64a:	ef 92       	push	r14
     64c:	c4 01       	movw	r24, r8
     64e:	8c 0d       	add	r24, r12
     650:	9d 1d       	adc	r25, r13
     652:	9f 93       	push	r25
     654:	8f 93       	push	r24
     656:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <sprintf>
     65a:	c8 0e       	add	r12, r24
     65c:	d9 1e       	adc	r13, r25
     65e:	f3 01       	movw	r30, r6
     660:	80 81       	ld	r24, Z
						printf("%i", str[byte]);
     662:	1f 92       	push	r1
     664:	8f 93       	push	r24
     666:	ff 92       	push	r15
     668:	ef 92       	push	r14
     66a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <printf>
			if(byte == CARD_FOUND) //The mcu checks again after getting more information about the card.
			{	
				if (Validate_Card(&card, &str)) //Validates the card read to the card saved.
				{					
					printf("Authorized\r\nID:");
					for(byte=0;byte<8;byte++) //Convertes the value of the card to a char array so it can be printed to the LCD/Terminal.
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	f8 94       	cli
     672:	de bf       	out	0x3e, r29	; 62
     674:	0f be       	out	0x3f, r0	; 63
     676:	cd bf       	out	0x3d, r28	; 61
     678:	0a 15       	cp	r16, r10
     67a:	1b 05       	cpc	r17, r11
					{
						//Takes the last position of where the char array and saves it in the position variable.
						position += sprintf(&buffer[position], "%i", str[byte]);
						printf("%i", str[byte]);
					}
					lcd_clrscr();
     67c:	f9 f6       	brne	.-66     	; 0x63c <main+0x17e>
     67e:	b4 de       	rcall	.-664    	; 0x3e8 <lcd_clrscr>
					lcd_gotoxy(0,0);
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	a9 de       	rcall	.-686    	; 0x3d8 <lcd_gotoxy>
					lcd_puts("Authorized");
     686:	8d ec       	ldi	r24, 0xCD	; 205
     688:	92 e0       	ldi	r25, 0x02	; 2
     68a:	c3 de       	rcall	.-634    	; 0x412 <lcd_puts>
					lcd_gotoxy(0,1);
     68c:	61 e0       	ldi	r22, 0x01	; 1
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	a3 de       	rcall	.-698    	; 0x3d8 <lcd_gotoxy>
					lcd_puts(buffer);
     692:	c1 55       	subi	r28, 0x51	; 81
     694:	df 4f       	sbci	r29, 0xFF	; 255
     696:	88 81       	ld	r24, Y
     698:	cf 5a       	subi	r28, 0xAF	; 175
     69a:	d0 40       	sbci	r29, 0x00	; 0
     69c:	c0 55       	subi	r28, 0x50	; 80
     69e:	df 4f       	sbci	r29, 0xFF	; 255
     6a0:	98 81       	ld	r25, Y
     6a2:	c0 5b       	subi	r28, 0xB0	; 176
     6a4:	d0 40       	sbci	r29, 0x00	; 0
     6a6:	b5 de       	rcall	.-662    	; 0x412 <lcd_puts>
     6a8:	12 c0       	rjmp	.+36     	; 0x6ce <main+0x210>
     6aa:	88 ed       	ldi	r24, 0xD8	; 216
				}
				else
				{
					printf("Unauthorized\r\n");
     6ac:	92 e0       	ldi	r25, 0x02	; 2
     6ae:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <puts>
     6b2:	9a de       	rcall	.-716    	; 0x3e8 <lcd_clrscr>
					lcd_clrscr();
     6b4:	60 e0       	ldi	r22, 0x00	; 0
     6b6:	80 e0       	ldi	r24, 0x00	; 0
					lcd_gotoxy(0,0);
     6b8:	8f de       	rcall	.-738    	; 0x3d8 <lcd_gotoxy>
     6ba:	86 ee       	ldi	r24, 0xE6	; 230
     6bc:	92 e0       	ldi	r25, 0x02	; 2
     6be:	a9 de       	rcall	.-686    	; 0x412 <lcd_puts>
					lcd_puts("Unauthorized");
     6c0:	06 c0       	rjmp	.+12     	; 0x6ce <main+0x210>
     6c2:	5f 92       	push	r5
     6c4:	4f 92       	push	r4
     6c6:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <printf>
				}						
			}
			else
			{
				printf("Error");
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	9f ef       	ldi	r25, 0xFF	; 255
     6d0:	e9 e6       	ldi	r30, 0x69	; 105
     6d2:	f8 e1       	ldi	r31, 0x18	; 24
     6d4:	91 50       	subi	r25, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6d6:	e0 40       	sbci	r30, 0x00	; 0
     6d8:	f0 40       	sbci	r31, 0x00	; 0
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <main+0x216>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <main+0x220>
     6de:	00 00       	nop
     6e0:	86 cf       	rjmp	.-244    	; 0x5ee <main+0x130>

000006e2 <mfrc522_write>:
		mfrc522_write(TxControlReg,byte|0x03);
	}
}

void mfrc522_write(uint8_t reg, uint8_t data)
{
     6e2:	cf 93       	push	r28
     6e4:	c6 2f       	mov	r28, r22
	ENABLE_CHIP();
     6e6:	28 98       	cbi	0x05, 0	; 5
	spi_transmit((reg<<1)&0x7E);
     6e8:	88 0f       	add	r24, r24
     6ea:	8e 77       	andi	r24, 0x7E	; 126
     6ec:	00 d2       	rcall	.+1024   	; 0xaee <spi_transmit>
	spi_transmit(data);
     6ee:	8c 2f       	mov	r24, r28
     6f0:	fe d1       	rcall	.+1020   	; 0xaee <spi_transmit>
	DISABLE_CHIP();
     6f2:	28 9a       	sbi	0x05, 0	; 5
}
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <mfrc522_read>:

uint8_t mfrc522_read(uint8_t reg)
{
	uint8_t data;	
	ENABLE_CHIP();
     6f8:	28 98       	cbi	0x05, 0	; 5
	spi_transmit(((reg<<1)&0x7E)|0x80);
     6fa:	88 0f       	add	r24, r24
     6fc:	8e 77       	andi	r24, 0x7E	; 126
     6fe:	80 68       	ori	r24, 0x80	; 128
     700:	f6 d1       	rcall	.+1004   	; 0xaee <spi_transmit>
	data = spi_transmit(0x00);
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	f4 d1       	rcall	.+1000   	; 0xaee <spi_transmit>
	DISABLE_CHIP();
     706:	28 9a       	sbi	0x05, 0	; 5
	return data;
}
     708:	08 95       	ret

0000070a <mfrc522_reset>:

void mfrc522_reset()
{
	mfrc522_write(CommandReg,SoftReset_CMD);
     70a:	6f e0       	ldi	r22, 0x0F	; 15
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	e9 cf       	rjmp	.-46     	; 0x6e2 <mfrc522_write>
     710:	08 95       	ret

00000712 <mfrc522_init>:
#define F_CPU 16000000ul

void mfrc522_init()
{
	uint8_t byte;
	mfrc522_reset();
     712:	fb df       	rcall	.-10     	; 0x70a <mfrc522_reset>
	
	mfrc522_write(TModeReg, 0x8D);
     714:	6d e8       	ldi	r22, 0x8D	; 141
     716:	8a e2       	ldi	r24, 0x2A	; 42
     718:	e4 df       	rcall	.-56     	; 0x6e2 <mfrc522_write>
    mfrc522_write(TPrescalerReg, 0x3E);
     71a:	6e e3       	ldi	r22, 0x3E	; 62
     71c:	8b e2       	ldi	r24, 0x2B	; 43
     71e:	e1 df       	rcall	.-62     	; 0x6e2 <mfrc522_write>
    mfrc522_write(TReloadReg_1, 30);   
     720:	6e e1       	ldi	r22, 0x1E	; 30
     722:	8c e2       	ldi	r24, 0x2C	; 44
     724:	de df       	rcall	.-68     	; 0x6e2 <mfrc522_write>
    mfrc522_write(TReloadReg_2, 0);	
     726:	60 e0       	ldi	r22, 0x00	; 0
     728:	8d e2       	ldi	r24, 0x2D	; 45
     72a:	db df       	rcall	.-74     	; 0x6e2 <mfrc522_write>
	mfrc522_write(TxASKReg, 0x40);	
     72c:	60 e4       	ldi	r22, 0x40	; 64
     72e:	85 e1       	ldi	r24, 0x15	; 21
	mfrc522_write(ModeReg, 0x3D);
     730:	d8 df       	rcall	.-80     	; 0x6e2 <mfrc522_write>
     732:	6d e3       	ldi	r22, 0x3D	; 61
     734:	81 e1       	ldi	r24, 0x11	; 17
     736:	d5 df       	rcall	.-86     	; 0x6e2 <mfrc522_write>
	
	byte = mfrc522_read(TxControlReg);
     738:	84 e1       	ldi	r24, 0x14	; 20
     73a:	de df       	rcall	.-68     	; 0x6f8 <mfrc522_read>
	if(!(byte&0x03))
     73c:	98 2f       	mov	r25, r24
     73e:	93 70       	andi	r25, 0x03	; 3
     740:	21 f4       	brne	.+8      	; 0x74a <mfrc522_init+0x38>
	{
		mfrc522_write(TxControlReg,byte|0x03);
     742:	68 2f       	mov	r22, r24
     744:	63 60       	ori	r22, 0x03	; 3
     746:	84 e1       	ldi	r24, 0x14	; 20
     748:	cc cf       	rjmp	.-104    	; 0x6e2 <mfrc522_write>
     74a:	08 95       	ret

0000074c <mfrc522_to_card>:
     74c:	3f 92       	push	r3
   
	return status;
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
     74e:	4f 92       	push	r4
     750:	5f 92       	push	r5
     752:	6f 92       	push	r6
     754:	7f 92       	push	r7
     756:	8f 92       	push	r8
     758:	9f 92       	push	r9
     75a:	af 92       	push	r10
     75c:	bf 92       	push	r11
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	98 2e       	mov	r9, r24
     770:	f6 2e       	mov	r15, r22
     772:	e7 2e       	mov	r14, r23
     774:	44 2e       	mov	r4, r20
     776:	82 2e       	mov	r8, r18
     778:	33 2e       	mov	r3, r19
     77a:	58 01       	movw	r10, r16
    uint8_t lastBits;
    uint8_t n;
    uint8_t	tmp;
    uint32_t i;

    switch (cmd)
     77c:	8c e0       	ldi	r24, 0x0C	; 12
     77e:	98 16       	cp	r9, r24
     780:	09 f4       	brne	.+2      	; 0x784 <mfrc522_to_card+0x38>
     782:	ba c0       	rjmp	.+372    	; 0x8f8 <mfrc522_to_card+0x1ac>
     784:	ee e0       	ldi	r30, 0x0E	; 14
     786:	9e 12       	cpse	r9, r30
     788:	03 c0       	rjmp	.+6      	; 0x790 <mfrc522_to_card+0x44>
    {
        case MFAuthent_CMD:		//Certification cards close
		{
			irqEn = 0x12;
			waitIRq = 0x10;
     78a:	10 e1       	ldi	r17, 0x10	; 16

    switch (cmd)
    {
        case MFAuthent_CMD:		//Certification cards close
		{
			irqEn = 0x12;
     78c:	02 e1       	ldi	r16, 0x12	; 18
     78e:	02 c0       	rjmp	.+4      	; 0x794 <mfrc522_to_card+0x48>

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
    uint8_t irqEn = 0x00;
    uint8_t waitIRq = 0x00;
     790:	10 e0       	ldi	r17, 0x00	; 0
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
    uint8_t irqEn = 0x00;
     792:	00 e0       	ldi	r16, 0x00	; 0
		default:
			break;
    }
   
    //mfrc522_write(ComIEnReg, irqEn|0x80);	//Interrupt request
    n=mfrc522_read(ComIrqReg);
     794:	84 e0       	ldi	r24, 0x04	; 4
     796:	b0 df       	rcall	.-160    	; 0x6f8 <mfrc522_read>
    mfrc522_write(ComIrqReg,n&(~0x80));//clear all interrupt bits
     798:	68 2f       	mov	r22, r24
     79a:	6f 77       	andi	r22, 0x7F	; 127
     79c:	84 e0       	ldi	r24, 0x04	; 4
     79e:	a1 df       	rcall	.-190    	; 0x6e2 <mfrc522_write>
    n=mfrc522_read(FIFOLevelReg);
     7a0:	8a e0       	ldi	r24, 0x0A	; 10
     7a2:	aa df       	rcall	.-172    	; 0x6f8 <mfrc522_read>
     7a4:	68 2f       	mov	r22, r24
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
     7a6:	60 68       	ori	r22, 0x80	; 128
     7a8:	8a e0       	ldi	r24, 0x0A	; 10
     7aa:	9b df       	rcall	.-202    	; 0x6e2 <mfrc522_write>
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???
     7ac:	60 e0       	ldi	r22, 0x00	; 0
     7ae:	81 e0       	ldi	r24, 0x01	; 1
     7b0:	98 df       	rcall	.-208    	; 0x6e2 <mfrc522_write>
     7b2:	51 2c       	mov	r5, r1

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     7b4:	61 2c       	mov	r6, r1
     7b6:	71 2c       	mov	r7, r1
     7b8:	41 14       	cp	r4, r1
     7ba:	51 04       	cpc	r5, r1
     7bc:	61 04       	cpc	r6, r1
     7be:	71 04       	cpc	r7, r1
     7c0:	19 f4       	brne	.+6      	; 0x7c8 <mfrc522_to_card+0x7c>
     7c2:	14 c0       	rjmp	.+40     	; 0x7ec <mfrc522_to_card+0xa0>
     7c4:	10 e3       	ldi	r17, 0x30	; 48
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
			waitIRq = 0x30;
     7c6:	07 e7       	ldi	r16, 0x77	; 119
			waitIRq = 0x10;
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
     7c8:	cf 2d       	mov	r28, r15
     7ca:	de 2d       	mov	r29, r14
     7cc:	c1 2c       	mov	r12, r1
     7ce:	d1 2c       	mov	r13, r1
     7d0:	76 01       	movw	r14, r12
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
     7d2:	69 91       	ld	r22, Y+
     7d4:	89 e0       	ldi	r24, 0x09	; 9
     7d6:	85 df       	rcall	.-246    	; 0x6e2 <mfrc522_write>
     7d8:	ff ef       	ldi	r31, 0xFF	; 255
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     7da:	cf 1a       	sub	r12, r31
     7dc:	df 0a       	sbc	r13, r31
     7de:	ef 0a       	sbc	r14, r31
     7e0:	ff 0a       	sbc	r15, r31
     7e2:	c4 14       	cp	r12, r4
     7e4:	d5 04       	cpc	r13, r5
     7e6:	e6 04       	cpc	r14, r6
     7e8:	f7 04       	cpc	r15, r7
     7ea:	98 f3       	brcs	.-26     	; 0x7d2 <mfrc522_to_card+0x86>
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
	}

	//Execute the cmd
	mfrc522_write(CommandReg, cmd);
     7ec:	69 2d       	mov	r22, r9
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	78 df       	rcall	.-272    	; 0x6e2 <mfrc522_write>
    if (cmd == Transceive_CMD)
     7f2:	8c e0       	ldi	r24, 0x0C	; 12
     7f4:	98 12       	cpse	r9, r24
    {    
		n=mfrc522_read(BitFramingReg);
     7f6:	06 c0       	rjmp	.+12     	; 0x804 <mfrc522_to_card+0xb8>
     7f8:	8d e0       	ldi	r24, 0x0D	; 13
		mfrc522_write(BitFramingReg,n|0x80);  
     7fa:	7e df       	rcall	.-260    	; 0x6f8 <mfrc522_read>
     7fc:	68 2f       	mov	r22, r24
     7fe:	60 68       	ori	r22, 0x80	; 128
     800:	8d e0       	ldi	r24, 0x0D	; 13
	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
    do 
    {
		//CommIrqReg[7..0]
		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
        n = mfrc522_read(ComIrqReg);
     802:	6f df       	rcall	.-290    	; 0x6e2 <mfrc522_write>
     804:	84 e0       	ldi	r24, 0x04	; 4
     806:	78 df       	rcall	.-272    	; 0x6f8 <mfrc522_read>
     808:	f8 2e       	mov	r15, r24
     80a:	c0 e0       	ldi	r28, 0x00	; 0
     80c:	d0 e0       	ldi	r29, 0x00	; 0
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));
     80e:	11 60       	ori	r17, 0x01	; 1
     810:	09 c0       	rjmp	.+18     	; 0x824 <mfrc522_to_card+0xd8>
	i = 2000;	//i according to the clock frequency adjustment, the operator M1 card maximum waiting time 25ms???
    do 
    {
		//CommIrqReg[7..0]
		//Set1 TxIRq RxIRq IdleIRq HiAlerIRq LoAlertIRq ErrIRq TimerIRq
        n = mfrc522_read(ComIrqReg);
     812:	84 e0       	ldi	r24, 0x04	; 4
     814:	71 df       	rcall	.-286    	; 0x6f8 <mfrc522_read>
     816:	f8 2e       	mov	r15, r24
     818:	21 96       	adiw	r28, 0x01	; 1
     81a:	cf 3c       	cpi	r28, 0xCF	; 207
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));
     81c:	e7 e0       	ldi	r30, 0x07	; 7
     81e:	de 07       	cpc	r29, r30
     820:	09 f4       	brne	.+2      	; 0x824 <mfrc522_to_card+0xd8>
     822:	83 c0       	rjmp	.+262    	; 0x92a <mfrc522_to_card+0x1de>
     824:	81 2f       	mov	r24, r17
     826:	8f 21       	and	r24, r15
     828:	a1 f3       	breq	.-24     	; 0x812 <mfrc522_to_card+0xc6>
     82a:	87 c0       	rjmp	.+270    	; 0x93a <mfrc522_to_card+0x1ee>
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
        {
            status = CARD_FOUND;
            if (n & irqEn & 0x01)
     82c:	01 70       	andi	r16, 0x01	; 1
     82e:	f0 22       	and	r15, r16
            {   
				status = CARD_NOT_FOUND;	//??   
     830:	11 f0       	breq	.+4      	; 0x836 <mfrc522_to_card+0xea>
     832:	c2 e0       	ldi	r28, 0x02	; 2
	
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
        {
            status = CARD_FOUND;
     834:	01 c0       	rjmp	.+2      	; 0x838 <mfrc522_to_card+0xec>
            if (n & irqEn & 0x01)
            {   
				status = CARD_NOT_FOUND;	//??   
			}

            if (cmd == Transceive_CMD)
     836:	c1 e0       	ldi	r28, 0x01	; 1
     838:	fc e0       	ldi	r31, 0x0C	; 12
     83a:	9f 12       	cpse	r9, r31
            {
               	n = mfrc522_read(FIFOLevelReg);
     83c:	8a c0       	rjmp	.+276    	; 0x952 <mfrc522_to_card+0x206>
     83e:	8a e0       	ldi	r24, 0x0A	; 10
     840:	5b df       	rcall	.-330    	; 0x6f8 <mfrc522_read>
     842:	48 2e       	mov	r4, r24
              	lastBits = mfrc522_read(ControlReg) & 0x07;
     844:	8c e0       	ldi	r24, 0x0C	; 12
     846:	58 df       	rcall	.-336    	; 0x6f8 <mfrc522_read>
     848:	28 2f       	mov	r18, r24
     84a:	27 70       	andi	r18, 0x07	; 7
     84c:	a9 f0       	breq	.+42     	; 0x878 <mfrc522_to_card+0x12c>
                if (lastBits)
     84e:	84 2d       	mov	r24, r4
                {   
					*back_data_len = (n-1)*8 + lastBits;   
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	01 97       	sbiw	r24, 0x01	; 1
     854:	88 0f       	add	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	88 0f       	add	r24, r24
     85a:	99 1f       	adc	r25, r25
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	82 0f       	add	r24, r18
     862:	91 1d       	adc	r25, r1
     864:	09 2e       	mov	r0, r25
     866:	00 0c       	add	r0, r0
     868:	aa 0b       	sbc	r26, r26
     86a:	bb 0b       	sbc	r27, r27
     86c:	f5 01       	movw	r30, r10
     86e:	80 83       	st	Z, r24
     870:	91 83       	std	Z+1, r25	; 0x01
     872:	a2 83       	std	Z+2, r26	; 0x02
     874:	b3 83       	std	Z+3, r27	; 0x03
     876:	11 c0       	rjmp	.+34     	; 0x89a <mfrc522_to_card+0x14e>
     878:	84 2d       	mov	r24, r4
				}
                else
                {   
					*back_data_len = n*8;   
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	88 0f       	add	r24, r24
     87e:	99 1f       	adc	r25, r25
     880:	88 0f       	add	r24, r24
     882:	99 1f       	adc	r25, r25
     884:	88 0f       	add	r24, r24
     886:	99 1f       	adc	r25, r25
     888:	09 2e       	mov	r0, r25
     88a:	00 0c       	add	r0, r0
     88c:	aa 0b       	sbc	r26, r26
     88e:	bb 0b       	sbc	r27, r27
     890:	f5 01       	movw	r30, r10
     892:	80 83       	st	Z, r24
     894:	91 83       	std	Z+1, r25	; 0x01
     896:	a2 83       	std	Z+2, r26	; 0x02
     898:	b3 83       	std	Z+3, r27	; 0x03
     89a:	44 20       	and	r4, r4
				}

                if (n == 0)
     89c:	71 f0       	breq	.+28     	; 0x8ba <mfrc522_to_card+0x16e>
     89e:	84 2d       	mov	r24, r4
                {   
					n = MAX_LEN;   
				}
				
				//Reading the received data in FIFO
                for (i=0; i<n; i++)
     8a0:	81 31       	cpi	r24, 0x11	; 17
     8a2:	08 f0       	brcs	.+2      	; 0x8a6 <mfrc522_to_card+0x15a>
     8a4:	80 e1       	ldi	r24, 0x10	; 16
     8a6:	48 2e       	mov	r4, r24
     8a8:	51 2c       	mov	r5, r1
     8aa:	61 2c       	mov	r6, r1
     8ac:	71 2c       	mov	r7, r1
     8ae:	41 14       	cp	r4, r1
     8b0:	51 04       	cpc	r5, r1
     8b2:	61 04       	cpc	r6, r1
     8b4:	71 04       	cpc	r7, r1
     8b6:	29 f4       	brne	.+10     	; 0x8c2 <mfrc522_to_card+0x176>
     8b8:	4c c0       	rjmp	.+152    	; 0x952 <mfrc522_to_card+0x206>
     8ba:	41 2c       	mov	r4, r1
     8bc:	51 2c       	mov	r5, r1
     8be:	32 01       	movw	r6, r4
     8c0:	43 94       	inc	r4
     8c2:	08 2d       	mov	r16, r8
     8c4:	13 2d       	mov	r17, r3
     8c6:	c1 2c       	mov	r12, r1
     8c8:	d1 2c       	mov	r13, r1
     8ca:	76 01       	movw	r14, r12
                {   
					back_data[i] = mfrc522_read(FIFODataReg);    
     8cc:	89 e0       	ldi	r24, 0x09	; 9
     8ce:	14 df       	rcall	.-472    	; 0x6f8 <mfrc522_read>
     8d0:	f8 01       	movw	r30, r16
     8d2:	81 93       	st	Z+, r24
     8d4:	8f 01       	movw	r16, r30
                {   
					n = MAX_LEN;   
				}
				
				//Reading the received data in FIFO
                for (i=0; i<n; i++)
     8d6:	ff ef       	ldi	r31, 0xFF	; 255
     8d8:	cf 1a       	sub	r12, r31
     8da:	df 0a       	sbc	r13, r31
     8dc:	ef 0a       	sbc	r14, r31
     8de:	ff 0a       	sbc	r15, r31
     8e0:	c4 14       	cp	r12, r4
     8e2:	d5 04       	cpc	r13, r5
     8e4:	e6 04       	cpc	r14, r6
     8e6:	f7 04       	cpc	r15, r7
    {   
		mfrc522_write(FIFODataReg, send_data[i]);    
	}

	//Execute the cmd
	mfrc522_write(CommandReg, cmd);
     8e8:	88 f3       	brcs	.-30     	; 0x8cc <mfrc522_to_card+0x180>
     8ea:	33 c0       	rjmp	.+102    	; 0x952 <mfrc522_to_card+0x206>
     8ec:	6c e0       	ldi	r22, 0x0C	; 12
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
			waitIRq = 0x30;
     8ee:	81 e0       	ldi	r24, 0x01	; 1
			waitIRq = 0x10;
			break;
		}
		case Transceive_CMD:	//Transmit FIFO data
		{
			irqEn = 0x77;
     8f0:	f8 de       	rcall	.-528    	; 0x6e2 <mfrc522_write>
		default:
			break;
    }
   
    //mfrc522_write(ComIEnReg, irqEn|0x80);	//Interrupt request
    n=mfrc522_read(ComIrqReg);
     8f2:	10 e3       	ldi	r17, 0x30	; 48
     8f4:	07 e7       	ldi	r16, 0x77	; 119
     8f6:	80 cf       	rjmp	.-256    	; 0x7f8 <mfrc522_to_card+0xac>
    mfrc522_write(ComIrqReg,n&(~0x80));//clear all interrupt bits
     8f8:	84 e0       	ldi	r24, 0x04	; 4
     8fa:	fe de       	rcall	.-516    	; 0x6f8 <mfrc522_read>
     8fc:	68 2f       	mov	r22, r24
     8fe:	6f 77       	andi	r22, 0x7F	; 127
     900:	84 e0       	ldi	r24, 0x04	; 4
    n=mfrc522_read(FIFOLevelReg);
     902:	ef de       	rcall	.-546    	; 0x6e2 <mfrc522_write>
     904:	8a e0       	ldi	r24, 0x0A	; 10
     906:	f8 de       	rcall	.-528    	; 0x6f8 <mfrc522_read>
    mfrc522_write(FIFOLevelReg,n|0x80);//flush FIFO data
     908:	68 2f       	mov	r22, r24
     90a:	60 68       	ori	r22, 0x80	; 128
     90c:	8a e0       	ldi	r24, 0x0A	; 10
     90e:	e9 de       	rcall	.-558    	; 0x6e2 <mfrc522_write>
    
	mfrc522_write(CommandReg, Idle_CMD);	//NO action; Cancel the current cmd???
     910:	60 e0       	ldi	r22, 0x00	; 0
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	e6 de       	rcall	.-564    	; 0x6e2 <mfrc522_write>

	//Writing data to the FIFO
    for (i=0; i<send_data_len; i++)
     916:	51 2c       	mov	r5, r1
     918:	61 2c       	mov	r6, r1
     91a:	71 2c       	mov	r7, r1
     91c:	41 14       	cp	r4, r1
     91e:	51 04       	cpc	r5, r1
     920:	61 04       	cpc	r6, r1
     922:	71 04       	cpc	r7, r1
     924:	09 f0       	breq	.+2      	; 0x928 <mfrc522_to_card+0x1dc>
        n = mfrc522_read(ComIrqReg);
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));

	tmp=mfrc522_read(BitFramingReg);
     926:	4e cf       	rjmp	.-356    	; 0x7c4 <mfrc522_to_card+0x78>
     928:	e1 cf       	rjmp	.-62     	; 0x8ec <mfrc522_to_card+0x1a0>
     92a:	8d e0       	ldi	r24, 0x0D	; 13
	mfrc522_write(BitFramingReg,tmp&(~0x80));
     92c:	e5 de       	rcall	.-566    	; 0x6f8 <mfrc522_read>
     92e:	68 2f       	mov	r22, r24
     930:	6f 77       	andi	r22, 0x7F	; 127
     932:	8d e0       	ldi	r24, 0x0D	; 13
     934:	d6 de       	rcall	.-596    	; 0x6e2 <mfrc522_write>
	return status;
}

uint8_t mfrc522_to_card(uint8_t cmd, uint8_t *send_data, uint8_t send_data_len, uint8_t *back_data, uint32_t *back_data_len)
{
	uint8_t status = ERROR;
     936:	c3 e0       	ldi	r28, 0x03	; 3
     938:	0c c0       	rjmp	.+24     	; 0x952 <mfrc522_to_card+0x206>
        n = mfrc522_read(ComIrqReg);
        i--;
    }
    while ((i!=0) && !(n&0x01) && !(n&waitIRq));

	tmp=mfrc522_read(BitFramingReg);
     93a:	8d e0       	ldi	r24, 0x0D	; 13
     93c:	dd de       	rcall	.-582    	; 0x6f8 <mfrc522_read>
     93e:	68 2f       	mov	r22, r24
	mfrc522_write(BitFramingReg,tmp&(~0x80));
     940:	6f 77       	andi	r22, 0x7F	; 127
     942:	8d e0       	ldi	r24, 0x0D	; 13
     944:	ce de       	rcall	.-612    	; 0x6e2 <mfrc522_write>
     946:	86 e0       	ldi	r24, 0x06	; 6
     948:	d7 de       	rcall	.-594    	; 0x6f8 <mfrc522_read>
	
    if (i != 0)
    {    
        if(!(mfrc522_read(ErrorReg) & 0x1B))	//BufferOvfl Collerr CRCErr ProtecolErr
     94a:	8b 71       	andi	r24, 0x1B	; 27
     94c:	09 f4       	brne	.+2      	; 0x950 <mfrc522_to_card+0x204>
     94e:	6e cf       	rjmp	.-292    	; 0x82c <mfrc522_to_card+0xe0>
     950:	c3 e0       	ldi	r28, 0x03	; 3
     952:	8c 2f       	mov	r24, r28
     954:	df 91       	pop	r29
				}
            }
        }
        else
        {   
			status = ERROR;  
     956:	cf 91       	pop	r28
	
    //SetBitMask(ControlReg,0x80);           //timer stops
    //mfrc522_write(cmdReg, PCD_IDLE); 

    return status;
}
     958:	1f 91       	pop	r17
     95a:	0f 91       	pop	r16
     95c:	ff 90       	pop	r15
     95e:	ef 90       	pop	r14
     960:	df 90       	pop	r13
     962:	cf 90       	pop	r12
     964:	bf 90       	pop	r11
     966:	af 90       	pop	r10
     968:	9f 90       	pop	r9
     96a:	8f 90       	pop	r8
     96c:	7f 90       	pop	r7
     96e:	6f 90       	pop	r6
     970:	5f 90       	pop	r5
     972:	4f 90       	pop	r4
     974:	3f 90       	pop	r3
     976:	08 95       	ret

00000978 <mfrc522_request>:
     978:	ef 92       	push	r14
     97a:	ff 92       	push	r15
     97c:	0f 93       	push	r16
{
	mfrc522_write(CommandReg,SoftReset_CMD);
}

uint8_t	mfrc522_request(uint8_t req_mode, uint8_t * tag_type)
{
     97e:	1f 93       	push	r17
     980:	cf 93       	push	r28
     982:	df 93       	push	r29
     984:	00 d0       	rcall	.+0      	; 0x986 <mfrc522_request+0xe>
     986:	1f 92       	push	r1
     988:	cd b7       	in	r28, 0x3d	; 61
     98a:	de b7       	in	r29, 0x3e	; 62
     98c:	18 2f       	mov	r17, r24
     98e:	7b 01       	movw	r14, r22
	uint8_t  status;  
	uint32_t backBits;//The received data bits

	mfrc522_write(BitFramingReg, 0x07);//TxLastBists = BitFramingReg[2..0]	???
     990:	67 e0       	ldi	r22, 0x07	; 7
     992:	8d e0       	ldi	r24, 0x0D	; 13
     994:	a6 de       	rcall	.-692    	; 0x6e2 <mfrc522_write>
	
	tag_type[0] = req_mode;
     996:	f7 01       	movw	r30, r14
     998:	10 83       	st	Z, r17
	status = mfrc522_to_card(Transceive_CMD, tag_type, 1, tag_type, &backBits);
     99a:	8e 01       	movw	r16, r28
     99c:	0f 5f       	subi	r16, 0xFF	; 255
     99e:	1f 4f       	sbci	r17, 0xFF	; 255
     9a0:	97 01       	movw	r18, r14
     9a2:	41 e0       	ldi	r20, 0x01	; 1
     9a4:	b7 01       	movw	r22, r14
     9a6:	8c e0       	ldi	r24, 0x0C	; 12
     9a8:	d1 de       	rcall	.-606    	; 0x74c <mfrc522_to_card>

	if ((status != CARD_FOUND) || (backBits != 0x10))
     9aa:	81 30       	cpi	r24, 0x01	; 1
     9ac:	59 f4       	brne	.+22     	; 0x9c4 <mfrc522_request+0x4c>
     9ae:	49 81       	ldd	r20, Y+1	; 0x01
     9b0:	5a 81       	ldd	r21, Y+2	; 0x02
     9b2:	6b 81       	ldd	r22, Y+3	; 0x03
     9b4:	7c 81       	ldd	r23, Y+4	; 0x04
     9b6:	40 31       	cpi	r20, 0x10	; 16
     9b8:	51 05       	cpc	r21, r1
     9ba:	61 05       	cpc	r22, r1
     9bc:	71 05       	cpc	r23, r1
     9be:	19 f0       	breq	.+6      	; 0x9c6 <mfrc522_request+0x4e>
	{    
		status = ERROR;
     9c0:	83 e0       	ldi	r24, 0x03	; 3
     9c2:	01 c0       	rjmp	.+2      	; 0x9c6 <mfrc522_request+0x4e>
     9c4:	83 e0       	ldi	r24, 0x03	; 3
	}
   
	return status;
}
     9c6:	0f 90       	pop	r0
     9c8:	0f 90       	pop	r0
     9ca:	0f 90       	pop	r0
     9cc:	0f 90       	pop	r0
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	1f 91       	pop	r17
     9d4:	0f 91       	pop	r16
     9d6:	ff 90       	pop	r15
     9d8:	ef 90       	pop	r14
     9da:	08 95       	ret

000009dc <mfrc522_get_card_serial>:
    return status;
}


uint8_t mfrc522_get_card_serial(uint8_t * serial_out)
{
     9dc:	ef 92       	push	r14
     9de:	ff 92       	push	r15
     9e0:	0f 93       	push	r16
     9e2:	1f 93       	push	r17
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	00 d0       	rcall	.+0      	; 0x9ea <mfrc522_get_card_serial+0xe>
     9ea:	1f 92       	push	r1
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	7c 01       	movw	r14, r24
	uint8_t status;
    uint8_t i;
	uint8_t serNumCheck=0;
    uint32_t unLen;
    
	mfrc522_write(BitFramingReg, 0x00);		//TxLastBists = BitFramingReg[2..0]
     9f2:	60 e0       	ldi	r22, 0x00	; 0
     9f4:	8d e0       	ldi	r24, 0x0D	; 13
     9f6:	75 de       	rcall	.-790    	; 0x6e2 <mfrc522_write>
 
    serial_out[0] = PICC_ANTICOLL;
     9f8:	83 e9       	ldi	r24, 0x93	; 147
     9fa:	f7 01       	movw	r30, r14
     9fc:	80 83       	st	Z, r24
    serial_out[1] = 0x20;
     9fe:	80 e2       	ldi	r24, 0x20	; 32
     a00:	81 83       	std	Z+1, r24	; 0x01
    status = mfrc522_to_card(Transceive_CMD, serial_out, 2, serial_out, &unLen);
     a02:	8e 01       	movw	r16, r28
     a04:	0f 5f       	subi	r16, 0xFF	; 255
     a06:	1f 4f       	sbci	r17, 0xFF	; 255
     a08:	97 01       	movw	r18, r14
     a0a:	42 e0       	ldi	r20, 0x02	; 2
     a0c:	b7 01       	movw	r22, r14
     a0e:	8c e0       	ldi	r24, 0x0C	; 12
     a10:	9d de       	rcall	.-710    	; 0x74c <mfrc522_to_card>

    if (status == CARD_FOUND)
     a12:	81 30       	cpi	r24, 0x01	; 1
     a14:	71 f4       	brne	.+28     	; 0xa32 <mfrc522_get_card_serial+0x56>
     a16:	f7 01       	movw	r30, r14
     a18:	a7 01       	movw	r20, r14
     a1a:	4c 5f       	subi	r20, 0xFC	; 252
     a1c:	5f 4f       	sbci	r21, 0xFF	; 255
     a1e:	90 e0       	ldi	r25, 0x00	; 0
	{
		//Check card serial number
		for (i=0; i<4; i++)
		{   
		 	serNumCheck ^= serial_out[i];
     a20:	21 91       	ld	r18, Z+
     a22:	92 27       	eor	r25, r18
    status = mfrc522_to_card(Transceive_CMD, serial_out, 2, serial_out, &unLen);

    if (status == CARD_FOUND)
	{
		//Check card serial number
		for (i=0; i<4; i++)
     a24:	4e 17       	cp	r20, r30
     a26:	5f 07       	cpc	r21, r31
     a28:	d9 f7       	brne	.-10     	; 0xa20 <mfrc522_get_card_serial+0x44>
		{   
		 	serNumCheck ^= serial_out[i];
		}
		if (serNumCheck != serial_out[i])
     a2a:	f7 01       	movw	r30, r14
     a2c:	24 81       	ldd	r18, Z+4	; 0x04
     a2e:	92 13       	cpse	r25, r18
		{   
			status = ERROR;    
     a30:	83 e0       	ldi	r24, 0x03	; 3
		}
    }
    return status;
}
     a32:	0f 90       	pop	r0
     a34:	0f 90       	pop	r0
     a36:	0f 90       	pop	r0
     a38:	0f 90       	pop	r0
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	1f 91       	pop	r17
     a40:	0f 91       	pop	r16
     a42:	ff 90       	pop	r15
     a44:	ef 90       	pop	r14
     a46:	08 95       	ret

00000a48 <Validate_Card>:

int Validate_Card (uint8_t *arr1, uint8_t *arr2)
{		
	for (int i = 0; i < 8; i++)	
		if (arr1[i] != arr2[i])
     a48:	fc 01       	movw	r30, r24
     a4a:	30 81       	ld	r19, Z
     a4c:	fb 01       	movw	r30, r22
     a4e:	20 81       	ld	r18, Z
     a50:	32 13       	cpse	r19, r18
     a52:	11 c0       	rjmp	.+34     	; 0xa76 <Validate_Card+0x2e>
     a54:	fc 01       	movw	r30, r24
     a56:	31 96       	adiw	r30, 0x01	; 1
     a58:	db 01       	movw	r26, r22
     a5a:	11 96       	adiw	r26, 0x01	; 1
     a5c:	ac 01       	movw	r20, r24
     a5e:	48 5f       	subi	r20, 0xF8	; 248
     a60:	5f 4f       	sbci	r21, 0xFF	; 255
     a62:	21 91       	ld	r18, Z+
     a64:	9d 91       	ld	r25, X+
     a66:	29 13       	cpse	r18, r25
     a68:	09 c0       	rjmp	.+18     	; 0xa7c <Validate_Card+0x34>
    return status;
}

int Validate_Card (uint8_t *arr1, uint8_t *arr2)
{		
	for (int i = 0; i < 8; i++)	
     a6a:	e4 17       	cp	r30, r20
     a6c:	f5 07       	cpc	r31, r21
     a6e:	c9 f7       	brne	.-14     	; 0xa62 <Validate_Card+0x1a>
		if (arr1[i] != arr2[i])
		{
			return 0;
		}		
	return 1;
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	08 95       	ret
int Validate_Card (uint8_t *arr1, uint8_t *arr2)
{		
	for (int i = 0; i < 8; i++)	
		if (arr1[i] != arr2[i])
		{
			return 0;
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	08 95       	ret
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	90 e0       	ldi	r25, 0x00	; 0
		}		
	return 1;
     a80:	08 95       	ret

00000a82 <UartPutchar>:
	(0 << UMSEL00);
}

void UartPutchar(char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
     a82:	e0 ec       	ldi	r30, 0xC0	; 192
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	90 81       	ld	r25, Z
     a88:	95 ff       	sbrs	r25, 5
     a8a:	fd cf       	rjmp	.-6      	; 0xa86 <UartPutchar+0x4>
	UDR0 = data;
     a8c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     a90:	08 95       	ret

00000a92 <UartGetchar>:
}

int UartGetchar(void)
{
     a92:	cf 93       	push	r28
	char data;
	
	while (!(UCSR0A & (1 << RXC0)));
     a94:	e0 ec       	ldi	r30, 0xC0	; 192
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	80 81       	ld	r24, Z
     a9a:	88 23       	and	r24, r24
     a9c:	ec f7       	brge	.-6      	; 0xa98 <UartGetchar+0x6>
	
	data = UDR0;
     a9e:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	if (data == '\n') {
     aa2:	ca 30       	cpi	r28, 0x0A	; 10
     aa4:	29 f0       	breq	.+10     	; 0xab0 <UartGetchar+0x1e>
		return -1;
	}
	UartPutchar(data);
     aa6:	8c 2f       	mov	r24, r28
     aa8:	ec df       	rcall	.-40     	; 0xa82 <UartPutchar>

	return data;
     aaa:	8c 2f       	mov	r24, r28
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	02 c0       	rjmp	.+4      	; 0xab4 <UartGetchar+0x22>
	while (!(UCSR0A & (1 << RXC0)));
	
	data = UDR0;
	
	if (data == '\n') {
		return -1;
     ab0:	8f ef       	ldi	r24, 0xFF	; 255
     ab2:	9f ef       	ldi	r25, 0xFF	; 255
	}
	UartPutchar(data);

	return data;
     ab4:	cf 91       	pop	r28
     ab6:	08 95       	ret

00000ab8 <UartInit>:

static FILE the_stdio = FDEV_SETUP_STREAM(UartPutchar, UartGetchar, _FDEV_SETUP_RW);

void UartInit(void)
{
	stdout = &the_stdio;
     ab8:	ea ef       	ldi	r30, 0xFA	; 250
     aba:	f2 e0       	ldi	r31, 0x02	; 2
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	92 e0       	ldi	r25, 0x02	; 2
     ac0:	93 83       	std	Z+3, r25	; 0x03
     ac2:	82 83       	std	Z+2, r24	; 0x02
	stdin = &the_stdio;
     ac4:	91 83       	std	Z+1, r25	; 0x01
     ac6:	80 83       	st	Z, r24
	
	UBRR0H = UBRRH_VALUE;
     ac8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = UBRRL_VALUE;
     acc:	87 e6       	ldi	r24, 0x67	; 103
     ace:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>

	#if USE_2X
	UCSR0A |= (1 << U2X0);
	#endif

	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     ad2:	88 e1       	ldi	r24, 0x18	; 24
     ad4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>

	// 8-bit, 1 stop bit, no parity, asynchronous UART
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00) | (0 << USBS0) |
     ad8:	86 e0       	ldi	r24, 0x06	; 6
     ada:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     ade:	08 95       	ret

00000ae0 <spi_init>:
#include "spi.h"

#if SPI_CONFIG_AS_MASTER
void spi_init()
{
	SPI_DDR |= (1<<SPI_MOSI)|(1<<SPI_SCK)|(1<<SPI_SS);
     ae0:	84 b1       	in	r24, 0x04	; 4
     ae2:	87 60       	ori	r24, 0x07	; 7
     ae4:	84 b9       	out	0x04, r24	; 4
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);//prescaler 16
     ae6:	8c b5       	in	r24, 0x2c	; 44
     ae8:	81 65       	ori	r24, 0x51	; 81
     aea:	8c bd       	out	0x2c, r24	; 44
     aec:	08 95       	ret

00000aee <spi_transmit>:
}


uint8_t spi_transmit(uint8_t data)
{
	SPDR = data;
     aee:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     af0:	0d b4       	in	r0, 0x2d	; 45
     af2:	07 fe       	sbrs	r0, 7
     af4:	fd cf       	rjmp	.-6      	; 0xaf0 <spi_transmit+0x2>
	
	return SPDR;
     af6:	8e b5       	in	r24, 0x2e	; 46
}
     af8:	08 95       	ret

00000afa <vfprintf>:
     afa:	2f 92       	push	r2
     afc:	3f 92       	push	r3
     afe:	4f 92       	push	r4
     b00:	5f 92       	push	r5
     b02:	6f 92       	push	r6
     b04:	7f 92       	push	r7
     b06:	8f 92       	push	r8
     b08:	9f 92       	push	r9
     b0a:	af 92       	push	r10
     b0c:	bf 92       	push	r11
     b0e:	cf 92       	push	r12
     b10:	df 92       	push	r13
     b12:	ef 92       	push	r14
     b14:	ff 92       	push	r15
     b16:	0f 93       	push	r16
     b18:	1f 93       	push	r17
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	cd b7       	in	r28, 0x3d	; 61
     b20:	de b7       	in	r29, 0x3e	; 62
     b22:	60 97       	sbiw	r28, 0x10	; 16
     b24:	0f b6       	in	r0, 0x3f	; 63
     b26:	f8 94       	cli
     b28:	de bf       	out	0x3e, r29	; 62
     b2a:	0f be       	out	0x3f, r0	; 63
     b2c:	cd bf       	out	0x3d, r28	; 61
     b2e:	7c 01       	movw	r14, r24
     b30:	1b 01       	movw	r2, r22
     b32:	6a 01       	movw	r12, r20
     b34:	fc 01       	movw	r30, r24
     b36:	17 82       	std	Z+7, r1	; 0x07
     b38:	16 82       	std	Z+6, r1	; 0x06
     b3a:	83 81       	ldd	r24, Z+3	; 0x03
     b3c:	81 ff       	sbrs	r24, 1
     b3e:	36 c3       	rjmp	.+1644   	; 0x11ac <vfprintf+0x6b2>
     b40:	9e 01       	movw	r18, r28
     b42:	2f 5f       	subi	r18, 0xFF	; 255
     b44:	3f 4f       	sbci	r19, 0xFF	; 255
     b46:	39 01       	movw	r6, r18
     b48:	f7 01       	movw	r30, r14
     b4a:	93 81       	ldd	r25, Z+3	; 0x03
     b4c:	f1 01       	movw	r30, r2
     b4e:	93 fd       	sbrc	r25, 3
     b50:	85 91       	lpm	r24, Z+
     b52:	93 ff       	sbrs	r25, 3
     b54:	81 91       	ld	r24, Z+
     b56:	1f 01       	movw	r2, r30
     b58:	88 23       	and	r24, r24
     b5a:	09 f4       	brne	.+2      	; 0xb5e <vfprintf+0x64>
     b5c:	23 c3       	rjmp	.+1606   	; 0x11a4 <vfprintf+0x6aa>
     b5e:	85 32       	cpi	r24, 0x25	; 37
     b60:	39 f4       	brne	.+14     	; 0xb70 <vfprintf+0x76>
     b62:	93 fd       	sbrc	r25, 3
     b64:	85 91       	lpm	r24, Z+
     b66:	93 ff       	sbrs	r25, 3
     b68:	81 91       	ld	r24, Z+
     b6a:	1f 01       	movw	r2, r30
     b6c:	85 32       	cpi	r24, 0x25	; 37
     b6e:	39 f4       	brne	.+14     	; 0xb7e <vfprintf+0x84>
     b70:	b7 01       	movw	r22, r14
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     b78:	56 01       	movw	r10, r12
     b7a:	65 01       	movw	r12, r10
     b7c:	e5 cf       	rjmp	.-54     	; 0xb48 <vfprintf+0x4e>
     b7e:	10 e0       	ldi	r17, 0x00	; 0
     b80:	51 2c       	mov	r5, r1
     b82:	91 2c       	mov	r9, r1
     b84:	ff e1       	ldi	r31, 0x1F	; 31
     b86:	f9 15       	cp	r31, r9
     b88:	d8 f0       	brcs	.+54     	; 0xbc0 <vfprintf+0xc6>
     b8a:	8b 32       	cpi	r24, 0x2B	; 43
     b8c:	79 f0       	breq	.+30     	; 0xbac <vfprintf+0xb2>
     b8e:	38 f4       	brcc	.+14     	; 0xb9e <vfprintf+0xa4>
     b90:	80 32       	cpi	r24, 0x20	; 32
     b92:	79 f0       	breq	.+30     	; 0xbb2 <vfprintf+0xb8>
     b94:	83 32       	cpi	r24, 0x23	; 35
     b96:	a1 f4       	brne	.+40     	; 0xbc0 <vfprintf+0xc6>
     b98:	f9 2d       	mov	r31, r9
     b9a:	f0 61       	ori	r31, 0x10	; 16
     b9c:	2e c0       	rjmp	.+92     	; 0xbfa <vfprintf+0x100>
     b9e:	8d 32       	cpi	r24, 0x2D	; 45
     ba0:	61 f0       	breq	.+24     	; 0xbba <vfprintf+0xc0>
     ba2:	80 33       	cpi	r24, 0x30	; 48
     ba4:	69 f4       	brne	.+26     	; 0xbc0 <vfprintf+0xc6>
     ba6:	29 2d       	mov	r18, r9
     ba8:	21 60       	ori	r18, 0x01	; 1
     baa:	2d c0       	rjmp	.+90     	; 0xc06 <vfprintf+0x10c>
     bac:	39 2d       	mov	r19, r9
     bae:	32 60       	ori	r19, 0x02	; 2
     bb0:	93 2e       	mov	r9, r19
     bb2:	89 2d       	mov	r24, r9
     bb4:	84 60       	ori	r24, 0x04	; 4
     bb6:	98 2e       	mov	r9, r24
     bb8:	2a c0       	rjmp	.+84     	; 0xc0e <vfprintf+0x114>
     bba:	e9 2d       	mov	r30, r9
     bbc:	e8 60       	ori	r30, 0x08	; 8
     bbe:	15 c0       	rjmp	.+42     	; 0xbea <vfprintf+0xf0>
     bc0:	97 fc       	sbrc	r9, 7
     bc2:	2d c0       	rjmp	.+90     	; 0xc1e <vfprintf+0x124>
     bc4:	20 ed       	ldi	r18, 0xD0	; 208
     bc6:	28 0f       	add	r18, r24
     bc8:	2a 30       	cpi	r18, 0x0A	; 10
     bca:	88 f4       	brcc	.+34     	; 0xbee <vfprintf+0xf4>
     bcc:	96 fe       	sbrs	r9, 6
     bce:	06 c0       	rjmp	.+12     	; 0xbdc <vfprintf+0xe2>
     bd0:	3a e0       	ldi	r19, 0x0A	; 10
     bd2:	13 9f       	mul	r17, r19
     bd4:	20 0d       	add	r18, r0
     bd6:	11 24       	eor	r1, r1
     bd8:	12 2f       	mov	r17, r18
     bda:	19 c0       	rjmp	.+50     	; 0xc0e <vfprintf+0x114>
     bdc:	8a e0       	ldi	r24, 0x0A	; 10
     bde:	58 9e       	mul	r5, r24
     be0:	20 0d       	add	r18, r0
     be2:	11 24       	eor	r1, r1
     be4:	52 2e       	mov	r5, r18
     be6:	e9 2d       	mov	r30, r9
     be8:	e0 62       	ori	r30, 0x20	; 32
     bea:	9e 2e       	mov	r9, r30
     bec:	10 c0       	rjmp	.+32     	; 0xc0e <vfprintf+0x114>
     bee:	8e 32       	cpi	r24, 0x2E	; 46
     bf0:	31 f4       	brne	.+12     	; 0xbfe <vfprintf+0x104>
     bf2:	96 fc       	sbrc	r9, 6
     bf4:	d7 c2       	rjmp	.+1454   	; 0x11a4 <vfprintf+0x6aa>
     bf6:	f9 2d       	mov	r31, r9
     bf8:	f0 64       	ori	r31, 0x40	; 64
     bfa:	9f 2e       	mov	r9, r31
     bfc:	08 c0       	rjmp	.+16     	; 0xc0e <vfprintf+0x114>
     bfe:	8c 36       	cpi	r24, 0x6C	; 108
     c00:	21 f4       	brne	.+8      	; 0xc0a <vfprintf+0x110>
     c02:	29 2d       	mov	r18, r9
     c04:	20 68       	ori	r18, 0x80	; 128
     c06:	92 2e       	mov	r9, r18
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <vfprintf+0x114>
     c0a:	88 36       	cpi	r24, 0x68	; 104
     c0c:	41 f4       	brne	.+16     	; 0xc1e <vfprintf+0x124>
     c0e:	f1 01       	movw	r30, r2
     c10:	93 fd       	sbrc	r25, 3
     c12:	85 91       	lpm	r24, Z+
     c14:	93 ff       	sbrs	r25, 3
     c16:	81 91       	ld	r24, Z+
     c18:	1f 01       	movw	r2, r30
     c1a:	81 11       	cpse	r24, r1
     c1c:	b3 cf       	rjmp	.-154    	; 0xb84 <vfprintf+0x8a>
     c1e:	9b eb       	ldi	r25, 0xBB	; 187
     c20:	98 0f       	add	r25, r24
     c22:	93 30       	cpi	r25, 0x03	; 3
     c24:	20 f4       	brcc	.+8      	; 0xc2e <vfprintf+0x134>
     c26:	99 2d       	mov	r25, r9
     c28:	90 61       	ori	r25, 0x10	; 16
     c2a:	80 5e       	subi	r24, 0xE0	; 224
     c2c:	07 c0       	rjmp	.+14     	; 0xc3c <vfprintf+0x142>
     c2e:	9b e9       	ldi	r25, 0x9B	; 155
     c30:	98 0f       	add	r25, r24
     c32:	93 30       	cpi	r25, 0x03	; 3
     c34:	08 f0       	brcs	.+2      	; 0xc38 <vfprintf+0x13e>
     c36:	63 c1       	rjmp	.+710    	; 0xefe <vfprintf+0x404>
     c38:	99 2d       	mov	r25, r9
     c3a:	9f 7e       	andi	r25, 0xEF	; 239
     c3c:	96 ff       	sbrs	r25, 6
     c3e:	16 e0       	ldi	r17, 0x06	; 6
     c40:	9f 73       	andi	r25, 0x3F	; 63
     c42:	99 2e       	mov	r9, r25
     c44:	85 36       	cpi	r24, 0x65	; 101
     c46:	19 f4       	brne	.+6      	; 0xc4e <vfprintf+0x154>
     c48:	90 64       	ori	r25, 0x40	; 64
     c4a:	99 2e       	mov	r9, r25
     c4c:	08 c0       	rjmp	.+16     	; 0xc5e <vfprintf+0x164>
     c4e:	86 36       	cpi	r24, 0x66	; 102
     c50:	21 f4       	brne	.+8      	; 0xc5a <vfprintf+0x160>
     c52:	39 2f       	mov	r19, r25
     c54:	30 68       	ori	r19, 0x80	; 128
     c56:	93 2e       	mov	r9, r19
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <vfprintf+0x164>
     c5a:	11 11       	cpse	r17, r1
     c5c:	11 50       	subi	r17, 0x01	; 1
     c5e:	97 fe       	sbrs	r9, 7
     c60:	07 c0       	rjmp	.+14     	; 0xc70 <vfprintf+0x176>
     c62:	1c 33       	cpi	r17, 0x3C	; 60
     c64:	50 f4       	brcc	.+20     	; 0xc7a <vfprintf+0x180>
     c66:	44 24       	eor	r4, r4
     c68:	43 94       	inc	r4
     c6a:	41 0e       	add	r4, r17
     c6c:	27 e0       	ldi	r18, 0x07	; 7
     c6e:	0b c0       	rjmp	.+22     	; 0xc86 <vfprintf+0x18c>
     c70:	18 30       	cpi	r17, 0x08	; 8
     c72:	38 f0       	brcs	.+14     	; 0xc82 <vfprintf+0x188>
     c74:	27 e0       	ldi	r18, 0x07	; 7
     c76:	17 e0       	ldi	r17, 0x07	; 7
     c78:	05 c0       	rjmp	.+10     	; 0xc84 <vfprintf+0x18a>
     c7a:	27 e0       	ldi	r18, 0x07	; 7
     c7c:	9c e3       	ldi	r25, 0x3C	; 60
     c7e:	49 2e       	mov	r4, r25
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <vfprintf+0x18c>
     c82:	21 2f       	mov	r18, r17
     c84:	41 2c       	mov	r4, r1
     c86:	56 01       	movw	r10, r12
     c88:	84 e0       	ldi	r24, 0x04	; 4
     c8a:	a8 0e       	add	r10, r24
     c8c:	b1 1c       	adc	r11, r1
     c8e:	f6 01       	movw	r30, r12
     c90:	60 81       	ld	r22, Z
     c92:	71 81       	ldd	r23, Z+1	; 0x01
     c94:	82 81       	ldd	r24, Z+2	; 0x02
     c96:	93 81       	ldd	r25, Z+3	; 0x03
     c98:	04 2d       	mov	r16, r4
     c9a:	a3 01       	movw	r20, r6
     c9c:	dc d7       	rcall	.+4024   	; 0x1c56 <__ftoa_engine>
     c9e:	6c 01       	movw	r12, r24
     ca0:	f9 81       	ldd	r31, Y+1	; 0x01
     ca2:	fc 87       	std	Y+12, r31	; 0x0c
     ca4:	f0 ff       	sbrs	r31, 0
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <vfprintf+0x1b2>
     ca8:	f3 ff       	sbrs	r31, 3
     caa:	06 c0       	rjmp	.+12     	; 0xcb8 <vfprintf+0x1be>
     cac:	91 fc       	sbrc	r9, 1
     cae:	06 c0       	rjmp	.+12     	; 0xcbc <vfprintf+0x1c2>
     cb0:	92 fe       	sbrs	r9, 2
     cb2:	06 c0       	rjmp	.+12     	; 0xcc0 <vfprintf+0x1c6>
     cb4:	00 e2       	ldi	r16, 0x20	; 32
     cb6:	05 c0       	rjmp	.+10     	; 0xcc2 <vfprintf+0x1c8>
     cb8:	0d e2       	ldi	r16, 0x2D	; 45
     cba:	03 c0       	rjmp	.+6      	; 0xcc2 <vfprintf+0x1c8>
     cbc:	0b e2       	ldi	r16, 0x2B	; 43
     cbe:	01 c0       	rjmp	.+2      	; 0xcc2 <vfprintf+0x1c8>
     cc0:	00 e0       	ldi	r16, 0x00	; 0
     cc2:	8c 85       	ldd	r24, Y+12	; 0x0c
     cc4:	8c 70       	andi	r24, 0x0C	; 12
     cc6:	19 f0       	breq	.+6      	; 0xcce <vfprintf+0x1d4>
     cc8:	01 11       	cpse	r16, r1
     cca:	4e c2       	rjmp	.+1180   	; 0x1168 <vfprintf+0x66e>
     ccc:	8b c2       	rjmp	.+1302   	; 0x11e4 <vfprintf+0x6ea>
     cce:	97 fe       	sbrs	r9, 7
     cd0:	10 c0       	rjmp	.+32     	; 0xcf2 <vfprintf+0x1f8>
     cd2:	4c 0c       	add	r4, r12
     cd4:	fc 85       	ldd	r31, Y+12	; 0x0c
     cd6:	f4 ff       	sbrs	r31, 4
     cd8:	04 c0       	rjmp	.+8      	; 0xce2 <vfprintf+0x1e8>
     cda:	8a 81       	ldd	r24, Y+2	; 0x02
     cdc:	81 33       	cpi	r24, 0x31	; 49
     cde:	09 f4       	brne	.+2      	; 0xce2 <vfprintf+0x1e8>
     ce0:	4a 94       	dec	r4
     ce2:	14 14       	cp	r1, r4
     ce4:	74 f5       	brge	.+92     	; 0xd42 <vfprintf+0x248>
     ce6:	28 e0       	ldi	r18, 0x08	; 8
     ce8:	24 15       	cp	r18, r4
     cea:	78 f5       	brcc	.+94     	; 0xd4a <vfprintf+0x250>
     cec:	88 e0       	ldi	r24, 0x08	; 8
     cee:	48 2e       	mov	r4, r24
     cf0:	2c c0       	rjmp	.+88     	; 0xd4a <vfprintf+0x250>
     cf2:	96 fc       	sbrc	r9, 6
     cf4:	2a c0       	rjmp	.+84     	; 0xd4a <vfprintf+0x250>
     cf6:	81 2f       	mov	r24, r17
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	8c 15       	cp	r24, r12
     cfc:	9d 05       	cpc	r25, r13
     cfe:	9c f0       	brlt	.+38     	; 0xd26 <vfprintf+0x22c>
     d00:	3c ef       	ldi	r19, 0xFC	; 252
     d02:	c3 16       	cp	r12, r19
     d04:	3f ef       	ldi	r19, 0xFF	; 255
     d06:	d3 06       	cpc	r13, r19
     d08:	74 f0       	brlt	.+28     	; 0xd26 <vfprintf+0x22c>
     d0a:	89 2d       	mov	r24, r9
     d0c:	80 68       	ori	r24, 0x80	; 128
     d0e:	98 2e       	mov	r9, r24
     d10:	0a c0       	rjmp	.+20     	; 0xd26 <vfprintf+0x22c>
     d12:	e2 e0       	ldi	r30, 0x02	; 2
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	ec 0f       	add	r30, r28
     d18:	fd 1f       	adc	r31, r29
     d1a:	e1 0f       	add	r30, r17
     d1c:	f1 1d       	adc	r31, r1
     d1e:	80 81       	ld	r24, Z
     d20:	80 33       	cpi	r24, 0x30	; 48
     d22:	19 f4       	brne	.+6      	; 0xd2a <vfprintf+0x230>
     d24:	11 50       	subi	r17, 0x01	; 1
     d26:	11 11       	cpse	r17, r1
     d28:	f4 cf       	rjmp	.-24     	; 0xd12 <vfprintf+0x218>
     d2a:	97 fe       	sbrs	r9, 7
     d2c:	0e c0       	rjmp	.+28     	; 0xd4a <vfprintf+0x250>
     d2e:	44 24       	eor	r4, r4
     d30:	43 94       	inc	r4
     d32:	41 0e       	add	r4, r17
     d34:	81 2f       	mov	r24, r17
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	c8 16       	cp	r12, r24
     d3a:	d9 06       	cpc	r13, r25
     d3c:	2c f4       	brge	.+10     	; 0xd48 <vfprintf+0x24e>
     d3e:	1c 19       	sub	r17, r12
     d40:	04 c0       	rjmp	.+8      	; 0xd4a <vfprintf+0x250>
     d42:	44 24       	eor	r4, r4
     d44:	43 94       	inc	r4
     d46:	01 c0       	rjmp	.+2      	; 0xd4a <vfprintf+0x250>
     d48:	10 e0       	ldi	r17, 0x00	; 0
     d4a:	97 fe       	sbrs	r9, 7
     d4c:	06 c0       	rjmp	.+12     	; 0xd5a <vfprintf+0x260>
     d4e:	1c 14       	cp	r1, r12
     d50:	1d 04       	cpc	r1, r13
     d52:	34 f4       	brge	.+12     	; 0xd60 <vfprintf+0x266>
     d54:	c6 01       	movw	r24, r12
     d56:	01 96       	adiw	r24, 0x01	; 1
     d58:	05 c0       	rjmp	.+10     	; 0xd64 <vfprintf+0x26a>
     d5a:	85 e0       	ldi	r24, 0x05	; 5
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <vfprintf+0x26a>
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	01 11       	cpse	r16, r1
     d66:	01 96       	adiw	r24, 0x01	; 1
     d68:	11 23       	and	r17, r17
     d6a:	31 f0       	breq	.+12     	; 0xd78 <vfprintf+0x27e>
     d6c:	21 2f       	mov	r18, r17
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	2f 5f       	subi	r18, 0xFF	; 255
     d72:	3f 4f       	sbci	r19, 0xFF	; 255
     d74:	82 0f       	add	r24, r18
     d76:	93 1f       	adc	r25, r19
     d78:	25 2d       	mov	r18, r5
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	82 17       	cp	r24, r18
     d7e:	93 07       	cpc	r25, r19
     d80:	14 f4       	brge	.+4      	; 0xd86 <vfprintf+0x28c>
     d82:	58 1a       	sub	r5, r24
     d84:	01 c0       	rjmp	.+2      	; 0xd88 <vfprintf+0x28e>
     d86:	51 2c       	mov	r5, r1
     d88:	89 2d       	mov	r24, r9
     d8a:	89 70       	andi	r24, 0x09	; 9
     d8c:	49 f4       	brne	.+18     	; 0xda0 <vfprintf+0x2a6>
     d8e:	55 20       	and	r5, r5
     d90:	39 f0       	breq	.+14     	; 0xda0 <vfprintf+0x2a6>
     d92:	b7 01       	movw	r22, r14
     d94:	80 e2       	ldi	r24, 0x20	; 32
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     d9c:	5a 94       	dec	r5
     d9e:	f7 cf       	rjmp	.-18     	; 0xd8e <vfprintf+0x294>
     da0:	00 23       	and	r16, r16
     da2:	29 f0       	breq	.+10     	; 0xdae <vfprintf+0x2b4>
     da4:	b7 01       	movw	r22, r14
     da6:	80 2f       	mov	r24, r16
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     dae:	93 fc       	sbrc	r9, 3
     db0:	09 c0       	rjmp	.+18     	; 0xdc4 <vfprintf+0x2ca>
     db2:	55 20       	and	r5, r5
     db4:	39 f0       	breq	.+14     	; 0xdc4 <vfprintf+0x2ca>
     db6:	b7 01       	movw	r22, r14
     db8:	80 e3       	ldi	r24, 0x30	; 48
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     dc0:	5a 94       	dec	r5
     dc2:	f7 cf       	rjmp	.-18     	; 0xdb2 <vfprintf+0x2b8>
     dc4:	97 fe       	sbrs	r9, 7
     dc6:	4c c0       	rjmp	.+152    	; 0xe60 <vfprintf+0x366>
     dc8:	46 01       	movw	r8, r12
     dca:	d7 fe       	sbrs	r13, 7
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <vfprintf+0x2d8>
     dce:	81 2c       	mov	r8, r1
     dd0:	91 2c       	mov	r9, r1
     dd2:	c6 01       	movw	r24, r12
     dd4:	88 19       	sub	r24, r8
     dd6:	99 09       	sbc	r25, r9
     dd8:	f3 01       	movw	r30, r6
     dda:	e8 0f       	add	r30, r24
     ddc:	f9 1f       	adc	r31, r25
     dde:	fe 87       	std	Y+14, r31	; 0x0e
     de0:	ed 87       	std	Y+13, r30	; 0x0d
     de2:	96 01       	movw	r18, r12
     de4:	24 19       	sub	r18, r4
     de6:	31 09       	sbc	r19, r1
     de8:	38 8b       	std	Y+16, r19	; 0x10
     dea:	2f 87       	std	Y+15, r18	; 0x0f
     dec:	01 2f       	mov	r16, r17
     dee:	10 e0       	ldi	r17, 0x00	; 0
     df0:	11 95       	neg	r17
     df2:	01 95       	neg	r16
     df4:	11 09       	sbc	r17, r1
     df6:	3f ef       	ldi	r19, 0xFF	; 255
     df8:	83 16       	cp	r8, r19
     dfa:	93 06       	cpc	r9, r19
     dfc:	29 f4       	brne	.+10     	; 0xe08 <vfprintf+0x30e>
     dfe:	b7 01       	movw	r22, r14
     e00:	8e e2       	ldi	r24, 0x2E	; 46
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     e08:	c8 14       	cp	r12, r8
     e0a:	d9 04       	cpc	r13, r9
     e0c:	4c f0       	brlt	.+18     	; 0xe20 <vfprintf+0x326>
     e0e:	8f 85       	ldd	r24, Y+15	; 0x0f
     e10:	98 89       	ldd	r25, Y+16	; 0x10
     e12:	88 15       	cp	r24, r8
     e14:	99 05       	cpc	r25, r9
     e16:	24 f4       	brge	.+8      	; 0xe20 <vfprintf+0x326>
     e18:	ed 85       	ldd	r30, Y+13	; 0x0d
     e1a:	fe 85       	ldd	r31, Y+14	; 0x0e
     e1c:	81 81       	ldd	r24, Z+1	; 0x01
     e1e:	01 c0       	rjmp	.+2      	; 0xe22 <vfprintf+0x328>
     e20:	80 e3       	ldi	r24, 0x30	; 48
     e22:	f1 e0       	ldi	r31, 0x01	; 1
     e24:	8f 1a       	sub	r8, r31
     e26:	91 08       	sbc	r9, r1
     e28:	2d 85       	ldd	r18, Y+13	; 0x0d
     e2a:	3e 85       	ldd	r19, Y+14	; 0x0e
     e2c:	2f 5f       	subi	r18, 0xFF	; 255
     e2e:	3f 4f       	sbci	r19, 0xFF	; 255
     e30:	3e 87       	std	Y+14, r19	; 0x0e
     e32:	2d 87       	std	Y+13, r18	; 0x0d
     e34:	80 16       	cp	r8, r16
     e36:	91 06       	cpc	r9, r17
     e38:	2c f0       	brlt	.+10     	; 0xe44 <vfprintf+0x34a>
     e3a:	b7 01       	movw	r22, r14
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     e42:	d9 cf       	rjmp	.-78     	; 0xdf6 <vfprintf+0x2fc>
     e44:	c8 14       	cp	r12, r8
     e46:	d9 04       	cpc	r13, r9
     e48:	41 f4       	brne	.+16     	; 0xe5a <vfprintf+0x360>
     e4a:	9a 81       	ldd	r25, Y+2	; 0x02
     e4c:	96 33       	cpi	r25, 0x36	; 54
     e4e:	20 f4       	brcc	.+8      	; 0xe58 <vfprintf+0x35e>
     e50:	95 33       	cpi	r25, 0x35	; 53
     e52:	19 f4       	brne	.+6      	; 0xe5a <vfprintf+0x360>
     e54:	3c 85       	ldd	r19, Y+12	; 0x0c
     e56:	34 ff       	sbrs	r19, 4
     e58:	81 e3       	ldi	r24, 0x31	; 49
     e5a:	b7 01       	movw	r22, r14
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	4d c0       	rjmp	.+154    	; 0xefa <vfprintf+0x400>
     e60:	8a 81       	ldd	r24, Y+2	; 0x02
     e62:	81 33       	cpi	r24, 0x31	; 49
     e64:	19 f0       	breq	.+6      	; 0xe6c <vfprintf+0x372>
     e66:	9c 85       	ldd	r25, Y+12	; 0x0c
     e68:	9f 7e       	andi	r25, 0xEF	; 239
     e6a:	9c 87       	std	Y+12, r25	; 0x0c
     e6c:	b7 01       	movw	r22, r14
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     e74:	11 11       	cpse	r17, r1
     e76:	05 c0       	rjmp	.+10     	; 0xe82 <vfprintf+0x388>
     e78:	94 fc       	sbrc	r9, 4
     e7a:	18 c0       	rjmp	.+48     	; 0xeac <vfprintf+0x3b2>
     e7c:	85 e6       	ldi	r24, 0x65	; 101
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	17 c0       	rjmp	.+46     	; 0xeb0 <vfprintf+0x3b6>
     e82:	b7 01       	movw	r22, r14
     e84:	8e e2       	ldi	r24, 0x2E	; 46
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     e8c:	1e 5f       	subi	r17, 0xFE	; 254
     e8e:	82 e0       	ldi	r24, 0x02	; 2
     e90:	01 e0       	ldi	r16, 0x01	; 1
     e92:	08 0f       	add	r16, r24
     e94:	f3 01       	movw	r30, r6
     e96:	e8 0f       	add	r30, r24
     e98:	f1 1d       	adc	r31, r1
     e9a:	80 81       	ld	r24, Z
     e9c:	b7 01       	movw	r22, r14
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     ea4:	80 2f       	mov	r24, r16
     ea6:	01 13       	cpse	r16, r17
     ea8:	f3 cf       	rjmp	.-26     	; 0xe90 <vfprintf+0x396>
     eaa:	e6 cf       	rjmp	.-52     	; 0xe78 <vfprintf+0x37e>
     eac:	85 e4       	ldi	r24, 0x45	; 69
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	b7 01       	movw	r22, r14
     eb2:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     eb6:	d7 fc       	sbrc	r13, 7
     eb8:	06 c0       	rjmp	.+12     	; 0xec6 <vfprintf+0x3cc>
     eba:	c1 14       	cp	r12, r1
     ebc:	d1 04       	cpc	r13, r1
     ebe:	41 f4       	brne	.+16     	; 0xed0 <vfprintf+0x3d6>
     ec0:	ec 85       	ldd	r30, Y+12	; 0x0c
     ec2:	e4 ff       	sbrs	r30, 4
     ec4:	05 c0       	rjmp	.+10     	; 0xed0 <vfprintf+0x3d6>
     ec6:	d1 94       	neg	r13
     ec8:	c1 94       	neg	r12
     eca:	d1 08       	sbc	r13, r1
     ecc:	8d e2       	ldi	r24, 0x2D	; 45
     ece:	01 c0       	rjmp	.+2      	; 0xed2 <vfprintf+0x3d8>
     ed0:	8b e2       	ldi	r24, 0x2B	; 43
     ed2:	b7 01       	movw	r22, r14
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <fputc>
     eda:	80 e3       	ldi	r24, 0x30	; 48
     edc:	2a e0       	ldi	r18, 0x0A	; 10
     ede:	c2 16       	cp	r12, r18
     ee0:	d1 04       	cpc	r13, r1
     ee2:	2c f0       	brlt	.+10     	; 0xeee <vfprintf+0x3f4>
     ee4:	8f 5f       	subi	r24, 0xFF	; 255
     ee6:	fa e0       	ldi	r31, 0x0A	; 10
     ee8:	cf 1a       	sub	r12, r31
     eea:	d1 08       	sbc	r13, r1
     eec:	f7 cf       	rjmp	.-18     	; 0xedc <vfprintf+0x3e2>
     eee:	b7 01       	movw	r22, r14
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	f8 d7       	rcall	.+4080   	; 0x1ee4 <fputc>
     ef4:	b7 01       	movw	r22, r14
     ef6:	c6 01       	movw	r24, r12
     ef8:	c0 96       	adiw	r24, 0x30	; 48
     efa:	f4 d7       	rcall	.+4072   	; 0x1ee4 <fputc>
     efc:	4a c1       	rjmp	.+660    	; 0x1192 <vfprintf+0x698>
     efe:	83 36       	cpi	r24, 0x63	; 99
     f00:	31 f0       	breq	.+12     	; 0xf0e <vfprintf+0x414>
     f02:	83 37       	cpi	r24, 0x73	; 115
     f04:	79 f0       	breq	.+30     	; 0xf24 <vfprintf+0x42a>
     f06:	83 35       	cpi	r24, 0x53	; 83
     f08:	09 f0       	breq	.+2      	; 0xf0c <vfprintf+0x412>
     f0a:	52 c0       	rjmp	.+164    	; 0xfb0 <vfprintf+0x4b6>
     f0c:	1f c0       	rjmp	.+62     	; 0xf4c <vfprintf+0x452>
     f0e:	56 01       	movw	r10, r12
     f10:	32 e0       	ldi	r19, 0x02	; 2
     f12:	a3 0e       	add	r10, r19
     f14:	b1 1c       	adc	r11, r1
     f16:	f6 01       	movw	r30, r12
     f18:	80 81       	ld	r24, Z
     f1a:	89 83       	std	Y+1, r24	; 0x01
     f1c:	01 e0       	ldi	r16, 0x01	; 1
     f1e:	10 e0       	ldi	r17, 0x00	; 0
     f20:	63 01       	movw	r12, r6
     f22:	11 c0       	rjmp	.+34     	; 0xf46 <vfprintf+0x44c>
     f24:	56 01       	movw	r10, r12
     f26:	f2 e0       	ldi	r31, 0x02	; 2
     f28:	af 0e       	add	r10, r31
     f2a:	b1 1c       	adc	r11, r1
     f2c:	f6 01       	movw	r30, r12
     f2e:	c0 80       	ld	r12, Z
     f30:	d1 80       	ldd	r13, Z+1	; 0x01
     f32:	96 fe       	sbrs	r9, 6
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <vfprintf+0x442>
     f36:	61 2f       	mov	r22, r17
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <vfprintf+0x446>
     f3c:	6f ef       	ldi	r22, 0xFF	; 255
     f3e:	7f ef       	ldi	r23, 0xFF	; 255
     f40:	c6 01       	movw	r24, r12
     f42:	87 d7       	rcall	.+3854   	; 0x1e52 <strnlen>
     f44:	8c 01       	movw	r16, r24
     f46:	f9 2d       	mov	r31, r9
     f48:	ff 77       	andi	r31, 0x7F	; 127
     f4a:	13 c0       	rjmp	.+38     	; 0xf72 <vfprintf+0x478>
     f4c:	56 01       	movw	r10, r12
     f4e:	22 e0       	ldi	r18, 0x02	; 2
     f50:	a2 0e       	add	r10, r18
     f52:	b1 1c       	adc	r11, r1
     f54:	f6 01       	movw	r30, r12
     f56:	c0 80       	ld	r12, Z
     f58:	d1 80       	ldd	r13, Z+1	; 0x01
     f5a:	96 fe       	sbrs	r9, 6
     f5c:	03 c0       	rjmp	.+6      	; 0xf64 <vfprintf+0x46a>
     f5e:	61 2f       	mov	r22, r17
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x46e>
     f64:	6f ef       	ldi	r22, 0xFF	; 255
     f66:	7f ef       	ldi	r23, 0xFF	; 255
     f68:	c6 01       	movw	r24, r12
     f6a:	68 d7       	rcall	.+3792   	; 0x1e3c <strnlen_P>
     f6c:	8c 01       	movw	r16, r24
     f6e:	f9 2d       	mov	r31, r9
     f70:	f0 68       	ori	r31, 0x80	; 128
     f72:	9f 2e       	mov	r9, r31
     f74:	f3 fd       	sbrc	r31, 3
     f76:	18 c0       	rjmp	.+48     	; 0xfa8 <vfprintf+0x4ae>
     f78:	85 2d       	mov	r24, r5
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	08 17       	cp	r16, r24
     f7e:	19 07       	cpc	r17, r25
     f80:	98 f4       	brcc	.+38     	; 0xfa8 <vfprintf+0x4ae>
     f82:	b7 01       	movw	r22, r14
     f84:	80 e2       	ldi	r24, 0x20	; 32
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	ad d7       	rcall	.+3930   	; 0x1ee4 <fputc>
     f8a:	5a 94       	dec	r5
     f8c:	f5 cf       	rjmp	.-22     	; 0xf78 <vfprintf+0x47e>
     f8e:	f6 01       	movw	r30, r12
     f90:	97 fc       	sbrc	r9, 7
     f92:	85 91       	lpm	r24, Z+
     f94:	97 fe       	sbrs	r9, 7
     f96:	81 91       	ld	r24, Z+
     f98:	6f 01       	movw	r12, r30
     f9a:	b7 01       	movw	r22, r14
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	a2 d7       	rcall	.+3908   	; 0x1ee4 <fputc>
     fa0:	51 10       	cpse	r5, r1
     fa2:	5a 94       	dec	r5
     fa4:	01 50       	subi	r16, 0x01	; 1
     fa6:	11 09       	sbc	r17, r1
     fa8:	01 15       	cp	r16, r1
     faa:	11 05       	cpc	r17, r1
     fac:	81 f7       	brne	.-32     	; 0xf8e <vfprintf+0x494>
     fae:	f1 c0       	rjmp	.+482    	; 0x1192 <vfprintf+0x698>
     fb0:	84 36       	cpi	r24, 0x64	; 100
     fb2:	11 f0       	breq	.+4      	; 0xfb8 <vfprintf+0x4be>
     fb4:	89 36       	cpi	r24, 0x69	; 105
     fb6:	61 f5       	brne	.+88     	; 0x1010 <vfprintf+0x516>
     fb8:	56 01       	movw	r10, r12
     fba:	97 fe       	sbrs	r9, 7
     fbc:	09 c0       	rjmp	.+18     	; 0xfd0 <vfprintf+0x4d6>
     fbe:	24 e0       	ldi	r18, 0x04	; 4
     fc0:	a2 0e       	add	r10, r18
     fc2:	b1 1c       	adc	r11, r1
     fc4:	f6 01       	movw	r30, r12
     fc6:	60 81       	ld	r22, Z
     fc8:	71 81       	ldd	r23, Z+1	; 0x01
     fca:	82 81       	ldd	r24, Z+2	; 0x02
     fcc:	93 81       	ldd	r25, Z+3	; 0x03
     fce:	0a c0       	rjmp	.+20     	; 0xfe4 <vfprintf+0x4ea>
     fd0:	f2 e0       	ldi	r31, 0x02	; 2
     fd2:	af 0e       	add	r10, r31
     fd4:	b1 1c       	adc	r11, r1
     fd6:	f6 01       	movw	r30, r12
     fd8:	60 81       	ld	r22, Z
     fda:	71 81       	ldd	r23, Z+1	; 0x01
     fdc:	07 2e       	mov	r0, r23
     fde:	00 0c       	add	r0, r0
     fe0:	88 0b       	sbc	r24, r24
     fe2:	99 0b       	sbc	r25, r25
     fe4:	f9 2d       	mov	r31, r9
     fe6:	ff 76       	andi	r31, 0x6F	; 111
     fe8:	9f 2e       	mov	r9, r31
     fea:	97 ff       	sbrs	r25, 7
     fec:	09 c0       	rjmp	.+18     	; 0x1000 <vfprintf+0x506>
     fee:	90 95       	com	r25
     ff0:	80 95       	com	r24
     ff2:	70 95       	com	r23
     ff4:	61 95       	neg	r22
     ff6:	7f 4f       	sbci	r23, 0xFF	; 255
     ff8:	8f 4f       	sbci	r24, 0xFF	; 255
     ffa:	9f 4f       	sbci	r25, 0xFF	; 255
     ffc:	f0 68       	ori	r31, 0x80	; 128
     ffe:	9f 2e       	mov	r9, r31
    1000:	2a e0       	ldi	r18, 0x0A	; 10
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	a3 01       	movw	r20, r6
    1006:	0e 94 3a 10 	call	0x2074	; 0x2074 <__ultoa_invert>
    100a:	c8 2e       	mov	r12, r24
    100c:	c6 18       	sub	r12, r6
    100e:	3e c0       	rjmp	.+124    	; 0x108c <vfprintf+0x592>
    1010:	09 2d       	mov	r16, r9
    1012:	85 37       	cpi	r24, 0x75	; 117
    1014:	21 f4       	brne	.+8      	; 0x101e <vfprintf+0x524>
    1016:	0f 7e       	andi	r16, 0xEF	; 239
    1018:	2a e0       	ldi	r18, 0x0A	; 10
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	1d c0       	rjmp	.+58     	; 0x1058 <vfprintf+0x55e>
    101e:	09 7f       	andi	r16, 0xF9	; 249
    1020:	8f 36       	cpi	r24, 0x6F	; 111
    1022:	91 f0       	breq	.+36     	; 0x1048 <vfprintf+0x54e>
    1024:	18 f4       	brcc	.+6      	; 0x102c <vfprintf+0x532>
    1026:	88 35       	cpi	r24, 0x58	; 88
    1028:	59 f0       	breq	.+22     	; 0x1040 <vfprintf+0x546>
    102a:	bc c0       	rjmp	.+376    	; 0x11a4 <vfprintf+0x6aa>
    102c:	80 37       	cpi	r24, 0x70	; 112
    102e:	19 f0       	breq	.+6      	; 0x1036 <vfprintf+0x53c>
    1030:	88 37       	cpi	r24, 0x78	; 120
    1032:	11 f0       	breq	.+4      	; 0x1038 <vfprintf+0x53e>
    1034:	b7 c0       	rjmp	.+366    	; 0x11a4 <vfprintf+0x6aa>
    1036:	00 61       	ori	r16, 0x10	; 16
    1038:	04 ff       	sbrs	r16, 4
    103a:	09 c0       	rjmp	.+18     	; 0x104e <vfprintf+0x554>
    103c:	04 60       	ori	r16, 0x04	; 4
    103e:	07 c0       	rjmp	.+14     	; 0x104e <vfprintf+0x554>
    1040:	94 fe       	sbrs	r9, 4
    1042:	08 c0       	rjmp	.+16     	; 0x1054 <vfprintf+0x55a>
    1044:	06 60       	ori	r16, 0x06	; 6
    1046:	06 c0       	rjmp	.+12     	; 0x1054 <vfprintf+0x55a>
    1048:	28 e0       	ldi	r18, 0x08	; 8
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	05 c0       	rjmp	.+10     	; 0x1058 <vfprintf+0x55e>
    104e:	20 e1       	ldi	r18, 0x10	; 16
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <vfprintf+0x55e>
    1054:	20 e1       	ldi	r18, 0x10	; 16
    1056:	32 e0       	ldi	r19, 0x02	; 2
    1058:	56 01       	movw	r10, r12
    105a:	07 ff       	sbrs	r16, 7
    105c:	09 c0       	rjmp	.+18     	; 0x1070 <vfprintf+0x576>
    105e:	84 e0       	ldi	r24, 0x04	; 4
    1060:	a8 0e       	add	r10, r24
    1062:	b1 1c       	adc	r11, r1
    1064:	f6 01       	movw	r30, r12
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	82 81       	ldd	r24, Z+2	; 0x02
    106c:	93 81       	ldd	r25, Z+3	; 0x03
    106e:	08 c0       	rjmp	.+16     	; 0x1080 <vfprintf+0x586>
    1070:	f2 e0       	ldi	r31, 0x02	; 2
    1072:	af 0e       	add	r10, r31
    1074:	b1 1c       	adc	r11, r1
    1076:	f6 01       	movw	r30, r12
    1078:	60 81       	ld	r22, Z
    107a:	71 81       	ldd	r23, Z+1	; 0x01
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	a3 01       	movw	r20, r6
    1082:	f8 d7       	rcall	.+4080   	; 0x2074 <__ultoa_invert>
    1084:	c8 2e       	mov	r12, r24
    1086:	c6 18       	sub	r12, r6
    1088:	0f 77       	andi	r16, 0x7F	; 127
    108a:	90 2e       	mov	r9, r16
    108c:	96 fe       	sbrs	r9, 6
    108e:	0b c0       	rjmp	.+22     	; 0x10a6 <vfprintf+0x5ac>
    1090:	09 2d       	mov	r16, r9
    1092:	0e 7f       	andi	r16, 0xFE	; 254
    1094:	c1 16       	cp	r12, r17
    1096:	50 f4       	brcc	.+20     	; 0x10ac <vfprintf+0x5b2>
    1098:	94 fe       	sbrs	r9, 4
    109a:	0a c0       	rjmp	.+20     	; 0x10b0 <vfprintf+0x5b6>
    109c:	92 fc       	sbrc	r9, 2
    109e:	08 c0       	rjmp	.+16     	; 0x10b0 <vfprintf+0x5b6>
    10a0:	09 2d       	mov	r16, r9
    10a2:	0e 7e       	andi	r16, 0xEE	; 238
    10a4:	05 c0       	rjmp	.+10     	; 0x10b0 <vfprintf+0x5b6>
    10a6:	dc 2c       	mov	r13, r12
    10a8:	09 2d       	mov	r16, r9
    10aa:	03 c0       	rjmp	.+6      	; 0x10b2 <vfprintf+0x5b8>
    10ac:	dc 2c       	mov	r13, r12
    10ae:	01 c0       	rjmp	.+2      	; 0x10b2 <vfprintf+0x5b8>
    10b0:	d1 2e       	mov	r13, r17
    10b2:	04 ff       	sbrs	r16, 4
    10b4:	0d c0       	rjmp	.+26     	; 0x10d0 <vfprintf+0x5d6>
    10b6:	fe 01       	movw	r30, r28
    10b8:	ec 0d       	add	r30, r12
    10ba:	f1 1d       	adc	r31, r1
    10bc:	80 81       	ld	r24, Z
    10be:	80 33       	cpi	r24, 0x30	; 48
    10c0:	11 f4       	brne	.+4      	; 0x10c6 <vfprintf+0x5cc>
    10c2:	09 7e       	andi	r16, 0xE9	; 233
    10c4:	09 c0       	rjmp	.+18     	; 0x10d8 <vfprintf+0x5de>
    10c6:	02 ff       	sbrs	r16, 2
    10c8:	06 c0       	rjmp	.+12     	; 0x10d6 <vfprintf+0x5dc>
    10ca:	d3 94       	inc	r13
    10cc:	d3 94       	inc	r13
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <vfprintf+0x5de>
    10d0:	80 2f       	mov	r24, r16
    10d2:	86 78       	andi	r24, 0x86	; 134
    10d4:	09 f0       	breq	.+2      	; 0x10d8 <vfprintf+0x5de>
    10d6:	d3 94       	inc	r13
    10d8:	03 fd       	sbrc	r16, 3
    10da:	10 c0       	rjmp	.+32     	; 0x10fc <vfprintf+0x602>
    10dc:	00 ff       	sbrs	r16, 0
    10de:	06 c0       	rjmp	.+12     	; 0x10ec <vfprintf+0x5f2>
    10e0:	1c 2d       	mov	r17, r12
    10e2:	d5 14       	cp	r13, r5
    10e4:	78 f4       	brcc	.+30     	; 0x1104 <vfprintf+0x60a>
    10e6:	15 0d       	add	r17, r5
    10e8:	1d 19       	sub	r17, r13
    10ea:	0c c0       	rjmp	.+24     	; 0x1104 <vfprintf+0x60a>
    10ec:	d5 14       	cp	r13, r5
    10ee:	50 f4       	brcc	.+20     	; 0x1104 <vfprintf+0x60a>
    10f0:	b7 01       	movw	r22, r14
    10f2:	80 e2       	ldi	r24, 0x20	; 32
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	f6 d6       	rcall	.+3564   	; 0x1ee4 <fputc>
    10f8:	d3 94       	inc	r13
    10fa:	f8 cf       	rjmp	.-16     	; 0x10ec <vfprintf+0x5f2>
    10fc:	d5 14       	cp	r13, r5
    10fe:	10 f4       	brcc	.+4      	; 0x1104 <vfprintf+0x60a>
    1100:	5d 18       	sub	r5, r13
    1102:	01 c0       	rjmp	.+2      	; 0x1106 <vfprintf+0x60c>
    1104:	51 2c       	mov	r5, r1
    1106:	04 ff       	sbrs	r16, 4
    1108:	0f c0       	rjmp	.+30     	; 0x1128 <vfprintf+0x62e>
    110a:	b7 01       	movw	r22, r14
    110c:	80 e3       	ldi	r24, 0x30	; 48
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	e9 d6       	rcall	.+3538   	; 0x1ee4 <fputc>
    1112:	02 ff       	sbrs	r16, 2
    1114:	16 c0       	rjmp	.+44     	; 0x1142 <vfprintf+0x648>
    1116:	01 fd       	sbrc	r16, 1
    1118:	03 c0       	rjmp	.+6      	; 0x1120 <vfprintf+0x626>
    111a:	88 e7       	ldi	r24, 0x78	; 120
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <vfprintf+0x62a>
    1120:	88 e5       	ldi	r24, 0x58	; 88
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	b7 01       	movw	r22, r14
    1126:	0c c0       	rjmp	.+24     	; 0x1140 <vfprintf+0x646>
    1128:	80 2f       	mov	r24, r16
    112a:	86 78       	andi	r24, 0x86	; 134
    112c:	51 f0       	breq	.+20     	; 0x1142 <vfprintf+0x648>
    112e:	01 ff       	sbrs	r16, 1
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <vfprintf+0x63c>
    1132:	8b e2       	ldi	r24, 0x2B	; 43
    1134:	01 c0       	rjmp	.+2      	; 0x1138 <vfprintf+0x63e>
    1136:	80 e2       	ldi	r24, 0x20	; 32
    1138:	07 fd       	sbrc	r16, 7
    113a:	8d e2       	ldi	r24, 0x2D	; 45
    113c:	b7 01       	movw	r22, r14
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	d1 d6       	rcall	.+3490   	; 0x1ee4 <fputc>
    1142:	c1 16       	cp	r12, r17
    1144:	30 f4       	brcc	.+12     	; 0x1152 <vfprintf+0x658>
    1146:	b7 01       	movw	r22, r14
    1148:	80 e3       	ldi	r24, 0x30	; 48
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	cb d6       	rcall	.+3478   	; 0x1ee4 <fputc>
    114e:	11 50       	subi	r17, 0x01	; 1
    1150:	f8 cf       	rjmp	.-16     	; 0x1142 <vfprintf+0x648>
    1152:	ca 94       	dec	r12
    1154:	f3 01       	movw	r30, r6
    1156:	ec 0d       	add	r30, r12
    1158:	f1 1d       	adc	r31, r1
    115a:	80 81       	ld	r24, Z
    115c:	b7 01       	movw	r22, r14
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	c1 d6       	rcall	.+3458   	; 0x1ee4 <fputc>
    1162:	c1 10       	cpse	r12, r1
    1164:	f6 cf       	rjmp	.-20     	; 0x1152 <vfprintf+0x658>
    1166:	15 c0       	rjmp	.+42     	; 0x1192 <vfprintf+0x698>
    1168:	f4 e0       	ldi	r31, 0x04	; 4
    116a:	f5 15       	cp	r31, r5
    116c:	50 f5       	brcc	.+84     	; 0x11c2 <vfprintf+0x6c8>
    116e:	84 e0       	ldi	r24, 0x04	; 4
    1170:	58 1a       	sub	r5, r24
    1172:	93 fe       	sbrs	r9, 3
    1174:	1e c0       	rjmp	.+60     	; 0x11b2 <vfprintf+0x6b8>
    1176:	01 11       	cpse	r16, r1
    1178:	25 c0       	rjmp	.+74     	; 0x11c4 <vfprintf+0x6ca>
    117a:	2c 85       	ldd	r18, Y+12	; 0x0c
    117c:	23 ff       	sbrs	r18, 3
    117e:	27 c0       	rjmp	.+78     	; 0x11ce <vfprintf+0x6d4>
    1180:	04 ee       	ldi	r16, 0xE4	; 228
    1182:	10 e0       	ldi	r17, 0x00	; 0
    1184:	39 2d       	mov	r19, r9
    1186:	30 71       	andi	r19, 0x10	; 16
    1188:	93 2e       	mov	r9, r19
    118a:	f8 01       	movw	r30, r16
    118c:	84 91       	lpm	r24, Z
    118e:	81 11       	cpse	r24, r1
    1190:	21 c0       	rjmp	.+66     	; 0x11d4 <vfprintf+0x6da>
    1192:	55 20       	and	r5, r5
    1194:	09 f4       	brne	.+2      	; 0x1198 <vfprintf+0x69e>
    1196:	f1 cc       	rjmp	.-1566   	; 0xb7a <vfprintf+0x80>
    1198:	b7 01       	movw	r22, r14
    119a:	80 e2       	ldi	r24, 0x20	; 32
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	a2 d6       	rcall	.+3396   	; 0x1ee4 <fputc>
    11a0:	5a 94       	dec	r5
    11a2:	f7 cf       	rjmp	.-18     	; 0x1192 <vfprintf+0x698>
    11a4:	f7 01       	movw	r30, r14
    11a6:	86 81       	ldd	r24, Z+6	; 0x06
    11a8:	97 81       	ldd	r25, Z+7	; 0x07
    11aa:	23 c0       	rjmp	.+70     	; 0x11f2 <vfprintf+0x6f8>
    11ac:	8f ef       	ldi	r24, 0xFF	; 255
    11ae:	9f ef       	ldi	r25, 0xFF	; 255
    11b0:	20 c0       	rjmp	.+64     	; 0x11f2 <vfprintf+0x6f8>
    11b2:	b7 01       	movw	r22, r14
    11b4:	80 e2       	ldi	r24, 0x20	; 32
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	95 d6       	rcall	.+3370   	; 0x1ee4 <fputc>
    11ba:	5a 94       	dec	r5
    11bc:	51 10       	cpse	r5, r1
    11be:	f9 cf       	rjmp	.-14     	; 0x11b2 <vfprintf+0x6b8>
    11c0:	da cf       	rjmp	.-76     	; 0x1176 <vfprintf+0x67c>
    11c2:	51 2c       	mov	r5, r1
    11c4:	b7 01       	movw	r22, r14
    11c6:	80 2f       	mov	r24, r16
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	8c d6       	rcall	.+3352   	; 0x1ee4 <fputc>
    11cc:	d6 cf       	rjmp	.-84     	; 0x117a <vfprintf+0x680>
    11ce:	08 ee       	ldi	r16, 0xE8	; 232
    11d0:	10 e0       	ldi	r17, 0x00	; 0
    11d2:	d8 cf       	rjmp	.-80     	; 0x1184 <vfprintf+0x68a>
    11d4:	91 10       	cpse	r9, r1
    11d6:	80 52       	subi	r24, 0x20	; 32
    11d8:	b7 01       	movw	r22, r14
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	83 d6       	rcall	.+3334   	; 0x1ee4 <fputc>
    11de:	0f 5f       	subi	r16, 0xFF	; 255
    11e0:	1f 4f       	sbci	r17, 0xFF	; 255
    11e2:	d3 cf       	rjmp	.-90     	; 0x118a <vfprintf+0x690>
    11e4:	23 e0       	ldi	r18, 0x03	; 3
    11e6:	25 15       	cp	r18, r5
    11e8:	10 f4       	brcc	.+4      	; 0x11ee <vfprintf+0x6f4>
    11ea:	83 e0       	ldi	r24, 0x03	; 3
    11ec:	c1 cf       	rjmp	.-126    	; 0x1170 <vfprintf+0x676>
    11ee:	51 2c       	mov	r5, r1
    11f0:	c4 cf       	rjmp	.-120    	; 0x117a <vfprintf+0x680>
    11f2:	60 96       	adiw	r28, 0x10	; 16
    11f4:	0f b6       	in	r0, 0x3f	; 63
    11f6:	f8 94       	cli
    11f8:	de bf       	out	0x3e, r29	; 62
    11fa:	0f be       	out	0x3f, r0	; 63
    11fc:	cd bf       	out	0x3d, r28	; 61
    11fe:	df 91       	pop	r29
    1200:	cf 91       	pop	r28
    1202:	1f 91       	pop	r17
    1204:	0f 91       	pop	r16
    1206:	ff 90       	pop	r15
    1208:	ef 90       	pop	r14
    120a:	df 90       	pop	r13
    120c:	cf 90       	pop	r12
    120e:	bf 90       	pop	r11
    1210:	af 90       	pop	r10
    1212:	9f 90       	pop	r9
    1214:	8f 90       	pop	r8
    1216:	7f 90       	pop	r7
    1218:	6f 90       	pop	r6
    121a:	5f 90       	pop	r5
    121c:	4f 90       	pop	r4
    121e:	3f 90       	pop	r3
    1220:	2f 90       	pop	r2
    1222:	08 95       	ret

00001224 <putval>:
    1224:	20 fd       	sbrc	r18, 0
    1226:	09 c0       	rjmp	.+18     	; 0x123a <putval+0x16>
    1228:	fc 01       	movw	r30, r24
    122a:	23 fd       	sbrc	r18, 3
    122c:	05 c0       	rjmp	.+10     	; 0x1238 <putval+0x14>
    122e:	22 ff       	sbrs	r18, 2
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <putval+0x12>
    1232:	73 83       	std	Z+3, r23	; 0x03
    1234:	62 83       	std	Z+2, r22	; 0x02
    1236:	51 83       	std	Z+1, r21	; 0x01
    1238:	40 83       	st	Z, r20
    123a:	08 95       	ret

0000123c <mulacc>:
    123c:	44 fd       	sbrc	r20, 4
    123e:	17 c0       	rjmp	.+46     	; 0x126e <mulacc+0x32>
    1240:	46 fd       	sbrc	r20, 6
    1242:	17 c0       	rjmp	.+46     	; 0x1272 <mulacc+0x36>
    1244:	ab 01       	movw	r20, r22
    1246:	bc 01       	movw	r22, r24
    1248:	da 01       	movw	r26, r20
    124a:	fb 01       	movw	r30, r22
    124c:	aa 0f       	add	r26, r26
    124e:	bb 1f       	adc	r27, r27
    1250:	ee 1f       	adc	r30, r30
    1252:	ff 1f       	adc	r31, r31
    1254:	10 94       	com	r1
    1256:	d1 f7       	brne	.-12     	; 0x124c <mulacc+0x10>
    1258:	4a 0f       	add	r20, r26
    125a:	5b 1f       	adc	r21, r27
    125c:	6e 1f       	adc	r22, r30
    125e:	7f 1f       	adc	r23, r31
    1260:	cb 01       	movw	r24, r22
    1262:	ba 01       	movw	r22, r20
    1264:	66 0f       	add	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	88 1f       	adc	r24, r24
    126a:	99 1f       	adc	r25, r25
    126c:	09 c0       	rjmp	.+18     	; 0x1280 <mulacc+0x44>
    126e:	33 e0       	ldi	r19, 0x03	; 3
    1270:	01 c0       	rjmp	.+2      	; 0x1274 <mulacc+0x38>
    1272:	34 e0       	ldi	r19, 0x04	; 4
    1274:	66 0f       	add	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	88 1f       	adc	r24, r24
    127a:	99 1f       	adc	r25, r25
    127c:	31 50       	subi	r19, 0x01	; 1
    127e:	d1 f7       	brne	.-12     	; 0x1274 <mulacc+0x38>
    1280:	62 0f       	add	r22, r18
    1282:	71 1d       	adc	r23, r1
    1284:	81 1d       	adc	r24, r1
    1286:	91 1d       	adc	r25, r1
    1288:	08 95       	ret

0000128a <skip_spaces>:
    128a:	0f 93       	push	r16
    128c:	1f 93       	push	r17
    128e:	cf 93       	push	r28
    1290:	df 93       	push	r29
    1292:	8c 01       	movw	r16, r24
    1294:	c8 01       	movw	r24, r16
    1296:	e8 d5       	rcall	.+3024   	; 0x1e68 <fgetc>
    1298:	ec 01       	movw	r28, r24
    129a:	97 fd       	sbrc	r25, 7
    129c:	06 c0       	rjmp	.+12     	; 0x12aa <skip_spaces+0x20>
    129e:	b3 d5       	rcall	.+2918   	; 0x1e06 <isspace>
    12a0:	89 2b       	or	r24, r25
    12a2:	c1 f7       	brne	.-16     	; 0x1294 <skip_spaces+0xa>
    12a4:	b8 01       	movw	r22, r16
    12a6:	ce 01       	movw	r24, r28
    12a8:	cc d6       	rcall	.+3480   	; 0x2042 <ungetc>
    12aa:	ce 01       	movw	r24, r28
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <conv_int>:
    12b6:	8f 92       	push	r8
    12b8:	9f 92       	push	r9
    12ba:	af 92       	push	r10
    12bc:	bf 92       	push	r11
    12be:	cf 92       	push	r12
    12c0:	df 92       	push	r13
    12c2:	ef 92       	push	r14
    12c4:	ff 92       	push	r15
    12c6:	0f 93       	push	r16
    12c8:	1f 93       	push	r17
    12ca:	cf 93       	push	r28
    12cc:	df 93       	push	r29
    12ce:	7c 01       	movw	r14, r24
    12d0:	8b 01       	movw	r16, r22
    12d2:	6a 01       	movw	r12, r20
    12d4:	d2 2f       	mov	r29, r18
    12d6:	c8 d5       	rcall	.+2960   	; 0x1e68 <fgetc>
    12d8:	9c 01       	movw	r18, r24
    12da:	33 27       	eor	r19, r19
    12dc:	2b 32       	cpi	r18, 0x2B	; 43
    12de:	31 05       	cpc	r19, r1
    12e0:	21 f0       	breq	.+8      	; 0x12ea <conv_int+0x34>
    12e2:	2d 32       	cpi	r18, 0x2D	; 45
    12e4:	31 05       	cpc	r19, r1
    12e6:	51 f4       	brne	.+20     	; 0x12fc <conv_int+0x46>
    12e8:	d0 68       	ori	r29, 0x80	; 128
    12ea:	01 50       	subi	r16, 0x01	; 1
    12ec:	11 09       	sbc	r17, r1
    12ee:	11 f4       	brne	.+4      	; 0x12f4 <conv_int+0x3e>
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	64 c0       	rjmp	.+200    	; 0x13bc <conv_int+0x106>
    12f4:	c7 01       	movw	r24, r14
    12f6:	b8 d5       	rcall	.+2928   	; 0x1e68 <fgetc>
    12f8:	97 fd       	sbrc	r25, 7
    12fa:	fa cf       	rjmp	.-12     	; 0x12f0 <conv_int+0x3a>
    12fc:	cd 2f       	mov	r28, r29
    12fe:	cd 7f       	andi	r28, 0xFD	; 253
    1300:	2d 2f       	mov	r18, r29
    1302:	20 73       	andi	r18, 0x30	; 48
    1304:	09 f5       	brne	.+66     	; 0x1348 <conv_int+0x92>
    1306:	80 33       	cpi	r24, 0x30	; 48
    1308:	f9 f4       	brne	.+62     	; 0x1348 <conv_int+0x92>
    130a:	58 01       	movw	r10, r16
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	a8 1a       	sub	r10, r24
    1310:	b1 08       	sbc	r11, r1
    1312:	09 f4       	brne	.+2      	; 0x1316 <conv_int+0x60>
    1314:	40 c0       	rjmp	.+128    	; 0x1396 <conv_int+0xe0>
    1316:	c7 01       	movw	r24, r14
    1318:	a7 d5       	rcall	.+2894   	; 0x1e68 <fgetc>
    131a:	97 fd       	sbrc	r25, 7
    131c:	3c c0       	rjmp	.+120    	; 0x1396 <conv_int+0xe0>
    131e:	9c 01       	movw	r18, r24
    1320:	2f 7d       	andi	r18, 0xDF	; 223
    1322:	33 27       	eor	r19, r19
    1324:	28 35       	cpi	r18, 0x58	; 88
    1326:	31 05       	cpc	r19, r1
    1328:	49 f4       	brne	.+18     	; 0x133c <conv_int+0x86>
    132a:	c2 64       	ori	r28, 0x42	; 66
    132c:	02 50       	subi	r16, 0x02	; 2
    132e:	11 09       	sbc	r17, r1
    1330:	91 f1       	breq	.+100    	; 0x1396 <conv_int+0xe0>
    1332:	c7 01       	movw	r24, r14
    1334:	99 d5       	rcall	.+2866   	; 0x1e68 <fgetc>
    1336:	97 ff       	sbrs	r25, 7
    1338:	07 c0       	rjmp	.+14     	; 0x1348 <conv_int+0x92>
    133a:	2d c0       	rjmp	.+90     	; 0x1396 <conv_int+0xe0>
    133c:	d6 ff       	sbrs	r29, 6
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <conv_int+0x8e>
    1340:	c2 60       	ori	r28, 0x02	; 2
    1342:	01 c0       	rjmp	.+2      	; 0x1346 <conv_int+0x90>
    1344:	c2 61       	ori	r28, 0x12	; 18
    1346:	85 01       	movw	r16, r10
    1348:	81 2c       	mov	r8, r1
    134a:	91 2c       	mov	r9, r1
    134c:	54 01       	movw	r10, r8
    134e:	20 ed       	ldi	r18, 0xD0	; 208
    1350:	28 0f       	add	r18, r24
    1352:	28 30       	cpi	r18, 0x08	; 8
    1354:	78 f0       	brcs	.+30     	; 0x1374 <conv_int+0xbe>
    1356:	c4 ff       	sbrs	r28, 4
    1358:	03 c0       	rjmp	.+6      	; 0x1360 <conv_int+0xaa>
    135a:	b7 01       	movw	r22, r14
    135c:	72 d6       	rcall	.+3300   	; 0x2042 <ungetc>
    135e:	18 c0       	rjmp	.+48     	; 0x1390 <conv_int+0xda>
    1360:	2a 30       	cpi	r18, 0x0A	; 10
    1362:	40 f0       	brcs	.+16     	; 0x1374 <conv_int+0xbe>
    1364:	c6 ff       	sbrs	r28, 6
    1366:	f9 cf       	rjmp	.-14     	; 0x135a <conv_int+0xa4>
    1368:	2f 7d       	andi	r18, 0xDF	; 223
    136a:	3f ee       	ldi	r19, 0xEF	; 239
    136c:	32 0f       	add	r19, r18
    136e:	36 30       	cpi	r19, 0x06	; 6
    1370:	a0 f7       	brcc	.-24     	; 0x135a <conv_int+0xa4>
    1372:	27 50       	subi	r18, 0x07	; 7
    1374:	4c 2f       	mov	r20, r28
    1376:	c5 01       	movw	r24, r10
    1378:	b4 01       	movw	r22, r8
    137a:	60 df       	rcall	.-320    	; 0x123c <mulacc>
    137c:	4b 01       	movw	r8, r22
    137e:	5c 01       	movw	r10, r24
    1380:	c2 60       	ori	r28, 0x02	; 2
    1382:	01 50       	subi	r16, 0x01	; 1
    1384:	11 09       	sbc	r17, r1
    1386:	51 f0       	breq	.+20     	; 0x139c <conv_int+0xe6>
    1388:	c7 01       	movw	r24, r14
    138a:	6e d5       	rcall	.+2780   	; 0x1e68 <fgetc>
    138c:	97 ff       	sbrs	r25, 7
    138e:	df cf       	rjmp	.-66     	; 0x134e <conv_int+0x98>
    1390:	c1 fd       	sbrc	r28, 1
    1392:	04 c0       	rjmp	.+8      	; 0x139c <conv_int+0xe6>
    1394:	ad cf       	rjmp	.-166    	; 0x12f0 <conv_int+0x3a>
    1396:	81 2c       	mov	r8, r1
    1398:	91 2c       	mov	r9, r1
    139a:	54 01       	movw	r10, r8
    139c:	c7 ff       	sbrs	r28, 7
    139e:	08 c0       	rjmp	.+16     	; 0x13b0 <conv_int+0xfa>
    13a0:	b0 94       	com	r11
    13a2:	a0 94       	com	r10
    13a4:	90 94       	com	r9
    13a6:	80 94       	com	r8
    13a8:	81 1c       	adc	r8, r1
    13aa:	91 1c       	adc	r9, r1
    13ac:	a1 1c       	adc	r10, r1
    13ae:	b1 1c       	adc	r11, r1
    13b0:	2c 2f       	mov	r18, r28
    13b2:	b5 01       	movw	r22, r10
    13b4:	a4 01       	movw	r20, r8
    13b6:	c6 01       	movw	r24, r12
    13b8:	35 df       	rcall	.-406    	; 0x1224 <putval>
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	df 91       	pop	r29
    13be:	cf 91       	pop	r28
    13c0:	1f 91       	pop	r17
    13c2:	0f 91       	pop	r16
    13c4:	ff 90       	pop	r15
    13c6:	ef 90       	pop	r14
    13c8:	df 90       	pop	r13
    13ca:	cf 90       	pop	r12
    13cc:	bf 90       	pop	r11
    13ce:	af 90       	pop	r10
    13d0:	9f 90       	pop	r9
    13d2:	8f 90       	pop	r8
    13d4:	08 95       	ret

000013d6 <conv_brk>:
    13d6:	4f 92       	push	r4
    13d8:	5f 92       	push	r5
    13da:	6f 92       	push	r6
    13dc:	7f 92       	push	r7
    13de:	8f 92       	push	r8
    13e0:	9f 92       	push	r9
    13e2:	af 92       	push	r10
    13e4:	bf 92       	push	r11
    13e6:	cf 92       	push	r12
    13e8:	df 92       	push	r13
    13ea:	ef 92       	push	r14
    13ec:	ff 92       	push	r15
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	cf 93       	push	r28
    13f4:	df 93       	push	r29
    13f6:	cd b7       	in	r28, 0x3d	; 61
    13f8:	de b7       	in	r29, 0x3e	; 62
    13fa:	a0 97       	sbiw	r28, 0x20	; 32
    13fc:	0f b6       	in	r0, 0x3f	; 63
    13fe:	f8 94       	cli
    1400:	de bf       	out	0x3e, r29	; 62
    1402:	0f be       	out	0x3f, r0	; 63
    1404:	cd bf       	out	0x3d, r28	; 61
    1406:	5c 01       	movw	r10, r24
    1408:	4b 01       	movw	r8, r22
    140a:	7a 01       	movw	r14, r20
    140c:	8e 01       	movw	r16, r28
    140e:	0f 5f       	subi	r16, 0xFF	; 255
    1410:	1f 4f       	sbci	r17, 0xFF	; 255
    1412:	68 01       	movw	r12, r16
    1414:	80 e2       	ldi	r24, 0x20	; 32
    1416:	f8 01       	movw	r30, r16
    1418:	11 92       	st	Z+, r1
    141a:	8a 95       	dec	r24
    141c:	e9 f7       	brne	.-6      	; 0x1418 <conv_brk+0x42>
    141e:	f5 01       	movw	r30, r10
    1420:	53 80       	ldd	r5, Z+3	; 0x03
    1422:	40 e0       	ldi	r20, 0x00	; 0
    1424:	50 e0       	ldi	r21, 0x00	; 0
    1426:	61 2c       	mov	r6, r1
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	71 2c       	mov	r7, r1
    142c:	a1 e0       	ldi	r26, 0x01	; 1
    142e:	b0 e0       	ldi	r27, 0x00	; 0
    1430:	f9 01       	movw	r30, r18
    1432:	53 fc       	sbrc	r5, 3
    1434:	85 91       	lpm	r24, Z+
    1436:	53 fe       	sbrs	r5, 3
    1438:	81 91       	ld	r24, Z+
    143a:	8f 01       	movw	r16, r30
    143c:	48 2e       	mov	r4, r24
    143e:	9f 01       	movw	r18, r30
    1440:	81 11       	cpse	r24, r1
    1442:	03 c0       	rjmp	.+6      	; 0x144a <conv_brk+0x74>
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	94 c0       	rjmp	.+296    	; 0x1572 <conv_brk+0x19c>
    144a:	8e 35       	cpi	r24, 0x5E	; 94
    144c:	19 f4       	brne	.+6      	; 0x1454 <conv_brk+0x7e>
    144e:	41 15       	cp	r20, r1
    1450:	51 05       	cpc	r21, r1
    1452:	51 f1       	breq	.+84     	; 0x14a8 <conv_brk+0xd2>
    1454:	67 2d       	mov	r22, r7
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	64 17       	cp	r22, r20
    145a:	75 07       	cpc	r23, r21
    145c:	3c f4       	brge	.+14     	; 0x146c <conv_brk+0x96>
    145e:	8d 35       	cpi	r24, 0x5D	; 93
    1460:	61 f1       	breq	.+88     	; 0x14ba <conv_brk+0xe4>
    1462:	8d 32       	cpi	r24, 0x2D	; 45
    1464:	19 f4       	brne	.+6      	; 0x146c <conv_brk+0x96>
    1466:	99 23       	and	r25, r25
    1468:	11 f1       	breq	.+68     	; 0x14ae <conv_brk+0xd8>
    146a:	03 c0       	rjmp	.+6      	; 0x1472 <conv_brk+0x9c>
    146c:	99 23       	and	r25, r25
    146e:	09 f4       	brne	.+2      	; 0x1472 <conv_brk+0x9c>
    1470:	6b c0       	rjmp	.+214    	; 0x1548 <conv_brk+0x172>
    1472:	84 2d       	mov	r24, r4
    1474:	86 95       	lsr	r24
    1476:	86 95       	lsr	r24
    1478:	86 95       	lsr	r24
    147a:	f6 01       	movw	r30, r12
    147c:	e8 0f       	add	r30, r24
    147e:	f1 1d       	adc	r31, r1
    1480:	84 2d       	mov	r24, r4
    1482:	87 70       	andi	r24, 0x07	; 7
    1484:	8d 01       	movw	r16, r26
    1486:	02 c0       	rjmp	.+4      	; 0x148c <conv_brk+0xb6>
    1488:	00 0f       	add	r16, r16
    148a:	11 1f       	adc	r17, r17
    148c:	8a 95       	dec	r24
    148e:	e2 f7       	brpl	.-8      	; 0x1488 <conv_brk+0xb2>
    1490:	c8 01       	movw	r24, r16
    1492:	90 81       	ld	r25, Z
    1494:	89 2b       	or	r24, r25
    1496:	80 83       	st	Z, r24
    1498:	64 14       	cp	r6, r4
    149a:	59 f0       	breq	.+22     	; 0x14b2 <conv_brk+0xdc>
    149c:	46 14       	cp	r4, r6
    149e:	10 f4       	brcc	.+4      	; 0x14a4 <conv_brk+0xce>
    14a0:	43 94       	inc	r4
    14a2:	e7 cf       	rjmp	.-50     	; 0x1472 <conv_brk+0x9c>
    14a4:	4a 94       	dec	r4
    14a6:	e5 cf       	rjmp	.-54     	; 0x1472 <conv_brk+0x9c>
    14a8:	77 24       	eor	r7, r7
    14aa:	73 94       	inc	r7
    14ac:	03 c0       	rjmp	.+6      	; 0x14b4 <conv_brk+0xde>
    14ae:	91 e0       	ldi	r25, 0x01	; 1
    14b0:	01 c0       	rjmp	.+2      	; 0x14b4 <conv_brk+0xde>
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	4f 5f       	subi	r20, 0xFF	; 255
    14b6:	5f 4f       	sbci	r21, 0xFF	; 255
    14b8:	bb cf       	rjmp	.-138    	; 0x1430 <conv_brk+0x5a>
    14ba:	99 23       	and	r25, r25
    14bc:	19 f0       	breq	.+6      	; 0x14c4 <conv_brk+0xee>
    14be:	8e 81       	ldd	r24, Y+6	; 0x06
    14c0:	80 62       	ori	r24, 0x20	; 32
    14c2:	8e 83       	std	Y+6, r24	; 0x06
    14c4:	71 10       	cpse	r7, r1
    14c6:	03 c0       	rjmp	.+6      	; 0x14ce <conv_brk+0xf8>
    14c8:	77 24       	eor	r7, r7
    14ca:	73 94       	inc	r7
    14cc:	19 c0       	rjmp	.+50     	; 0x1500 <conv_brk+0x12a>
    14ce:	f6 01       	movw	r30, r12
    14d0:	9e 01       	movw	r18, r28
    14d2:	2f 5d       	subi	r18, 0xDF	; 223
    14d4:	3f 4f       	sbci	r19, 0xFF	; 255
    14d6:	80 81       	ld	r24, Z
    14d8:	80 95       	com	r24
    14da:	81 93       	st	Z+, r24
    14dc:	2e 17       	cp	r18, r30
    14de:	3f 07       	cpc	r19, r31
    14e0:	d1 f7       	brne	.-12     	; 0x14d6 <conv_brk+0x100>
    14e2:	f2 cf       	rjmp	.-28     	; 0x14c8 <conv_brk+0xf2>
    14e4:	e1 14       	cp	r14, r1
    14e6:	f1 04       	cpc	r15, r1
    14e8:	31 f0       	breq	.+12     	; 0x14f6 <conv_brk+0x120>
    14ea:	f7 01       	movw	r30, r14
    14ec:	80 83       	st	Z, r24
    14ee:	b7 01       	movw	r22, r14
    14f0:	6f 5f       	subi	r22, 0xFF	; 255
    14f2:	7f 4f       	sbci	r23, 0xFF	; 255
    14f4:	7b 01       	movw	r14, r22
    14f6:	71 e0       	ldi	r23, 0x01	; 1
    14f8:	87 1a       	sub	r8, r23
    14fa:	91 08       	sbc	r9, r1
    14fc:	71 2c       	mov	r7, r1
    14fe:	e9 f0       	breq	.+58     	; 0x153a <conv_brk+0x164>
    1500:	c5 01       	movw	r24, r10
    1502:	b2 d4       	rcall	.+2404   	; 0x1e68 <fgetc>
    1504:	97 fd       	sbrc	r25, 7
    1506:	17 c0       	rjmp	.+46     	; 0x1536 <conv_brk+0x160>
    1508:	fc 01       	movw	r30, r24
    150a:	ff 27       	eor	r31, r31
    150c:	23 e0       	ldi	r18, 0x03	; 3
    150e:	f5 95       	asr	r31
    1510:	e7 95       	ror	r30
    1512:	2a 95       	dec	r18
    1514:	e1 f7       	brne	.-8      	; 0x150e <conv_brk+0x138>
    1516:	ec 0d       	add	r30, r12
    1518:	fd 1d       	adc	r31, r13
    151a:	20 81       	ld	r18, Z
    151c:	30 e0       	ldi	r19, 0x00	; 0
    151e:	ac 01       	movw	r20, r24
    1520:	47 70       	andi	r20, 0x07	; 7
    1522:	55 27       	eor	r21, r21
    1524:	02 c0       	rjmp	.+4      	; 0x152a <conv_brk+0x154>
    1526:	35 95       	asr	r19
    1528:	27 95       	ror	r18
    152a:	4a 95       	dec	r20
    152c:	e2 f7       	brpl	.-8      	; 0x1526 <conv_brk+0x150>
    152e:	20 fd       	sbrc	r18, 0
    1530:	d9 cf       	rjmp	.-78     	; 0x14e4 <conv_brk+0x10e>
    1532:	b5 01       	movw	r22, r10
    1534:	86 d5       	rcall	.+2828   	; 0x2042 <ungetc>
    1536:	71 10       	cpse	r7, r1
    1538:	85 cf       	rjmp	.-246    	; 0x1444 <conv_brk+0x6e>
    153a:	e1 14       	cp	r14, r1
    153c:	f1 04       	cpc	r15, r1
    153e:	11 f0       	breq	.+4      	; 0x1544 <conv_brk+0x16e>
    1540:	f7 01       	movw	r30, r14
    1542:	10 82       	st	Z, r1
    1544:	c8 01       	movw	r24, r16
    1546:	15 c0       	rjmp	.+42     	; 0x1572 <conv_brk+0x19c>
    1548:	68 2f       	mov	r22, r24
    154a:	66 95       	lsr	r22
    154c:	66 95       	lsr	r22
    154e:	66 95       	lsr	r22
    1550:	f6 01       	movw	r30, r12
    1552:	e6 0f       	add	r30, r22
    1554:	f1 1d       	adc	r31, r1
    1556:	68 2f       	mov	r22, r24
    1558:	67 70       	andi	r22, 0x07	; 7
    155a:	8d 01       	movw	r16, r26
    155c:	02 c0       	rjmp	.+4      	; 0x1562 <conv_brk+0x18c>
    155e:	00 0f       	add	r16, r16
    1560:	11 1f       	adc	r17, r17
    1562:	6a 95       	dec	r22
    1564:	e2 f7       	brpl	.-8      	; 0x155e <conv_brk+0x188>
    1566:	b8 01       	movw	r22, r16
    1568:	70 81       	ld	r23, Z
    156a:	67 2b       	or	r22, r23
    156c:	60 83       	st	Z, r22
    156e:	68 2e       	mov	r6, r24
    1570:	a1 cf       	rjmp	.-190    	; 0x14b4 <conv_brk+0xde>
    1572:	a0 96       	adiw	r28, 0x20	; 32
    1574:	0f b6       	in	r0, 0x3f	; 63
    1576:	f8 94       	cli
    1578:	de bf       	out	0x3e, r29	; 62
    157a:	0f be       	out	0x3f, r0	; 63
    157c:	cd bf       	out	0x3d, r28	; 61
    157e:	df 91       	pop	r29
    1580:	cf 91       	pop	r28
    1582:	1f 91       	pop	r17
    1584:	0f 91       	pop	r16
    1586:	ff 90       	pop	r15
    1588:	ef 90       	pop	r14
    158a:	df 90       	pop	r13
    158c:	cf 90       	pop	r12
    158e:	bf 90       	pop	r11
    1590:	af 90       	pop	r10
    1592:	9f 90       	pop	r9
    1594:	8f 90       	pop	r8
    1596:	7f 90       	pop	r7
    1598:	6f 90       	pop	r6
    159a:	5f 90       	pop	r5
    159c:	4f 90       	pop	r4
    159e:	08 95       	ret

000015a0 <conv_flt>:
    15a0:	2f 92       	push	r2
    15a2:	3f 92       	push	r3
    15a4:	4f 92       	push	r4
    15a6:	5f 92       	push	r5
    15a8:	6f 92       	push	r6
    15aa:	7f 92       	push	r7
    15ac:	9f 92       	push	r9
    15ae:	af 92       	push	r10
    15b0:	bf 92       	push	r11
    15b2:	cf 92       	push	r12
    15b4:	df 92       	push	r13
    15b6:	ef 92       	push	r14
    15b8:	ff 92       	push	r15
    15ba:	0f 93       	push	r16
    15bc:	1f 93       	push	r17
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	6c 01       	movw	r12, r24
    15c4:	8b 01       	movw	r16, r22
    15c6:	1a 01       	movw	r2, r20
    15c8:	4f d4       	rcall	.+2206   	; 0x1e68 <fgetc>
    15ca:	ec 01       	movw	r28, r24
    15cc:	99 27       	eor	r25, r25
    15ce:	8b 32       	cpi	r24, 0x2B	; 43
    15d0:	91 05       	cpc	r25, r1
    15d2:	29 f0       	breq	.+10     	; 0x15de <conv_flt+0x3e>
    15d4:	8d 97       	sbiw	r24, 0x2d	; 45
    15d6:	79 f4       	brne	.+30     	; 0x15f6 <conv_flt+0x56>
    15d8:	30 e8       	ldi	r19, 0x80	; 128
    15da:	93 2e       	mov	r9, r19
    15dc:	01 c0       	rjmp	.+2      	; 0x15e0 <conv_flt+0x40>
    15de:	91 2c       	mov	r9, r1
    15e0:	01 50       	subi	r16, 0x01	; 1
    15e2:	11 09       	sbc	r17, r1
    15e4:	11 f4       	brne	.+4      	; 0x15ea <conv_flt+0x4a>
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	fe c0       	rjmp	.+508    	; 0x17e6 <conv_flt+0x246>
    15ea:	c6 01       	movw	r24, r12
    15ec:	3d d4       	rcall	.+2170   	; 0x1e68 <fgetc>
    15ee:	ec 01       	movw	r28, r24
    15f0:	97 ff       	sbrs	r25, 7
    15f2:	02 c0       	rjmp	.+4      	; 0x15f8 <conv_flt+0x58>
    15f4:	f8 cf       	rjmp	.-16     	; 0x15e6 <conv_flt+0x46>
    15f6:	91 2c       	mov	r9, r1
    15f8:	ce 01       	movw	r24, r28
    15fa:	0d d4       	rcall	.+2074   	; 0x1e16 <tolower>
    15fc:	89 36       	cpi	r24, 0x69	; 105
    15fe:	91 05       	cpc	r25, r1
    1600:	31 f0       	breq	.+12     	; 0x160e <conv_flt+0x6e>
    1602:	8e 36       	cpi	r24, 0x6E	; 110
    1604:	91 05       	cpc	r25, r1
    1606:	81 f5       	brne	.+96     	; 0x1668 <conv_flt+0xc8>
    1608:	c8 ef       	ldi	r28, 0xF8	; 248
    160a:	d1 e0       	ldi	r29, 0x01	; 1
    160c:	02 c0       	rjmp	.+4      	; 0x1612 <conv_flt+0x72>
    160e:	cb ef       	ldi	r28, 0xFB	; 251
    1610:	d1 e0       	ldi	r29, 0x01	; 1
    1612:	21 96       	adiw	r28, 0x01	; 1
    1614:	fe 01       	movw	r30, r28
    1616:	31 97       	sbiw	r30, 0x01	; 1
    1618:	b4 90       	lpm	r11, Z
    161a:	bb 20       	and	r11, r11
    161c:	b1 f0       	breq	.+44     	; 0x164a <conv_flt+0xaa>
    161e:	01 50       	subi	r16, 0x01	; 1
    1620:	11 09       	sbc	r17, r1
    1622:	79 f0       	breq	.+30     	; 0x1642 <conv_flt+0xa2>
    1624:	c6 01       	movw	r24, r12
    1626:	20 d4       	rcall	.+2112   	; 0x1e68 <fgetc>
    1628:	7c 01       	movw	r14, r24
    162a:	97 fd       	sbrc	r25, 7
    162c:	0a c0       	rjmp	.+20     	; 0x1642 <conv_flt+0xa2>
    162e:	f3 d3       	rcall	.+2022   	; 0x1e16 <tolower>
    1630:	99 27       	eor	r25, r25
    1632:	eb 2d       	mov	r30, r11
    1634:	f0 e0       	ldi	r31, 0x00	; 0
    1636:	8e 17       	cp	r24, r30
    1638:	9f 07       	cpc	r25, r31
    163a:	59 f3       	breq	.-42     	; 0x1612 <conv_flt+0x72>
    163c:	b6 01       	movw	r22, r12
    163e:	c7 01       	movw	r24, r14
    1640:	00 d5       	rcall	.+2560   	; 0x2042 <ungetc>
    1642:	ce 5f       	subi	r28, 0xFE	; 254
    1644:	d1 40       	sbci	r29, 0x01	; 1
    1646:	79 f6       	brne	.-98     	; 0x15e6 <conv_flt+0x46>
    1648:	03 c0       	rjmp	.+6      	; 0x1650 <conv_flt+0xb0>
    164a:	cb 5f       	subi	r28, 0xFB	; 251
    164c:	d1 40       	sbci	r29, 0x01	; 1
    164e:	29 f0       	breq	.+10     	; 0x165a <conv_flt+0xba>
    1650:	80 e0       	ldi	r24, 0x00	; 0
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	a0 e8       	ldi	r26, 0x80	; 128
    1656:	bf e7       	ldi	r27, 0x7F	; 127
    1658:	04 c0       	rjmp	.+8      	; 0x1662 <conv_flt+0xc2>
    165a:	80 e0       	ldi	r24, 0x00	; 0
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	a0 ec       	ldi	r26, 0xC0	; 192
    1660:	bf e7       	ldi	r27, 0x7F	; 127
    1662:	bc 01       	movw	r22, r24
    1664:	cd 01       	movw	r24, r26
    1666:	af c0       	rjmp	.+350    	; 0x17c6 <conv_flt+0x226>
    1668:	41 2c       	mov	r4, r1
    166a:	51 2c       	mov	r5, r1
    166c:	32 01       	movw	r6, r4
    166e:	e1 2c       	mov	r14, r1
    1670:	f1 2c       	mov	r15, r1
    1672:	2c 2f       	mov	r18, r28
    1674:	20 53       	subi	r18, 0x30	; 48
    1676:	2a 30       	cpi	r18, 0x0A	; 10
    1678:	08 f5       	brcc	.+66     	; 0x16bc <conv_flt+0x11c>
    167a:	e9 2d       	mov	r30, r9
    167c:	e2 60       	ori	r30, 0x02	; 2
    167e:	be 2e       	mov	r11, r30
    1680:	89 2d       	mov	r24, r9
    1682:	88 70       	andi	r24, 0x08	; 8
    1684:	92 fe       	sbrs	r9, 2
    1686:	06 c0       	rjmp	.+12     	; 0x1694 <conv_flt+0xf4>
    1688:	81 11       	cpse	r24, r1
    168a:	1f c0       	rjmp	.+62     	; 0x16ca <conv_flt+0x12a>
    168c:	ff ef       	ldi	r31, 0xFF	; 255
    168e:	ef 1a       	sub	r14, r31
    1690:	ff 0a       	sbc	r15, r31
    1692:	1b c0       	rjmp	.+54     	; 0x16ca <conv_flt+0x12a>
    1694:	88 23       	and	r24, r24
    1696:	19 f0       	breq	.+6      	; 0x169e <conv_flt+0xfe>
    1698:	81 e0       	ldi	r24, 0x01	; 1
    169a:	e8 1a       	sub	r14, r24
    169c:	f1 08       	sbc	r15, r1
    169e:	40 e2       	ldi	r20, 0x20	; 32
    16a0:	c3 01       	movw	r24, r6
    16a2:	b2 01       	movw	r22, r4
    16a4:	cb dd       	rcall	.-1130   	; 0x123c <mulacc>
    16a6:	2b 01       	movw	r4, r22
    16a8:	3c 01       	movw	r6, r24
    16aa:	68 39       	cpi	r22, 0x98	; 152
    16ac:	79 49       	sbci	r23, 0x99	; 153
    16ae:	89 49       	sbci	r24, 0x99	; 153
    16b0:	99 41       	sbci	r25, 0x19	; 25
    16b2:	58 f0       	brcs	.+22     	; 0x16ca <conv_flt+0x12a>
    16b4:	f9 2d       	mov	r31, r9
    16b6:	f6 60       	ori	r31, 0x06	; 6
    16b8:	bf 2e       	mov	r11, r31
    16ba:	07 c0       	rjmp	.+14     	; 0x16ca <conv_flt+0x12a>
    16bc:	2e 3f       	cpi	r18, 0xFE	; 254
    16be:	81 f4       	brne	.+32     	; 0x16e0 <conv_flt+0x140>
    16c0:	93 fc       	sbrc	r9, 3
    16c2:	0e c0       	rjmp	.+28     	; 0x16e0 <conv_flt+0x140>
    16c4:	29 2d       	mov	r18, r9
    16c6:	28 60       	ori	r18, 0x08	; 8
    16c8:	b2 2e       	mov	r11, r18
    16ca:	01 50       	subi	r16, 0x01	; 1
    16cc:	11 09       	sbc	r17, r1
    16ce:	39 f0       	breq	.+14     	; 0x16de <conv_flt+0x13e>
    16d0:	c6 01       	movw	r24, r12
    16d2:	ca d3       	rcall	.+1940   	; 0x1e68 <fgetc>
    16d4:	ec 01       	movw	r28, r24
    16d6:	9b 2c       	mov	r9, r11
    16d8:	97 ff       	sbrs	r25, 7
    16da:	cb cf       	rjmp	.-106    	; 0x1672 <conv_flt+0xd2>
    16dc:	01 c0       	rjmp	.+2      	; 0x16e0 <conv_flt+0x140>
    16de:	9b 2c       	mov	r9, r11
    16e0:	91 fe       	sbrs	r9, 1
    16e2:	81 cf       	rjmp	.-254    	; 0x15e6 <conv_flt+0x46>
    16e4:	ce 01       	movw	r24, r28
    16e6:	8f 7d       	andi	r24, 0xDF	; 223
    16e8:	99 27       	eor	r25, r25
    16ea:	85 34       	cpi	r24, 0x45	; 69
    16ec:	91 05       	cpc	r25, r1
    16ee:	09 f0       	breq	.+2      	; 0x16f2 <conv_flt+0x152>
    16f0:	3e c0       	rjmp	.+124    	; 0x176e <conv_flt+0x1ce>
    16f2:	58 01       	movw	r10, r16
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	a8 1a       	sub	r10, r24
    16f8:	b1 08       	sbc	r11, r1
    16fa:	09 f4       	brne	.+2      	; 0x16fe <conv_flt+0x15e>
    16fc:	74 cf       	rjmp	.-280    	; 0x15e6 <conv_flt+0x46>
    16fe:	c6 01       	movw	r24, r12
    1700:	b3 d3       	rcall	.+1894   	; 0x1e68 <fgetc>
    1702:	ec 01       	movw	r28, r24
    1704:	97 fd       	sbrc	r25, 7
    1706:	6f cf       	rjmp	.-290    	; 0x15e6 <conv_flt+0x46>
    1708:	99 27       	eor	r25, r25
    170a:	8b 32       	cpi	r24, 0x2B	; 43
    170c:	91 05       	cpc	r25, r1
    170e:	29 f0       	breq	.+10     	; 0x171a <conv_flt+0x17a>
    1710:	8d 97       	sbiw	r24, 0x2d	; 45
    1712:	61 f4       	brne	.+24     	; 0x172c <conv_flt+0x18c>
    1714:	e9 2d       	mov	r30, r9
    1716:	e0 61       	ori	r30, 0x10	; 16
    1718:	9e 2e       	mov	r9, r30
    171a:	58 01       	movw	r10, r16
    171c:	f2 e0       	ldi	r31, 0x02	; 2
    171e:	af 1a       	sub	r10, r31
    1720:	b1 08       	sbc	r11, r1
    1722:	09 f4       	brne	.+2      	; 0x1726 <conv_flt+0x186>
    1724:	60 cf       	rjmp	.-320    	; 0x15e6 <conv_flt+0x46>
    1726:	c6 01       	movw	r24, r12
    1728:	9f d3       	rcall	.+1854   	; 0x1e68 <fgetc>
    172a:	ec 01       	movw	r28, r24
    172c:	ce 01       	movw	r24, r28
    172e:	c0 97       	sbiw	r24, 0x30	; 48
    1730:	0a 97       	sbiw	r24, 0x0a	; 10
    1732:	08 f0       	brcs	.+2      	; 0x1736 <conv_flt+0x196>
    1734:	58 cf       	rjmp	.-336    	; 0x15e6 <conv_flt+0x46>
    1736:	85 01       	movw	r16, r10
    1738:	a1 2c       	mov	r10, r1
    173a:	b1 2c       	mov	r11, r1
    173c:	b5 01       	movw	r22, r10
    173e:	bb 0c       	add	r11, r11
    1740:	88 0b       	sbc	r24, r24
    1742:	99 0b       	sbc	r25, r25
    1744:	2c 2f       	mov	r18, r28
    1746:	20 53       	subi	r18, 0x30	; 48
    1748:	40 e2       	ldi	r20, 0x20	; 32
    174a:	78 dd       	rcall	.-1296   	; 0x123c <mulacc>
    174c:	5b 01       	movw	r10, r22
    174e:	01 50       	subi	r16, 0x01	; 1
    1750:	11 09       	sbc	r17, r1
    1752:	31 f0       	breq	.+12     	; 0x1760 <conv_flt+0x1c0>
    1754:	c6 01       	movw	r24, r12
    1756:	88 d3       	rcall	.+1808   	; 0x1e68 <fgetc>
    1758:	ec 01       	movw	r28, r24
    175a:	c0 97       	sbiw	r24, 0x30	; 48
    175c:	0a 97       	sbiw	r24, 0x0a	; 10
    175e:	70 f3       	brcs	.-36     	; 0x173c <conv_flt+0x19c>
    1760:	94 fe       	sbrs	r9, 4
    1762:	03 c0       	rjmp	.+6      	; 0x176a <conv_flt+0x1ca>
    1764:	b1 94       	neg	r11
    1766:	a1 94       	neg	r10
    1768:	b1 08       	sbc	r11, r1
    176a:	ea 0c       	add	r14, r10
    176c:	fb 1c       	adc	r15, r11
    176e:	01 2b       	or	r16, r17
    1770:	29 f0       	breq	.+10     	; 0x177c <conv_flt+0x1dc>
    1772:	d7 fd       	sbrc	r29, 7
    1774:	03 c0       	rjmp	.+6      	; 0x177c <conv_flt+0x1dc>
    1776:	b6 01       	movw	r22, r12
    1778:	ce 01       	movw	r24, r28
    177a:	63 d4       	rcall	.+2246   	; 0x2042 <ungetc>
    177c:	c3 01       	movw	r24, r6
    177e:	b2 01       	movw	r22, r4
    1780:	79 d1       	rcall	.+754    	; 0x1a74 <__floatunsisf>
    1782:	f7 fe       	sbrs	r15, 7
    1784:	06 c0       	rjmp	.+12     	; 0x1792 <conv_flt+0x1f2>
    1786:	f1 94       	neg	r15
    1788:	e1 94       	neg	r14
    178a:	f1 08       	sbc	r15, r1
    178c:	c7 e1       	ldi	r28, 0x17	; 23
    178e:	d2 e0       	ldi	r29, 0x02	; 2
    1790:	02 c0       	rjmp	.+4      	; 0x1796 <conv_flt+0x1f6>
    1792:	cf e2       	ldi	r28, 0x2F	; 47
    1794:	d2 e0       	ldi	r29, 0x02	; 2
    1796:	6e 01       	movw	r12, r28
    1798:	28 e1       	ldi	r18, 0x18	; 24
    179a:	c2 1a       	sub	r12, r18
    179c:	d1 08       	sbc	r13, r1
    179e:	00 e2       	ldi	r16, 0x20	; 32
    17a0:	10 e0       	ldi	r17, 0x00	; 0
    17a2:	e0 16       	cp	r14, r16
    17a4:	f1 06       	cpc	r15, r17
    17a6:	48 f0       	brcs	.+18     	; 0x17ba <conv_flt+0x21a>
    17a8:	fe 01       	movw	r30, r28
    17aa:	25 91       	lpm	r18, Z+
    17ac:	35 91       	lpm	r19, Z+
    17ae:	45 91       	lpm	r20, Z+
    17b0:	54 91       	lpm	r21, Z
    17b2:	9d d1       	rcall	.+826    	; 0x1aee <__mulsf3>
    17b4:	e0 1a       	sub	r14, r16
    17b6:	f1 0a       	sbc	r15, r17
    17b8:	f4 cf       	rjmp	.-24     	; 0x17a2 <conv_flt+0x202>
    17ba:	24 97       	sbiw	r28, 0x04	; 4
    17bc:	16 95       	lsr	r17
    17be:	07 95       	ror	r16
    17c0:	cc 16       	cp	r12, r28
    17c2:	dd 06       	cpc	r13, r29
    17c4:	71 f7       	brne	.-36     	; 0x17a2 <conv_flt+0x202>
    17c6:	97 fe       	sbrs	r9, 7
    17c8:	05 c0       	rjmp	.+10     	; 0x17d4 <conv_flt+0x234>
    17ca:	dc 01       	movw	r26, r24
    17cc:	cb 01       	movw	r24, r22
    17ce:	b0 58       	subi	r27, 0x80	; 128
    17d0:	bc 01       	movw	r22, r24
    17d2:	cd 01       	movw	r24, r26
    17d4:	21 14       	cp	r2, r1
    17d6:	31 04       	cpc	r3, r1
    17d8:	29 f0       	breq	.+10     	; 0x17e4 <conv_flt+0x244>
    17da:	f1 01       	movw	r30, r2
    17dc:	60 83       	st	Z, r22
    17de:	71 83       	std	Z+1, r23	; 0x01
    17e0:	82 83       	std	Z+2, r24	; 0x02
    17e2:	93 83       	std	Z+3, r25	; 0x03
    17e4:	81 e0       	ldi	r24, 0x01	; 1
    17e6:	df 91       	pop	r29
    17e8:	cf 91       	pop	r28
    17ea:	1f 91       	pop	r17
    17ec:	0f 91       	pop	r16
    17ee:	ff 90       	pop	r15
    17f0:	ef 90       	pop	r14
    17f2:	df 90       	pop	r13
    17f4:	cf 90       	pop	r12
    17f6:	bf 90       	pop	r11
    17f8:	af 90       	pop	r10
    17fa:	9f 90       	pop	r9
    17fc:	7f 90       	pop	r7
    17fe:	6f 90       	pop	r6
    1800:	5f 90       	pop	r5
    1802:	4f 90       	pop	r4
    1804:	3f 90       	pop	r3
    1806:	2f 90       	pop	r2
    1808:	08 95       	ret

0000180a <vfscanf>:
    180a:	6f 92       	push	r6
    180c:	7f 92       	push	r7
    180e:	8f 92       	push	r8
    1810:	9f 92       	push	r9
    1812:	af 92       	push	r10
    1814:	bf 92       	push	r11
    1816:	cf 92       	push	r12
    1818:	df 92       	push	r13
    181a:	ef 92       	push	r14
    181c:	ff 92       	push	r15
    181e:	0f 93       	push	r16
    1820:	1f 93       	push	r17
    1822:	cf 93       	push	r28
    1824:	df 93       	push	r29
    1826:	5c 01       	movw	r10, r24
    1828:	eb 01       	movw	r28, r22
    182a:	4a 01       	movw	r8, r20
    182c:	fc 01       	movw	r30, r24
    182e:	17 82       	std	Z+7, r1	; 0x07
    1830:	16 82       	std	Z+6, r1	; 0x06
    1832:	61 2c       	mov	r6, r1
    1834:	f5 01       	movw	r30, r10
    1836:	03 81       	ldd	r16, Z+3	; 0x03
    1838:	fe 01       	movw	r30, r28
    183a:	03 fd       	sbrc	r16, 3
    183c:	85 91       	lpm	r24, Z+
    183e:	03 ff       	sbrs	r16, 3
    1840:	81 91       	ld	r24, Z+
    1842:	18 2f       	mov	r17, r24
    1844:	ef 01       	movw	r28, r30
    1846:	88 23       	and	r24, r24
    1848:	09 f4       	brne	.+2      	; 0x184c <vfscanf+0x42>
    184a:	00 c1       	rjmp	.+512    	; 0x1a4c <vfscanf+0x242>
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	db d2       	rcall	.+1462   	; 0x1e06 <isspace>
    1850:	89 2b       	or	r24, r25
    1852:	19 f0       	breq	.+6      	; 0x185a <vfscanf+0x50>
    1854:	c5 01       	movw	r24, r10
    1856:	19 dd       	rcall	.-1486   	; 0x128a <skip_spaces>
    1858:	ed cf       	rjmp	.-38     	; 0x1834 <vfscanf+0x2a>
    185a:	15 32       	cpi	r17, 0x25	; 37
    185c:	41 f4       	brne	.+16     	; 0x186e <vfscanf+0x64>
    185e:	fe 01       	movw	r30, r28
    1860:	03 fd       	sbrc	r16, 3
    1862:	15 91       	lpm	r17, Z+
    1864:	03 ff       	sbrs	r16, 3
    1866:	11 91       	ld	r17, Z+
    1868:	ef 01       	movw	r28, r30
    186a:	15 32       	cpi	r17, 0x25	; 37
    186c:	71 f4       	brne	.+28     	; 0x188a <vfscanf+0x80>
    186e:	c5 01       	movw	r24, r10
    1870:	fb d2       	rcall	.+1526   	; 0x1e68 <fgetc>
    1872:	97 fd       	sbrc	r25, 7
    1874:	e9 c0       	rjmp	.+466    	; 0x1a48 <vfscanf+0x23e>
    1876:	41 2f       	mov	r20, r17
    1878:	50 e0       	ldi	r21, 0x00	; 0
    187a:	9c 01       	movw	r18, r24
    187c:	33 27       	eor	r19, r19
    187e:	24 17       	cp	r18, r20
    1880:	35 07       	cpc	r19, r21
    1882:	c1 f2       	breq	.-80     	; 0x1834 <vfscanf+0x2a>
    1884:	b5 01       	movw	r22, r10
    1886:	dd d3       	rcall	.+1978   	; 0x2042 <ungetc>
    1888:	e1 c0       	rjmp	.+450    	; 0x1a4c <vfscanf+0x242>
    188a:	1a 32       	cpi	r17, 0x2A	; 42
    188c:	41 f4       	brne	.+16     	; 0x189e <vfscanf+0x94>
    188e:	03 fd       	sbrc	r16, 3
    1890:	15 91       	lpm	r17, Z+
    1892:	03 ff       	sbrs	r16, 3
    1894:	11 91       	ld	r17, Z+
    1896:	ef 01       	movw	r28, r30
    1898:	77 24       	eor	r7, r7
    189a:	73 94       	inc	r7
    189c:	01 c0       	rjmp	.+2      	; 0x18a0 <vfscanf+0x96>
    189e:	71 2c       	mov	r7, r1
    18a0:	e1 2c       	mov	r14, r1
    18a2:	f1 2c       	mov	r15, r1
    18a4:	20 ed       	ldi	r18, 0xD0	; 208
    18a6:	21 0f       	add	r18, r17
    18a8:	2a 30       	cpi	r18, 0x0A	; 10
    18aa:	80 f4       	brcc	.+32     	; 0x18cc <vfscanf+0xc2>
    18ac:	f7 2d       	mov	r31, r7
    18ae:	f2 60       	ori	r31, 0x02	; 2
    18b0:	7f 2e       	mov	r7, r31
    18b2:	b7 01       	movw	r22, r14
    18b4:	80 e0       	ldi	r24, 0x00	; 0
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	40 e2       	ldi	r20, 0x20	; 32
    18ba:	c0 dc       	rcall	.-1664   	; 0x123c <mulacc>
    18bc:	7b 01       	movw	r14, r22
    18be:	fe 01       	movw	r30, r28
    18c0:	03 fd       	sbrc	r16, 3
    18c2:	15 91       	lpm	r17, Z+
    18c4:	03 ff       	sbrs	r16, 3
    18c6:	11 91       	ld	r17, Z+
    18c8:	ef 01       	movw	r28, r30
    18ca:	ec cf       	rjmp	.-40     	; 0x18a4 <vfscanf+0x9a>
    18cc:	71 fe       	sbrs	r7, 1
    18ce:	04 c0       	rjmp	.+8      	; 0x18d8 <vfscanf+0xce>
    18d0:	e1 14       	cp	r14, r1
    18d2:	f1 04       	cpc	r15, r1
    18d4:	21 f4       	brne	.+8      	; 0x18de <vfscanf+0xd4>
    18d6:	ba c0       	rjmp	.+372    	; 0x1a4c <vfscanf+0x242>
    18d8:	ee 24       	eor	r14, r14
    18da:	ea 94       	dec	r14
    18dc:	fe 2c       	mov	r15, r14
    18de:	18 36       	cpi	r17, 0x68	; 104
    18e0:	19 f0       	breq	.+6      	; 0x18e8 <vfscanf+0xde>
    18e2:	1c 36       	cpi	r17, 0x6C	; 108
    18e4:	61 f0       	breq	.+24     	; 0x18fe <vfscanf+0xf4>
    18e6:	14 c0       	rjmp	.+40     	; 0x1910 <vfscanf+0x106>
    18e8:	fe 01       	movw	r30, r28
    18ea:	03 fd       	sbrc	r16, 3
    18ec:	15 91       	lpm	r17, Z+
    18ee:	03 ff       	sbrs	r16, 3
    18f0:	11 91       	ld	r17, Z+
    18f2:	ef 01       	movw	r28, r30
    18f4:	18 36       	cpi	r17, 0x68	; 104
    18f6:	61 f4       	brne	.+24     	; 0x1910 <vfscanf+0x106>
    18f8:	87 2d       	mov	r24, r7
    18fa:	88 60       	ori	r24, 0x08	; 8
    18fc:	78 2e       	mov	r7, r24
    18fe:	97 2d       	mov	r25, r7
    1900:	94 60       	ori	r25, 0x04	; 4
    1902:	79 2e       	mov	r7, r25
    1904:	fe 01       	movw	r30, r28
    1906:	03 fd       	sbrc	r16, 3
    1908:	15 91       	lpm	r17, Z+
    190a:	03 ff       	sbrs	r16, 3
    190c:	11 91       	ld	r17, Z+
    190e:	ef 01       	movw	r28, r30
    1910:	11 23       	and	r17, r17
    1912:	09 f4       	brne	.+2      	; 0x1916 <vfscanf+0x10c>
    1914:	9b c0       	rjmp	.+310    	; 0x1a4c <vfscanf+0x242>
    1916:	61 2f       	mov	r22, r17
    1918:	70 e0       	ldi	r23, 0x00	; 0
    191a:	86 ee       	ldi	r24, 0xE6	; 230
    191c:	91 e0       	ldi	r25, 0x01	; 1
    191e:	83 d2       	rcall	.+1286   	; 0x1e26 <strchr_P>
    1920:	89 2b       	or	r24, r25
    1922:	09 f4       	brne	.+2      	; 0x1926 <vfscanf+0x11c>
    1924:	93 c0       	rjmp	.+294    	; 0x1a4c <vfscanf+0x242>
    1926:	70 fc       	sbrc	r7, 0
    1928:	07 c0       	rjmp	.+14     	; 0x1938 <vfscanf+0x12e>
    192a:	f4 01       	movw	r30, r8
    192c:	c0 80       	ld	r12, Z
    192e:	d1 80       	ldd	r13, Z+1	; 0x01
    1930:	c4 01       	movw	r24, r8
    1932:	02 96       	adiw	r24, 0x02	; 2
    1934:	4c 01       	movw	r8, r24
    1936:	02 c0       	rjmp	.+4      	; 0x193c <vfscanf+0x132>
    1938:	c1 2c       	mov	r12, r1
    193a:	d1 2c       	mov	r13, r1
    193c:	1e 36       	cpi	r17, 0x6E	; 110
    193e:	49 f4       	brne	.+18     	; 0x1952 <vfscanf+0x148>
    1940:	f5 01       	movw	r30, r10
    1942:	46 81       	ldd	r20, Z+6	; 0x06
    1944:	57 81       	ldd	r21, Z+7	; 0x07
    1946:	60 e0       	ldi	r22, 0x00	; 0
    1948:	70 e0       	ldi	r23, 0x00	; 0
    194a:	27 2d       	mov	r18, r7
    194c:	c6 01       	movw	r24, r12
    194e:	6a dc       	rcall	.-1836   	; 0x1224 <putval>
    1950:	71 cf       	rjmp	.-286    	; 0x1834 <vfscanf+0x2a>
    1952:	13 36       	cpi	r17, 0x63	; 99
    1954:	b1 f4       	brne	.+44     	; 0x1982 <vfscanf+0x178>
    1956:	71 fc       	sbrc	r7, 1
    1958:	03 c0       	rjmp	.+6      	; 0x1960 <vfscanf+0x156>
    195a:	ee 24       	eor	r14, r14
    195c:	e3 94       	inc	r14
    195e:	f1 2c       	mov	r15, r1
    1960:	c5 01       	movw	r24, r10
    1962:	82 d2       	rcall	.+1284   	; 0x1e68 <fgetc>
    1964:	97 fd       	sbrc	r25, 7
    1966:	70 c0       	rjmp	.+224    	; 0x1a48 <vfscanf+0x23e>
    1968:	c1 14       	cp	r12, r1
    196a:	d1 04       	cpc	r13, r1
    196c:	29 f0       	breq	.+10     	; 0x1978 <vfscanf+0x16e>
    196e:	f6 01       	movw	r30, r12
    1970:	80 83       	st	Z, r24
    1972:	c6 01       	movw	r24, r12
    1974:	01 96       	adiw	r24, 0x01	; 1
    1976:	6c 01       	movw	r12, r24
    1978:	91 e0       	ldi	r25, 0x01	; 1
    197a:	e9 1a       	sub	r14, r25
    197c:	f1 08       	sbc	r15, r1
    197e:	81 f7       	brne	.-32     	; 0x1960 <vfscanf+0x156>
    1980:	5f c0       	rjmp	.+190    	; 0x1a40 <vfscanf+0x236>
    1982:	1b 35       	cpi	r17, 0x5B	; 91
    1984:	51 f4       	brne	.+20     	; 0x199a <vfscanf+0x190>
    1986:	9e 01       	movw	r18, r28
    1988:	a6 01       	movw	r20, r12
    198a:	b7 01       	movw	r22, r14
    198c:	c5 01       	movw	r24, r10
    198e:	23 dd       	rcall	.-1466   	; 0x13d6 <conv_brk>
    1990:	ec 01       	movw	r28, r24
    1992:	89 2b       	or	r24, r25
    1994:	09 f0       	breq	.+2      	; 0x1998 <vfscanf+0x18e>
    1996:	54 c0       	rjmp	.+168    	; 0x1a40 <vfscanf+0x236>
    1998:	4e c0       	rjmp	.+156    	; 0x1a36 <vfscanf+0x22c>
    199a:	c5 01       	movw	r24, r10
    199c:	76 dc       	rcall	.-1812   	; 0x128a <skip_spaces>
    199e:	97 fd       	sbrc	r25, 7
    19a0:	53 c0       	rjmp	.+166    	; 0x1a48 <vfscanf+0x23e>
    19a2:	1f 36       	cpi	r17, 0x6F	; 111
    19a4:	c9 f1       	breq	.+114    	; 0x1a18 <vfscanf+0x20e>
    19a6:	40 f4       	brcc	.+16     	; 0x19b8 <vfscanf+0x1ae>
    19a8:	14 36       	cpi	r17, 0x64	; 100
    19aa:	91 f1       	breq	.+100    	; 0x1a10 <vfscanf+0x206>
    19ac:	19 36       	cpi	r17, 0x69	; 105
    19ae:	b9 f1       	breq	.+110    	; 0x1a1e <vfscanf+0x214>
    19b0:	18 35       	cpi	r17, 0x58	; 88
    19b2:	09 f0       	breq	.+2      	; 0x19b6 <vfscanf+0x1ac>
    19b4:	3a c0       	rjmp	.+116    	; 0x1a2a <vfscanf+0x220>
    19b6:	28 c0       	rjmp	.+80     	; 0x1a08 <vfscanf+0x1fe>
    19b8:	13 37       	cpi	r17, 0x73	; 115
    19ba:	a9 f0       	breq	.+42     	; 0x19e6 <vfscanf+0x1dc>
    19bc:	18 f4       	brcc	.+6      	; 0x19c4 <vfscanf+0x1ba>
    19be:	10 37       	cpi	r17, 0x70	; 112
    19c0:	19 f1       	breq	.+70     	; 0x1a08 <vfscanf+0x1fe>
    19c2:	33 c0       	rjmp	.+102    	; 0x1a2a <vfscanf+0x220>
    19c4:	15 37       	cpi	r17, 0x75	; 117
    19c6:	21 f1       	breq	.+72     	; 0x1a10 <vfscanf+0x206>
    19c8:	18 37       	cpi	r17, 0x78	; 120
    19ca:	f1 f0       	breq	.+60     	; 0x1a08 <vfscanf+0x1fe>
    19cc:	2e c0       	rjmp	.+92     	; 0x1a2a <vfscanf+0x220>
    19ce:	c1 14       	cp	r12, r1
    19d0:	d1 04       	cpc	r13, r1
    19d2:	29 f0       	breq	.+10     	; 0x19de <vfscanf+0x1d4>
    19d4:	f6 01       	movw	r30, r12
    19d6:	00 83       	st	Z, r16
    19d8:	c6 01       	movw	r24, r12
    19da:	01 96       	adiw	r24, 0x01	; 1
    19dc:	6c 01       	movw	r12, r24
    19de:	91 e0       	ldi	r25, 0x01	; 1
    19e0:	e9 1a       	sub	r14, r25
    19e2:	f1 08       	sbc	r15, r1
    19e4:	59 f0       	breq	.+22     	; 0x19fc <vfscanf+0x1f2>
    19e6:	c5 01       	movw	r24, r10
    19e8:	3f d2       	rcall	.+1150   	; 0x1e68 <fgetc>
    19ea:	8c 01       	movw	r16, r24
    19ec:	97 fd       	sbrc	r25, 7
    19ee:	06 c0       	rjmp	.+12     	; 0x19fc <vfscanf+0x1f2>
    19f0:	0a d2       	rcall	.+1044   	; 0x1e06 <isspace>
    19f2:	89 2b       	or	r24, r25
    19f4:	61 f3       	breq	.-40     	; 0x19ce <vfscanf+0x1c4>
    19f6:	b5 01       	movw	r22, r10
    19f8:	c8 01       	movw	r24, r16
    19fa:	23 d3       	rcall	.+1606   	; 0x2042 <ungetc>
    19fc:	c1 14       	cp	r12, r1
    19fe:	d1 04       	cpc	r13, r1
    1a00:	f9 f0       	breq	.+62     	; 0x1a40 <vfscanf+0x236>
    1a02:	f6 01       	movw	r30, r12
    1a04:	10 82       	st	Z, r1
    1a06:	1c c0       	rjmp	.+56     	; 0x1a40 <vfscanf+0x236>
    1a08:	f7 2d       	mov	r31, r7
    1a0a:	f0 64       	ori	r31, 0x40	; 64
    1a0c:	7f 2e       	mov	r7, r31
    1a0e:	07 c0       	rjmp	.+14     	; 0x1a1e <vfscanf+0x214>
    1a10:	87 2d       	mov	r24, r7
    1a12:	80 62       	ori	r24, 0x20	; 32
    1a14:	78 2e       	mov	r7, r24
    1a16:	03 c0       	rjmp	.+6      	; 0x1a1e <vfscanf+0x214>
    1a18:	97 2d       	mov	r25, r7
    1a1a:	90 61       	ori	r25, 0x10	; 16
    1a1c:	79 2e       	mov	r7, r25
    1a1e:	27 2d       	mov	r18, r7
    1a20:	a6 01       	movw	r20, r12
    1a22:	b7 01       	movw	r22, r14
    1a24:	c5 01       	movw	r24, r10
    1a26:	47 dc       	rcall	.-1906   	; 0x12b6 <conv_int>
    1a28:	04 c0       	rjmp	.+8      	; 0x1a32 <vfscanf+0x228>
    1a2a:	a6 01       	movw	r20, r12
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	c5 01       	movw	r24, r10
    1a30:	b7 dd       	rcall	.-1170   	; 0x15a0 <conv_flt>
    1a32:	81 11       	cpse	r24, r1
    1a34:	05 c0       	rjmp	.+10     	; 0x1a40 <vfscanf+0x236>
    1a36:	f5 01       	movw	r30, r10
    1a38:	83 81       	ldd	r24, Z+3	; 0x03
    1a3a:	80 73       	andi	r24, 0x30	; 48
    1a3c:	29 f4       	brne	.+10     	; 0x1a48 <vfscanf+0x23e>
    1a3e:	06 c0       	rjmp	.+12     	; 0x1a4c <vfscanf+0x242>
    1a40:	70 fc       	sbrc	r7, 0
    1a42:	f8 ce       	rjmp	.-528    	; 0x1834 <vfscanf+0x2a>
    1a44:	63 94       	inc	r6
    1a46:	f6 ce       	rjmp	.-532    	; 0x1834 <vfscanf+0x2a>
    1a48:	66 20       	and	r6, r6
    1a4a:	19 f0       	breq	.+6      	; 0x1a52 <vfscanf+0x248>
    1a4c:	86 2d       	mov	r24, r6
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	02 c0       	rjmp	.+4      	; 0x1a56 <vfscanf+0x24c>
    1a52:	8f ef       	ldi	r24, 0xFF	; 255
    1a54:	9f ef       	ldi	r25, 0xFF	; 255
    1a56:	df 91       	pop	r29
    1a58:	cf 91       	pop	r28
    1a5a:	1f 91       	pop	r17
    1a5c:	0f 91       	pop	r16
    1a5e:	ff 90       	pop	r15
    1a60:	ef 90       	pop	r14
    1a62:	df 90       	pop	r13
    1a64:	cf 90       	pop	r12
    1a66:	bf 90       	pop	r11
    1a68:	af 90       	pop	r10
    1a6a:	9f 90       	pop	r9
    1a6c:	8f 90       	pop	r8
    1a6e:	7f 90       	pop	r7
    1a70:	6f 90       	pop	r6
    1a72:	08 95       	ret

00001a74 <__floatunsisf>:
    1a74:	e8 94       	clt
    1a76:	09 c0       	rjmp	.+18     	; 0x1a8a <__floatsisf+0x12>

00001a78 <__floatsisf>:
    1a78:	97 fb       	bst	r25, 7
    1a7a:	3e f4       	brtc	.+14     	; 0x1a8a <__floatsisf+0x12>
    1a7c:	90 95       	com	r25
    1a7e:	80 95       	com	r24
    1a80:	70 95       	com	r23
    1a82:	61 95       	neg	r22
    1a84:	7f 4f       	sbci	r23, 0xFF	; 255
    1a86:	8f 4f       	sbci	r24, 0xFF	; 255
    1a88:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8a:	99 23       	and	r25, r25
    1a8c:	a9 f0       	breq	.+42     	; 0x1ab8 <__floatsisf+0x40>
    1a8e:	f9 2f       	mov	r31, r25
    1a90:	96 e9       	ldi	r25, 0x96	; 150
    1a92:	bb 27       	eor	r27, r27
    1a94:	93 95       	inc	r25
    1a96:	f6 95       	lsr	r31
    1a98:	87 95       	ror	r24
    1a9a:	77 95       	ror	r23
    1a9c:	67 95       	ror	r22
    1a9e:	b7 95       	ror	r27
    1aa0:	f1 11       	cpse	r31, r1
    1aa2:	f8 cf       	rjmp	.-16     	; 0x1a94 <__floatsisf+0x1c>
    1aa4:	fa f4       	brpl	.+62     	; 0x1ae4 <__floatsisf+0x6c>
    1aa6:	bb 0f       	add	r27, r27
    1aa8:	11 f4       	brne	.+4      	; 0x1aae <__floatsisf+0x36>
    1aaa:	60 ff       	sbrs	r22, 0
    1aac:	1b c0       	rjmp	.+54     	; 0x1ae4 <__floatsisf+0x6c>
    1aae:	6f 5f       	subi	r22, 0xFF	; 255
    1ab0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ab2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ab4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab6:	16 c0       	rjmp	.+44     	; 0x1ae4 <__floatsisf+0x6c>
    1ab8:	88 23       	and	r24, r24
    1aba:	11 f0       	breq	.+4      	; 0x1ac0 <__floatsisf+0x48>
    1abc:	96 e9       	ldi	r25, 0x96	; 150
    1abe:	11 c0       	rjmp	.+34     	; 0x1ae2 <__floatsisf+0x6a>
    1ac0:	77 23       	and	r23, r23
    1ac2:	21 f0       	breq	.+8      	; 0x1acc <__floatsisf+0x54>
    1ac4:	9e e8       	ldi	r25, 0x8E	; 142
    1ac6:	87 2f       	mov	r24, r23
    1ac8:	76 2f       	mov	r23, r22
    1aca:	05 c0       	rjmp	.+10     	; 0x1ad6 <__floatsisf+0x5e>
    1acc:	66 23       	and	r22, r22
    1ace:	71 f0       	breq	.+28     	; 0x1aec <__floatsisf+0x74>
    1ad0:	96 e8       	ldi	r25, 0x86	; 134
    1ad2:	86 2f       	mov	r24, r22
    1ad4:	70 e0       	ldi	r23, 0x00	; 0
    1ad6:	60 e0       	ldi	r22, 0x00	; 0
    1ad8:	2a f0       	brmi	.+10     	; 0x1ae4 <__floatsisf+0x6c>
    1ada:	9a 95       	dec	r25
    1adc:	66 0f       	add	r22, r22
    1ade:	77 1f       	adc	r23, r23
    1ae0:	88 1f       	adc	r24, r24
    1ae2:	da f7       	brpl	.-10     	; 0x1ada <__floatsisf+0x62>
    1ae4:	88 0f       	add	r24, r24
    1ae6:	96 95       	lsr	r25
    1ae8:	87 95       	ror	r24
    1aea:	97 f9       	bld	r25, 7
    1aec:	08 95       	ret

00001aee <__mulsf3>:
    1aee:	0b d0       	rcall	.+22     	; 0x1b06 <__mulsf3x>
    1af0:	78 c0       	rjmp	.+240    	; 0x1be2 <__fp_round>
    1af2:	69 d0       	rcall	.+210    	; 0x1bc6 <__fp_pscA>
    1af4:	28 f0       	brcs	.+10     	; 0x1b00 <__mulsf3+0x12>
    1af6:	6e d0       	rcall	.+220    	; 0x1bd4 <__fp_pscB>
    1af8:	18 f0       	brcs	.+6      	; 0x1b00 <__mulsf3+0x12>
    1afa:	95 23       	and	r25, r21
    1afc:	09 f0       	breq	.+2      	; 0x1b00 <__mulsf3+0x12>
    1afe:	5a c0       	rjmp	.+180    	; 0x1bb4 <__fp_inf>
    1b00:	5f c0       	rjmp	.+190    	; 0x1bc0 <__fp_nan>
    1b02:	11 24       	eor	r1, r1
    1b04:	a2 c0       	rjmp	.+324    	; 0x1c4a <__fp_szero>

00001b06 <__mulsf3x>:
    1b06:	7e d0       	rcall	.+252    	; 0x1c04 <__fp_split3>
    1b08:	a0 f3       	brcs	.-24     	; 0x1af2 <__mulsf3+0x4>

00001b0a <__mulsf3_pse>:
    1b0a:	95 9f       	mul	r25, r21
    1b0c:	d1 f3       	breq	.-12     	; 0x1b02 <__mulsf3+0x14>
    1b0e:	95 0f       	add	r25, r21
    1b10:	50 e0       	ldi	r21, 0x00	; 0
    1b12:	55 1f       	adc	r21, r21
    1b14:	62 9f       	mul	r22, r18
    1b16:	f0 01       	movw	r30, r0
    1b18:	72 9f       	mul	r23, r18
    1b1a:	bb 27       	eor	r27, r27
    1b1c:	f0 0d       	add	r31, r0
    1b1e:	b1 1d       	adc	r27, r1
    1b20:	63 9f       	mul	r22, r19
    1b22:	aa 27       	eor	r26, r26
    1b24:	f0 0d       	add	r31, r0
    1b26:	b1 1d       	adc	r27, r1
    1b28:	aa 1f       	adc	r26, r26
    1b2a:	64 9f       	mul	r22, r20
    1b2c:	66 27       	eor	r22, r22
    1b2e:	b0 0d       	add	r27, r0
    1b30:	a1 1d       	adc	r26, r1
    1b32:	66 1f       	adc	r22, r22
    1b34:	82 9f       	mul	r24, r18
    1b36:	22 27       	eor	r18, r18
    1b38:	b0 0d       	add	r27, r0
    1b3a:	a1 1d       	adc	r26, r1
    1b3c:	62 1f       	adc	r22, r18
    1b3e:	73 9f       	mul	r23, r19
    1b40:	b0 0d       	add	r27, r0
    1b42:	a1 1d       	adc	r26, r1
    1b44:	62 1f       	adc	r22, r18
    1b46:	83 9f       	mul	r24, r19
    1b48:	a0 0d       	add	r26, r0
    1b4a:	61 1d       	adc	r22, r1
    1b4c:	22 1f       	adc	r18, r18
    1b4e:	74 9f       	mul	r23, r20
    1b50:	33 27       	eor	r19, r19
    1b52:	a0 0d       	add	r26, r0
    1b54:	61 1d       	adc	r22, r1
    1b56:	23 1f       	adc	r18, r19
    1b58:	84 9f       	mul	r24, r20
    1b5a:	60 0d       	add	r22, r0
    1b5c:	21 1d       	adc	r18, r1
    1b5e:	82 2f       	mov	r24, r18
    1b60:	76 2f       	mov	r23, r22
    1b62:	6a 2f       	mov	r22, r26
    1b64:	11 24       	eor	r1, r1
    1b66:	9f 57       	subi	r25, 0x7F	; 127
    1b68:	50 40       	sbci	r21, 0x00	; 0
    1b6a:	8a f0       	brmi	.+34     	; 0x1b8e <__mulsf3_pse+0x84>
    1b6c:	e1 f0       	breq	.+56     	; 0x1ba6 <__mulsf3_pse+0x9c>
    1b6e:	88 23       	and	r24, r24
    1b70:	4a f0       	brmi	.+18     	; 0x1b84 <__mulsf3_pse+0x7a>
    1b72:	ee 0f       	add	r30, r30
    1b74:	ff 1f       	adc	r31, r31
    1b76:	bb 1f       	adc	r27, r27
    1b78:	66 1f       	adc	r22, r22
    1b7a:	77 1f       	adc	r23, r23
    1b7c:	88 1f       	adc	r24, r24
    1b7e:	91 50       	subi	r25, 0x01	; 1
    1b80:	50 40       	sbci	r21, 0x00	; 0
    1b82:	a9 f7       	brne	.-22     	; 0x1b6e <__mulsf3_pse+0x64>
    1b84:	9e 3f       	cpi	r25, 0xFE	; 254
    1b86:	51 05       	cpc	r21, r1
    1b88:	70 f0       	brcs	.+28     	; 0x1ba6 <__mulsf3_pse+0x9c>
    1b8a:	14 c0       	rjmp	.+40     	; 0x1bb4 <__fp_inf>
    1b8c:	5e c0       	rjmp	.+188    	; 0x1c4a <__fp_szero>
    1b8e:	5f 3f       	cpi	r21, 0xFF	; 255
    1b90:	ec f3       	brlt	.-6      	; 0x1b8c <__mulsf3_pse+0x82>
    1b92:	98 3e       	cpi	r25, 0xE8	; 232
    1b94:	dc f3       	brlt	.-10     	; 0x1b8c <__mulsf3_pse+0x82>
    1b96:	86 95       	lsr	r24
    1b98:	77 95       	ror	r23
    1b9a:	67 95       	ror	r22
    1b9c:	b7 95       	ror	r27
    1b9e:	f7 95       	ror	r31
    1ba0:	e7 95       	ror	r30
    1ba2:	9f 5f       	subi	r25, 0xFF	; 255
    1ba4:	c1 f7       	brne	.-16     	; 0x1b96 <__mulsf3_pse+0x8c>
    1ba6:	fe 2b       	or	r31, r30
    1ba8:	88 0f       	add	r24, r24
    1baa:	91 1d       	adc	r25, r1
    1bac:	96 95       	lsr	r25
    1bae:	87 95       	ror	r24
    1bb0:	97 f9       	bld	r25, 7
    1bb2:	08 95       	ret

00001bb4 <__fp_inf>:
    1bb4:	97 f9       	bld	r25, 7
    1bb6:	9f 67       	ori	r25, 0x7F	; 127
    1bb8:	80 e8       	ldi	r24, 0x80	; 128
    1bba:	70 e0       	ldi	r23, 0x00	; 0
    1bbc:	60 e0       	ldi	r22, 0x00	; 0
    1bbe:	08 95       	ret

00001bc0 <__fp_nan>:
    1bc0:	9f ef       	ldi	r25, 0xFF	; 255
    1bc2:	80 ec       	ldi	r24, 0xC0	; 192
    1bc4:	08 95       	ret

00001bc6 <__fp_pscA>:
    1bc6:	00 24       	eor	r0, r0
    1bc8:	0a 94       	dec	r0
    1bca:	16 16       	cp	r1, r22
    1bcc:	17 06       	cpc	r1, r23
    1bce:	18 06       	cpc	r1, r24
    1bd0:	09 06       	cpc	r0, r25
    1bd2:	08 95       	ret

00001bd4 <__fp_pscB>:
    1bd4:	00 24       	eor	r0, r0
    1bd6:	0a 94       	dec	r0
    1bd8:	12 16       	cp	r1, r18
    1bda:	13 06       	cpc	r1, r19
    1bdc:	14 06       	cpc	r1, r20
    1bde:	05 06       	cpc	r0, r21
    1be0:	08 95       	ret

00001be2 <__fp_round>:
    1be2:	09 2e       	mov	r0, r25
    1be4:	03 94       	inc	r0
    1be6:	00 0c       	add	r0, r0
    1be8:	11 f4       	brne	.+4      	; 0x1bee <__fp_round+0xc>
    1bea:	88 23       	and	r24, r24
    1bec:	52 f0       	brmi	.+20     	; 0x1c02 <__fp_round+0x20>
    1bee:	bb 0f       	add	r27, r27
    1bf0:	40 f4       	brcc	.+16     	; 0x1c02 <__fp_round+0x20>
    1bf2:	bf 2b       	or	r27, r31
    1bf4:	11 f4       	brne	.+4      	; 0x1bfa <__fp_round+0x18>
    1bf6:	60 ff       	sbrs	r22, 0
    1bf8:	04 c0       	rjmp	.+8      	; 0x1c02 <__fp_round+0x20>
    1bfa:	6f 5f       	subi	r22, 0xFF	; 255
    1bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bfe:	8f 4f       	sbci	r24, 0xFF	; 255
    1c00:	9f 4f       	sbci	r25, 0xFF	; 255
    1c02:	08 95       	ret

00001c04 <__fp_split3>:
    1c04:	57 fd       	sbrc	r21, 7
    1c06:	90 58       	subi	r25, 0x80	; 128
    1c08:	44 0f       	add	r20, r20
    1c0a:	55 1f       	adc	r21, r21
    1c0c:	59 f0       	breq	.+22     	; 0x1c24 <__fp_splitA+0x10>
    1c0e:	5f 3f       	cpi	r21, 0xFF	; 255
    1c10:	71 f0       	breq	.+28     	; 0x1c2e <__fp_splitA+0x1a>
    1c12:	47 95       	ror	r20

00001c14 <__fp_splitA>:
    1c14:	88 0f       	add	r24, r24
    1c16:	97 fb       	bst	r25, 7
    1c18:	99 1f       	adc	r25, r25
    1c1a:	61 f0       	breq	.+24     	; 0x1c34 <__fp_splitA+0x20>
    1c1c:	9f 3f       	cpi	r25, 0xFF	; 255
    1c1e:	79 f0       	breq	.+30     	; 0x1c3e <__fp_splitA+0x2a>
    1c20:	87 95       	ror	r24
    1c22:	08 95       	ret
    1c24:	12 16       	cp	r1, r18
    1c26:	13 06       	cpc	r1, r19
    1c28:	14 06       	cpc	r1, r20
    1c2a:	55 1f       	adc	r21, r21
    1c2c:	f2 cf       	rjmp	.-28     	; 0x1c12 <__fp_split3+0xe>
    1c2e:	46 95       	lsr	r20
    1c30:	f1 df       	rcall	.-30     	; 0x1c14 <__fp_splitA>
    1c32:	08 c0       	rjmp	.+16     	; 0x1c44 <__fp_splitA+0x30>
    1c34:	16 16       	cp	r1, r22
    1c36:	17 06       	cpc	r1, r23
    1c38:	18 06       	cpc	r1, r24
    1c3a:	99 1f       	adc	r25, r25
    1c3c:	f1 cf       	rjmp	.-30     	; 0x1c20 <__fp_splitA+0xc>
    1c3e:	86 95       	lsr	r24
    1c40:	71 05       	cpc	r23, r1
    1c42:	61 05       	cpc	r22, r1
    1c44:	08 94       	sec
    1c46:	08 95       	ret

00001c48 <__fp_zero>:
    1c48:	e8 94       	clt

00001c4a <__fp_szero>:
    1c4a:	bb 27       	eor	r27, r27
    1c4c:	66 27       	eor	r22, r22
    1c4e:	77 27       	eor	r23, r23
    1c50:	cb 01       	movw	r24, r22
    1c52:	97 f9       	bld	r25, 7
    1c54:	08 95       	ret

00001c56 <__ftoa_engine>:
    1c56:	28 30       	cpi	r18, 0x08	; 8
    1c58:	08 f0       	brcs	.+2      	; 0x1c5c <__ftoa_engine+0x6>
    1c5a:	27 e0       	ldi	r18, 0x07	; 7
    1c5c:	33 27       	eor	r19, r19
    1c5e:	da 01       	movw	r26, r20
    1c60:	99 0f       	add	r25, r25
    1c62:	31 1d       	adc	r19, r1
    1c64:	87 fd       	sbrc	r24, 7
    1c66:	91 60       	ori	r25, 0x01	; 1
    1c68:	00 96       	adiw	r24, 0x00	; 0
    1c6a:	61 05       	cpc	r22, r1
    1c6c:	71 05       	cpc	r23, r1
    1c6e:	39 f4       	brne	.+14     	; 0x1c7e <__ftoa_engine+0x28>
    1c70:	32 60       	ori	r19, 0x02	; 2
    1c72:	2e 5f       	subi	r18, 0xFE	; 254
    1c74:	3d 93       	st	X+, r19
    1c76:	30 e3       	ldi	r19, 0x30	; 48
    1c78:	2a 95       	dec	r18
    1c7a:	e1 f7       	brne	.-8      	; 0x1c74 <__ftoa_engine+0x1e>
    1c7c:	08 95       	ret
    1c7e:	9f 3f       	cpi	r25, 0xFF	; 255
    1c80:	30 f0       	brcs	.+12     	; 0x1c8e <__ftoa_engine+0x38>
    1c82:	80 38       	cpi	r24, 0x80	; 128
    1c84:	71 05       	cpc	r23, r1
    1c86:	61 05       	cpc	r22, r1
    1c88:	09 f0       	breq	.+2      	; 0x1c8c <__ftoa_engine+0x36>
    1c8a:	3c 5f       	subi	r19, 0xFC	; 252
    1c8c:	3c 5f       	subi	r19, 0xFC	; 252
    1c8e:	3d 93       	st	X+, r19
    1c90:	91 30       	cpi	r25, 0x01	; 1
    1c92:	08 f0       	brcs	.+2      	; 0x1c96 <__ftoa_engine+0x40>
    1c94:	80 68       	ori	r24, 0x80	; 128
    1c96:	91 1d       	adc	r25, r1
    1c98:	df 93       	push	r29
    1c9a:	cf 93       	push	r28
    1c9c:	1f 93       	push	r17
    1c9e:	0f 93       	push	r16
    1ca0:	ff 92       	push	r15
    1ca2:	ef 92       	push	r14
    1ca4:	19 2f       	mov	r17, r25
    1ca6:	98 7f       	andi	r25, 0xF8	; 248
    1ca8:	96 95       	lsr	r25
    1caa:	e9 2f       	mov	r30, r25
    1cac:	96 95       	lsr	r25
    1cae:	96 95       	lsr	r25
    1cb0:	e9 0f       	add	r30, r25
    1cb2:	ff 27       	eor	r31, r31
    1cb4:	ea 5b       	subi	r30, 0xBA	; 186
    1cb6:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb8:	99 27       	eor	r25, r25
    1cba:	33 27       	eor	r19, r19
    1cbc:	ee 24       	eor	r14, r14
    1cbe:	ff 24       	eor	r15, r15
    1cc0:	a7 01       	movw	r20, r14
    1cc2:	e7 01       	movw	r28, r14
    1cc4:	05 90       	lpm	r0, Z+
    1cc6:	08 94       	sec
    1cc8:	07 94       	ror	r0
    1cca:	28 f4       	brcc	.+10     	; 0x1cd6 <__ftoa_engine+0x80>
    1ccc:	36 0f       	add	r19, r22
    1cce:	e7 1e       	adc	r14, r23
    1cd0:	f8 1e       	adc	r15, r24
    1cd2:	49 1f       	adc	r20, r25
    1cd4:	51 1d       	adc	r21, r1
    1cd6:	66 0f       	add	r22, r22
    1cd8:	77 1f       	adc	r23, r23
    1cda:	88 1f       	adc	r24, r24
    1cdc:	99 1f       	adc	r25, r25
    1cde:	06 94       	lsr	r0
    1ce0:	a1 f7       	brne	.-24     	; 0x1cca <__ftoa_engine+0x74>
    1ce2:	05 90       	lpm	r0, Z+
    1ce4:	07 94       	ror	r0
    1ce6:	28 f4       	brcc	.+10     	; 0x1cf2 <__ftoa_engine+0x9c>
    1ce8:	e7 0e       	add	r14, r23
    1cea:	f8 1e       	adc	r15, r24
    1cec:	49 1f       	adc	r20, r25
    1cee:	56 1f       	adc	r21, r22
    1cf0:	c1 1d       	adc	r28, r1
    1cf2:	77 0f       	add	r23, r23
    1cf4:	88 1f       	adc	r24, r24
    1cf6:	99 1f       	adc	r25, r25
    1cf8:	66 1f       	adc	r22, r22
    1cfa:	06 94       	lsr	r0
    1cfc:	a1 f7       	brne	.-24     	; 0x1ce6 <__ftoa_engine+0x90>
    1cfe:	05 90       	lpm	r0, Z+
    1d00:	07 94       	ror	r0
    1d02:	28 f4       	brcc	.+10     	; 0x1d0e <__ftoa_engine+0xb8>
    1d04:	f8 0e       	add	r15, r24
    1d06:	49 1f       	adc	r20, r25
    1d08:	56 1f       	adc	r21, r22
    1d0a:	c7 1f       	adc	r28, r23
    1d0c:	d1 1d       	adc	r29, r1
    1d0e:	88 0f       	add	r24, r24
    1d10:	99 1f       	adc	r25, r25
    1d12:	66 1f       	adc	r22, r22
    1d14:	77 1f       	adc	r23, r23
    1d16:	06 94       	lsr	r0
    1d18:	a1 f7       	brne	.-24     	; 0x1d02 <__ftoa_engine+0xac>
    1d1a:	05 90       	lpm	r0, Z+
    1d1c:	07 94       	ror	r0
    1d1e:	20 f4       	brcc	.+8      	; 0x1d28 <__ftoa_engine+0xd2>
    1d20:	49 0f       	add	r20, r25
    1d22:	56 1f       	adc	r21, r22
    1d24:	c7 1f       	adc	r28, r23
    1d26:	d8 1f       	adc	r29, r24
    1d28:	99 0f       	add	r25, r25
    1d2a:	66 1f       	adc	r22, r22
    1d2c:	77 1f       	adc	r23, r23
    1d2e:	88 1f       	adc	r24, r24
    1d30:	06 94       	lsr	r0
    1d32:	a9 f7       	brne	.-22     	; 0x1d1e <__ftoa_engine+0xc8>
    1d34:	84 91       	lpm	r24, Z
    1d36:	10 95       	com	r17
    1d38:	17 70       	andi	r17, 0x07	; 7
    1d3a:	41 f0       	breq	.+16     	; 0x1d4c <__ftoa_engine+0xf6>
    1d3c:	d6 95       	lsr	r29
    1d3e:	c7 95       	ror	r28
    1d40:	57 95       	ror	r21
    1d42:	47 95       	ror	r20
    1d44:	f7 94       	ror	r15
    1d46:	e7 94       	ror	r14
    1d48:	1a 95       	dec	r17
    1d4a:	c1 f7       	brne	.-16     	; 0x1d3c <__ftoa_engine+0xe6>
    1d4c:	ec ee       	ldi	r30, 0xEC	; 236
    1d4e:	f0 e0       	ldi	r31, 0x00	; 0
    1d50:	68 94       	set
    1d52:	15 90       	lpm	r1, Z+
    1d54:	15 91       	lpm	r17, Z+
    1d56:	35 91       	lpm	r19, Z+
    1d58:	65 91       	lpm	r22, Z+
    1d5a:	95 91       	lpm	r25, Z+
    1d5c:	05 90       	lpm	r0, Z+
    1d5e:	7f e2       	ldi	r23, 0x2F	; 47
    1d60:	73 95       	inc	r23
    1d62:	e1 18       	sub	r14, r1
    1d64:	f1 0a       	sbc	r15, r17
    1d66:	43 0b       	sbc	r20, r19
    1d68:	56 0b       	sbc	r21, r22
    1d6a:	c9 0b       	sbc	r28, r25
    1d6c:	d0 09       	sbc	r29, r0
    1d6e:	c0 f7       	brcc	.-16     	; 0x1d60 <__ftoa_engine+0x10a>
    1d70:	e1 0c       	add	r14, r1
    1d72:	f1 1e       	adc	r15, r17
    1d74:	43 1f       	adc	r20, r19
    1d76:	56 1f       	adc	r21, r22
    1d78:	c9 1f       	adc	r28, r25
    1d7a:	d0 1d       	adc	r29, r0
    1d7c:	7e f4       	brtc	.+30     	; 0x1d9c <__ftoa_engine+0x146>
    1d7e:	70 33       	cpi	r23, 0x30	; 48
    1d80:	11 f4       	brne	.+4      	; 0x1d86 <__ftoa_engine+0x130>
    1d82:	8a 95       	dec	r24
    1d84:	e6 cf       	rjmp	.-52     	; 0x1d52 <__ftoa_engine+0xfc>
    1d86:	e8 94       	clt
    1d88:	01 50       	subi	r16, 0x01	; 1
    1d8a:	30 f0       	brcs	.+12     	; 0x1d98 <__ftoa_engine+0x142>
    1d8c:	08 0f       	add	r16, r24
    1d8e:	0a f4       	brpl	.+2      	; 0x1d92 <__ftoa_engine+0x13c>
    1d90:	00 27       	eor	r16, r16
    1d92:	02 17       	cp	r16, r18
    1d94:	08 f4       	brcc	.+2      	; 0x1d98 <__ftoa_engine+0x142>
    1d96:	20 2f       	mov	r18, r16
    1d98:	23 95       	inc	r18
    1d9a:	02 2f       	mov	r16, r18
    1d9c:	7a 33       	cpi	r23, 0x3A	; 58
    1d9e:	28 f0       	brcs	.+10     	; 0x1daa <__ftoa_engine+0x154>
    1da0:	79 e3       	ldi	r23, 0x39	; 57
    1da2:	7d 93       	st	X+, r23
    1da4:	2a 95       	dec	r18
    1da6:	e9 f7       	brne	.-6      	; 0x1da2 <__ftoa_engine+0x14c>
    1da8:	10 c0       	rjmp	.+32     	; 0x1dca <__ftoa_engine+0x174>
    1daa:	7d 93       	st	X+, r23
    1dac:	2a 95       	dec	r18
    1dae:	89 f6       	brne	.-94     	; 0x1d52 <__ftoa_engine+0xfc>
    1db0:	06 94       	lsr	r0
    1db2:	97 95       	ror	r25
    1db4:	67 95       	ror	r22
    1db6:	37 95       	ror	r19
    1db8:	17 95       	ror	r17
    1dba:	17 94       	ror	r1
    1dbc:	e1 18       	sub	r14, r1
    1dbe:	f1 0a       	sbc	r15, r17
    1dc0:	43 0b       	sbc	r20, r19
    1dc2:	56 0b       	sbc	r21, r22
    1dc4:	c9 0b       	sbc	r28, r25
    1dc6:	d0 09       	sbc	r29, r0
    1dc8:	98 f0       	brcs	.+38     	; 0x1df0 <__ftoa_engine+0x19a>
    1dca:	23 95       	inc	r18
    1dcc:	7e 91       	ld	r23, -X
    1dce:	73 95       	inc	r23
    1dd0:	7a 33       	cpi	r23, 0x3A	; 58
    1dd2:	08 f0       	brcs	.+2      	; 0x1dd6 <__ftoa_engine+0x180>
    1dd4:	70 e3       	ldi	r23, 0x30	; 48
    1dd6:	7c 93       	st	X, r23
    1dd8:	20 13       	cpse	r18, r16
    1dda:	b8 f7       	brcc	.-18     	; 0x1dca <__ftoa_engine+0x174>
    1ddc:	7e 91       	ld	r23, -X
    1dde:	70 61       	ori	r23, 0x10	; 16
    1de0:	7d 93       	st	X+, r23
    1de2:	30 f0       	brcs	.+12     	; 0x1df0 <__ftoa_engine+0x19a>
    1de4:	83 95       	inc	r24
    1de6:	71 e3       	ldi	r23, 0x31	; 49
    1de8:	7d 93       	st	X+, r23
    1dea:	70 e3       	ldi	r23, 0x30	; 48
    1dec:	2a 95       	dec	r18
    1dee:	e1 f7       	brne	.-8      	; 0x1de8 <__ftoa_engine+0x192>
    1df0:	11 24       	eor	r1, r1
    1df2:	ef 90       	pop	r14
    1df4:	ff 90       	pop	r15
    1df6:	0f 91       	pop	r16
    1df8:	1f 91       	pop	r17
    1dfa:	cf 91       	pop	r28
    1dfc:	df 91       	pop	r29
    1dfe:	99 27       	eor	r25, r25
    1e00:	87 fd       	sbrc	r24, 7
    1e02:	90 95       	com	r25
    1e04:	08 95       	ret

00001e06 <isspace>:
    1e06:	91 11       	cpse	r25, r1
    1e08:	93 c1       	rjmp	.+806    	; 0x2130 <__ctype_isfalse>
    1e0a:	80 32       	cpi	r24, 0x20	; 32
    1e0c:	19 f0       	breq	.+6      	; 0x1e14 <isspace+0xe>
    1e0e:	89 50       	subi	r24, 0x09	; 9
    1e10:	85 50       	subi	r24, 0x05	; 5
    1e12:	d0 f7       	brcc	.-12     	; 0x1e08 <isspace+0x2>
    1e14:	08 95       	ret

00001e16 <tolower>:
    1e16:	91 11       	cpse	r25, r1
    1e18:	08 95       	ret
    1e1a:	81 54       	subi	r24, 0x41	; 65
    1e1c:	8a 51       	subi	r24, 0x1A	; 26
    1e1e:	08 f4       	brcc	.+2      	; 0x1e22 <tolower+0xc>
    1e20:	80 5e       	subi	r24, 0xE0	; 224
    1e22:	85 5a       	subi	r24, 0xA5	; 165
    1e24:	08 95       	ret

00001e26 <strchr_P>:
    1e26:	fc 01       	movw	r30, r24
    1e28:	05 90       	lpm	r0, Z+
    1e2a:	06 16       	cp	r0, r22
    1e2c:	21 f0       	breq	.+8      	; 0x1e36 <strchr_P+0x10>
    1e2e:	00 20       	and	r0, r0
    1e30:	d9 f7       	brne	.-10     	; 0x1e28 <strchr_P+0x2>
    1e32:	c0 01       	movw	r24, r0
    1e34:	08 95       	ret
    1e36:	31 97       	sbiw	r30, 0x01	; 1
    1e38:	cf 01       	movw	r24, r30
    1e3a:	08 95       	ret

00001e3c <strnlen_P>:
    1e3c:	fc 01       	movw	r30, r24
    1e3e:	05 90       	lpm	r0, Z+
    1e40:	61 50       	subi	r22, 0x01	; 1
    1e42:	70 40       	sbci	r23, 0x00	; 0
    1e44:	01 10       	cpse	r0, r1
    1e46:	d8 f7       	brcc	.-10     	; 0x1e3e <strnlen_P+0x2>
    1e48:	80 95       	com	r24
    1e4a:	90 95       	com	r25
    1e4c:	8e 0f       	add	r24, r30
    1e4e:	9f 1f       	adc	r25, r31
    1e50:	08 95       	ret

00001e52 <strnlen>:
    1e52:	fc 01       	movw	r30, r24
    1e54:	61 50       	subi	r22, 0x01	; 1
    1e56:	70 40       	sbci	r23, 0x00	; 0
    1e58:	01 90       	ld	r0, Z+
    1e5a:	01 10       	cpse	r0, r1
    1e5c:	d8 f7       	brcc	.-10     	; 0x1e54 <strnlen+0x2>
    1e5e:	80 95       	com	r24
    1e60:	90 95       	com	r25
    1e62:	8e 0f       	add	r24, r30
    1e64:	9f 1f       	adc	r25, r31
    1e66:	08 95       	ret

00001e68 <fgetc>:
    1e68:	cf 93       	push	r28
    1e6a:	df 93       	push	r29
    1e6c:	ec 01       	movw	r28, r24
    1e6e:	2b 81       	ldd	r18, Y+3	; 0x03
    1e70:	20 ff       	sbrs	r18, 0
    1e72:	33 c0       	rjmp	.+102    	; 0x1eda <fgetc+0x72>
    1e74:	26 ff       	sbrs	r18, 6
    1e76:	0a c0       	rjmp	.+20     	; 0x1e8c <fgetc+0x24>
    1e78:	2f 7b       	andi	r18, 0xBF	; 191
    1e7a:	2b 83       	std	Y+3, r18	; 0x03
    1e7c:	8e 81       	ldd	r24, Y+6	; 0x06
    1e7e:	9f 81       	ldd	r25, Y+7	; 0x07
    1e80:	01 96       	adiw	r24, 0x01	; 1
    1e82:	9f 83       	std	Y+7, r25	; 0x07
    1e84:	8e 83       	std	Y+6, r24	; 0x06
    1e86:	8a 81       	ldd	r24, Y+2	; 0x02
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	29 c0       	rjmp	.+82     	; 0x1ede <fgetc+0x76>
    1e8c:	22 ff       	sbrs	r18, 2
    1e8e:	0f c0       	rjmp	.+30     	; 0x1eae <fgetc+0x46>
    1e90:	e8 81       	ld	r30, Y
    1e92:	f9 81       	ldd	r31, Y+1	; 0x01
    1e94:	80 81       	ld	r24, Z
    1e96:	08 2e       	mov	r0, r24
    1e98:	00 0c       	add	r0, r0
    1e9a:	99 0b       	sbc	r25, r25
    1e9c:	00 97       	sbiw	r24, 0x00	; 0
    1e9e:	19 f4       	brne	.+6      	; 0x1ea6 <fgetc+0x3e>
    1ea0:	20 62       	ori	r18, 0x20	; 32
    1ea2:	2b 83       	std	Y+3, r18	; 0x03
    1ea4:	1a c0       	rjmp	.+52     	; 0x1eda <fgetc+0x72>
    1ea6:	31 96       	adiw	r30, 0x01	; 1
    1ea8:	f9 83       	std	Y+1, r31	; 0x01
    1eaa:	e8 83       	st	Y, r30
    1eac:	0e c0       	rjmp	.+28     	; 0x1eca <fgetc+0x62>
    1eae:	ea 85       	ldd	r30, Y+10	; 0x0a
    1eb0:	fb 85       	ldd	r31, Y+11	; 0x0b
    1eb2:	19 95       	eicall
    1eb4:	97 ff       	sbrs	r25, 7
    1eb6:	09 c0       	rjmp	.+18     	; 0x1eca <fgetc+0x62>
    1eb8:	2b 81       	ldd	r18, Y+3	; 0x03
    1eba:	01 96       	adiw	r24, 0x01	; 1
    1ebc:	11 f0       	breq	.+4      	; 0x1ec2 <fgetc+0x5a>
    1ebe:	80 e2       	ldi	r24, 0x20	; 32
    1ec0:	01 c0       	rjmp	.+2      	; 0x1ec4 <fgetc+0x5c>
    1ec2:	80 e1       	ldi	r24, 0x10	; 16
    1ec4:	82 2b       	or	r24, r18
    1ec6:	8b 83       	std	Y+3, r24	; 0x03
    1ec8:	08 c0       	rjmp	.+16     	; 0x1eda <fgetc+0x72>
    1eca:	2e 81       	ldd	r18, Y+6	; 0x06
    1ecc:	3f 81       	ldd	r19, Y+7	; 0x07
    1ece:	2f 5f       	subi	r18, 0xFF	; 255
    1ed0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ed2:	3f 83       	std	Y+7, r19	; 0x07
    1ed4:	2e 83       	std	Y+6, r18	; 0x06
    1ed6:	99 27       	eor	r25, r25
    1ed8:	02 c0       	rjmp	.+4      	; 0x1ede <fgetc+0x76>
    1eda:	8f ef       	ldi	r24, 0xFF	; 255
    1edc:	9f ef       	ldi	r25, 0xFF	; 255
    1ede:	df 91       	pop	r29
    1ee0:	cf 91       	pop	r28
    1ee2:	08 95       	ret

00001ee4 <fputc>:
    1ee4:	0f 93       	push	r16
    1ee6:	1f 93       	push	r17
    1ee8:	cf 93       	push	r28
    1eea:	df 93       	push	r29
    1eec:	fb 01       	movw	r30, r22
    1eee:	23 81       	ldd	r18, Z+3	; 0x03
    1ef0:	21 fd       	sbrc	r18, 1
    1ef2:	03 c0       	rjmp	.+6      	; 0x1efa <fputc+0x16>
    1ef4:	8f ef       	ldi	r24, 0xFF	; 255
    1ef6:	9f ef       	ldi	r25, 0xFF	; 255
    1ef8:	2c c0       	rjmp	.+88     	; 0x1f52 <fputc+0x6e>
    1efa:	22 ff       	sbrs	r18, 2
    1efc:	16 c0       	rjmp	.+44     	; 0x1f2a <fputc+0x46>
    1efe:	46 81       	ldd	r20, Z+6	; 0x06
    1f00:	57 81       	ldd	r21, Z+7	; 0x07
    1f02:	24 81       	ldd	r18, Z+4	; 0x04
    1f04:	35 81       	ldd	r19, Z+5	; 0x05
    1f06:	42 17       	cp	r20, r18
    1f08:	53 07       	cpc	r21, r19
    1f0a:	44 f4       	brge	.+16     	; 0x1f1c <fputc+0x38>
    1f0c:	a0 81       	ld	r26, Z
    1f0e:	b1 81       	ldd	r27, Z+1	; 0x01
    1f10:	9d 01       	movw	r18, r26
    1f12:	2f 5f       	subi	r18, 0xFF	; 255
    1f14:	3f 4f       	sbci	r19, 0xFF	; 255
    1f16:	31 83       	std	Z+1, r19	; 0x01
    1f18:	20 83       	st	Z, r18
    1f1a:	8c 93       	st	X, r24
    1f1c:	26 81       	ldd	r18, Z+6	; 0x06
    1f1e:	37 81       	ldd	r19, Z+7	; 0x07
    1f20:	2f 5f       	subi	r18, 0xFF	; 255
    1f22:	3f 4f       	sbci	r19, 0xFF	; 255
    1f24:	37 83       	std	Z+7, r19	; 0x07
    1f26:	26 83       	std	Z+6, r18	; 0x06
    1f28:	14 c0       	rjmp	.+40     	; 0x1f52 <fputc+0x6e>
    1f2a:	8b 01       	movw	r16, r22
    1f2c:	ec 01       	movw	r28, r24
    1f2e:	fb 01       	movw	r30, r22
    1f30:	00 84       	ldd	r0, Z+8	; 0x08
    1f32:	f1 85       	ldd	r31, Z+9	; 0x09
    1f34:	e0 2d       	mov	r30, r0
    1f36:	19 95       	eicall
    1f38:	89 2b       	or	r24, r25
    1f3a:	e1 f6       	brne	.-72     	; 0x1ef4 <fputc+0x10>
    1f3c:	d8 01       	movw	r26, r16
    1f3e:	16 96       	adiw	r26, 0x06	; 6
    1f40:	8d 91       	ld	r24, X+
    1f42:	9c 91       	ld	r25, X
    1f44:	17 97       	sbiw	r26, 0x07	; 7
    1f46:	01 96       	adiw	r24, 0x01	; 1
    1f48:	17 96       	adiw	r26, 0x07	; 7
    1f4a:	9c 93       	st	X, r25
    1f4c:	8e 93       	st	-X, r24
    1f4e:	16 97       	sbiw	r26, 0x06	; 6
    1f50:	ce 01       	movw	r24, r28
    1f52:	df 91       	pop	r29
    1f54:	cf 91       	pop	r28
    1f56:	1f 91       	pop	r17
    1f58:	0f 91       	pop	r16
    1f5a:	08 95       	ret

00001f5c <printf>:
    1f5c:	cf 93       	push	r28
    1f5e:	df 93       	push	r29
    1f60:	cd b7       	in	r28, 0x3d	; 61
    1f62:	de b7       	in	r29, 0x3e	; 62
    1f64:	ae 01       	movw	r20, r28
    1f66:	4a 5f       	subi	r20, 0xFA	; 250
    1f68:	5f 4f       	sbci	r21, 0xFF	; 255
    1f6a:	fa 01       	movw	r30, r20
    1f6c:	61 91       	ld	r22, Z+
    1f6e:	71 91       	ld	r23, Z+
    1f70:	af 01       	movw	r20, r30
    1f72:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <__data_end+0x2>
    1f76:	90 91 fd 02 	lds	r25, 0x02FD	; 0x8002fd <__data_end+0x3>
    1f7a:	0e 94 7d 05 	call	0xafa	; 0xafa <vfprintf>
    1f7e:	df 91       	pop	r29
    1f80:	cf 91       	pop	r28
    1f82:	08 95       	ret

00001f84 <puts>:
    1f84:	0f 93       	push	r16
    1f86:	1f 93       	push	r17
    1f88:	cf 93       	push	r28
    1f8a:	df 93       	push	r29
    1f8c:	e0 91 fc 02 	lds	r30, 0x02FC	; 0x8002fc <__data_end+0x2>
    1f90:	f0 91 fd 02 	lds	r31, 0x02FD	; 0x8002fd <__data_end+0x3>
    1f94:	23 81       	ldd	r18, Z+3	; 0x03
    1f96:	21 ff       	sbrs	r18, 1
    1f98:	1b c0       	rjmp	.+54     	; 0x1fd0 <puts+0x4c>
    1f9a:	8c 01       	movw	r16, r24
    1f9c:	d0 e0       	ldi	r29, 0x00	; 0
    1f9e:	c0 e0       	ldi	r28, 0x00	; 0
    1fa0:	f8 01       	movw	r30, r16
    1fa2:	81 91       	ld	r24, Z+
    1fa4:	8f 01       	movw	r16, r30
    1fa6:	60 91 fc 02 	lds	r22, 0x02FC	; 0x8002fc <__data_end+0x2>
    1faa:	70 91 fd 02 	lds	r23, 0x02FD	; 0x8002fd <__data_end+0x3>
    1fae:	db 01       	movw	r26, r22
    1fb0:	18 96       	adiw	r26, 0x08	; 8
    1fb2:	ed 91       	ld	r30, X+
    1fb4:	fc 91       	ld	r31, X
    1fb6:	19 97       	sbiw	r26, 0x09	; 9
    1fb8:	88 23       	and	r24, r24
    1fba:	31 f0       	breq	.+12     	; 0x1fc8 <puts+0x44>
    1fbc:	19 95       	eicall
    1fbe:	89 2b       	or	r24, r25
    1fc0:	79 f3       	breq	.-34     	; 0x1fa0 <puts+0x1c>
    1fc2:	df ef       	ldi	r29, 0xFF	; 255
    1fc4:	cf ef       	ldi	r28, 0xFF	; 255
    1fc6:	ec cf       	rjmp	.-40     	; 0x1fa0 <puts+0x1c>
    1fc8:	8a e0       	ldi	r24, 0x0A	; 10
    1fca:	19 95       	eicall
    1fcc:	89 2b       	or	r24, r25
    1fce:	19 f0       	breq	.+6      	; 0x1fd6 <puts+0x52>
    1fd0:	8f ef       	ldi	r24, 0xFF	; 255
    1fd2:	9f ef       	ldi	r25, 0xFF	; 255
    1fd4:	02 c0       	rjmp	.+4      	; 0x1fda <puts+0x56>
    1fd6:	8d 2f       	mov	r24, r29
    1fd8:	9c 2f       	mov	r25, r28
    1fda:	df 91       	pop	r29
    1fdc:	cf 91       	pop	r28
    1fde:	1f 91       	pop	r17
    1fe0:	0f 91       	pop	r16
    1fe2:	08 95       	ret

00001fe4 <sprintf>:
    1fe4:	0f 93       	push	r16
    1fe6:	1f 93       	push	r17
    1fe8:	cf 93       	push	r28
    1fea:	df 93       	push	r29
    1fec:	cd b7       	in	r28, 0x3d	; 61
    1fee:	de b7       	in	r29, 0x3e	; 62
    1ff0:	2e 97       	sbiw	r28, 0x0e	; 14
    1ff2:	0f b6       	in	r0, 0x3f	; 63
    1ff4:	f8 94       	cli
    1ff6:	de bf       	out	0x3e, r29	; 62
    1ff8:	0f be       	out	0x3f, r0	; 63
    1ffa:	cd bf       	out	0x3d, r28	; 61
    1ffc:	0e 89       	ldd	r16, Y+22	; 0x16
    1ffe:	1f 89       	ldd	r17, Y+23	; 0x17
    2000:	86 e0       	ldi	r24, 0x06	; 6
    2002:	8c 83       	std	Y+4, r24	; 0x04
    2004:	1a 83       	std	Y+2, r17	; 0x02
    2006:	09 83       	std	Y+1, r16	; 0x01
    2008:	8f ef       	ldi	r24, 0xFF	; 255
    200a:	9f e7       	ldi	r25, 0x7F	; 127
    200c:	9e 83       	std	Y+6, r25	; 0x06
    200e:	8d 83       	std	Y+5, r24	; 0x05
    2010:	ae 01       	movw	r20, r28
    2012:	46 5e       	subi	r20, 0xE6	; 230
    2014:	5f 4f       	sbci	r21, 0xFF	; 255
    2016:	68 8d       	ldd	r22, Y+24	; 0x18
    2018:	79 8d       	ldd	r23, Y+25	; 0x19
    201a:	ce 01       	movw	r24, r28
    201c:	01 96       	adiw	r24, 0x01	; 1
    201e:	0e 94 7d 05 	call	0xafa	; 0xafa <vfprintf>
    2022:	ef 81       	ldd	r30, Y+7	; 0x07
    2024:	f8 85       	ldd	r31, Y+8	; 0x08
    2026:	e0 0f       	add	r30, r16
    2028:	f1 1f       	adc	r31, r17
    202a:	10 82       	st	Z, r1
    202c:	2e 96       	adiw	r28, 0x0e	; 14
    202e:	0f b6       	in	r0, 0x3f	; 63
    2030:	f8 94       	cli
    2032:	de bf       	out	0x3e, r29	; 62
    2034:	0f be       	out	0x3f, r0	; 63
    2036:	cd bf       	out	0x3d, r28	; 61
    2038:	df 91       	pop	r29
    203a:	cf 91       	pop	r28
    203c:	1f 91       	pop	r17
    203e:	0f 91       	pop	r16
    2040:	08 95       	ret

00002042 <ungetc>:
    2042:	fb 01       	movw	r30, r22
    2044:	23 81       	ldd	r18, Z+3	; 0x03
    2046:	20 ff       	sbrs	r18, 0
    2048:	12 c0       	rjmp	.+36     	; 0x206e <ungetc+0x2c>
    204a:	26 fd       	sbrc	r18, 6
    204c:	10 c0       	rjmp	.+32     	; 0x206e <ungetc+0x2c>
    204e:	8f 3f       	cpi	r24, 0xFF	; 255
    2050:	3f ef       	ldi	r19, 0xFF	; 255
    2052:	93 07       	cpc	r25, r19
    2054:	61 f0       	breq	.+24     	; 0x206e <ungetc+0x2c>
    2056:	82 83       	std	Z+2, r24	; 0x02
    2058:	2f 7d       	andi	r18, 0xDF	; 223
    205a:	20 64       	ori	r18, 0x40	; 64
    205c:	23 83       	std	Z+3, r18	; 0x03
    205e:	26 81       	ldd	r18, Z+6	; 0x06
    2060:	37 81       	ldd	r19, Z+7	; 0x07
    2062:	21 50       	subi	r18, 0x01	; 1
    2064:	31 09       	sbc	r19, r1
    2066:	37 83       	std	Z+7, r19	; 0x07
    2068:	26 83       	std	Z+6, r18	; 0x06
    206a:	99 27       	eor	r25, r25
    206c:	08 95       	ret
    206e:	8f ef       	ldi	r24, 0xFF	; 255
    2070:	9f ef       	ldi	r25, 0xFF	; 255
    2072:	08 95       	ret

00002074 <__ultoa_invert>:
    2074:	fa 01       	movw	r30, r20
    2076:	aa 27       	eor	r26, r26
    2078:	28 30       	cpi	r18, 0x08	; 8
    207a:	51 f1       	breq	.+84     	; 0x20d0 <__ultoa_invert+0x5c>
    207c:	20 31       	cpi	r18, 0x10	; 16
    207e:	81 f1       	breq	.+96     	; 0x20e0 <__ultoa_invert+0x6c>
    2080:	e8 94       	clt
    2082:	6f 93       	push	r22
    2084:	6e 7f       	andi	r22, 0xFE	; 254
    2086:	6e 5f       	subi	r22, 0xFE	; 254
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	8f 4f       	sbci	r24, 0xFF	; 255
    208c:	9f 4f       	sbci	r25, 0xFF	; 255
    208e:	af 4f       	sbci	r26, 0xFF	; 255
    2090:	b1 e0       	ldi	r27, 0x01	; 1
    2092:	3e d0       	rcall	.+124    	; 0x2110 <__ultoa_invert+0x9c>
    2094:	b4 e0       	ldi	r27, 0x04	; 4
    2096:	3c d0       	rcall	.+120    	; 0x2110 <__ultoa_invert+0x9c>
    2098:	67 0f       	add	r22, r23
    209a:	78 1f       	adc	r23, r24
    209c:	89 1f       	adc	r24, r25
    209e:	9a 1f       	adc	r25, r26
    20a0:	a1 1d       	adc	r26, r1
    20a2:	68 0f       	add	r22, r24
    20a4:	79 1f       	adc	r23, r25
    20a6:	8a 1f       	adc	r24, r26
    20a8:	91 1d       	adc	r25, r1
    20aa:	a1 1d       	adc	r26, r1
    20ac:	6a 0f       	add	r22, r26
    20ae:	71 1d       	adc	r23, r1
    20b0:	81 1d       	adc	r24, r1
    20b2:	91 1d       	adc	r25, r1
    20b4:	a1 1d       	adc	r26, r1
    20b6:	20 d0       	rcall	.+64     	; 0x20f8 <__ultoa_invert+0x84>
    20b8:	09 f4       	brne	.+2      	; 0x20bc <__ultoa_invert+0x48>
    20ba:	68 94       	set
    20bc:	3f 91       	pop	r19
    20be:	2a e0       	ldi	r18, 0x0A	; 10
    20c0:	26 9f       	mul	r18, r22
    20c2:	11 24       	eor	r1, r1
    20c4:	30 19       	sub	r19, r0
    20c6:	30 5d       	subi	r19, 0xD0	; 208
    20c8:	31 93       	st	Z+, r19
    20ca:	de f6       	brtc	.-74     	; 0x2082 <__ultoa_invert+0xe>
    20cc:	cf 01       	movw	r24, r30
    20ce:	08 95       	ret
    20d0:	46 2f       	mov	r20, r22
    20d2:	47 70       	andi	r20, 0x07	; 7
    20d4:	40 5d       	subi	r20, 0xD0	; 208
    20d6:	41 93       	st	Z+, r20
    20d8:	b3 e0       	ldi	r27, 0x03	; 3
    20da:	0f d0       	rcall	.+30     	; 0x20fa <__ultoa_invert+0x86>
    20dc:	c9 f7       	brne	.-14     	; 0x20d0 <__ultoa_invert+0x5c>
    20de:	f6 cf       	rjmp	.-20     	; 0x20cc <__ultoa_invert+0x58>
    20e0:	46 2f       	mov	r20, r22
    20e2:	4f 70       	andi	r20, 0x0F	; 15
    20e4:	40 5d       	subi	r20, 0xD0	; 208
    20e6:	4a 33       	cpi	r20, 0x3A	; 58
    20e8:	18 f0       	brcs	.+6      	; 0x20f0 <__ultoa_invert+0x7c>
    20ea:	49 5d       	subi	r20, 0xD9	; 217
    20ec:	31 fd       	sbrc	r19, 1
    20ee:	40 52       	subi	r20, 0x20	; 32
    20f0:	41 93       	st	Z+, r20
    20f2:	02 d0       	rcall	.+4      	; 0x20f8 <__ultoa_invert+0x84>
    20f4:	a9 f7       	brne	.-22     	; 0x20e0 <__ultoa_invert+0x6c>
    20f6:	ea cf       	rjmp	.-44     	; 0x20cc <__ultoa_invert+0x58>
    20f8:	b4 e0       	ldi	r27, 0x04	; 4
    20fa:	a6 95       	lsr	r26
    20fc:	97 95       	ror	r25
    20fe:	87 95       	ror	r24
    2100:	77 95       	ror	r23
    2102:	67 95       	ror	r22
    2104:	ba 95       	dec	r27
    2106:	c9 f7       	brne	.-14     	; 0x20fa <__ultoa_invert+0x86>
    2108:	00 97       	sbiw	r24, 0x00	; 0
    210a:	61 05       	cpc	r22, r1
    210c:	71 05       	cpc	r23, r1
    210e:	08 95       	ret
    2110:	9b 01       	movw	r18, r22
    2112:	ac 01       	movw	r20, r24
    2114:	0a 2e       	mov	r0, r26
    2116:	06 94       	lsr	r0
    2118:	57 95       	ror	r21
    211a:	47 95       	ror	r20
    211c:	37 95       	ror	r19
    211e:	27 95       	ror	r18
    2120:	ba 95       	dec	r27
    2122:	c9 f7       	brne	.-14     	; 0x2116 <__ultoa_invert+0xa2>
    2124:	62 0f       	add	r22, r18
    2126:	73 1f       	adc	r23, r19
    2128:	84 1f       	adc	r24, r20
    212a:	95 1f       	adc	r25, r21
    212c:	a0 1d       	adc	r26, r0
    212e:	08 95       	ret

00002130 <__ctype_isfalse>:
    2130:	99 27       	eor	r25, r25
    2132:	88 27       	eor	r24, r24

00002134 <__ctype_istrue>:
    2134:	08 95       	ret

00002136 <_exit>:
    2136:	f8 94       	cli

00002138 <__stop_program>:
    2138:	ff cf       	rjmp	.-2      	; 0x2138 <__stop_program>
